{"version":3,"sources":["assets/sad_face_grey.png","assets/gesbank_logo.png","assets/ibt_logo.png","utils/componentUtils.js","components/WithErrorBoundary/WithErrorBoundary.jsx","constants/api.js","redux/actions/auth.js","redux/reducers/auth.js","redux/actions/globalError.js","redux/reducers/globalError.js","constants/user.js","constants/elements.js","utils/tableUtils.js","redux/actions/commonList.js","redux/reducers/commonList.js","redux/reducers/viewLists.js","redux/actions/user.js","redux/reducers/user.js","redux/actions/views/technicalAreaManager.js","redux/reducers/views/technicalAreaManager.js","redux/actions/views/revisionOfficeManager.js","redux/reducers/views/revisionOfficeManager.js","redux/actions/views/programmer.js","redux/reducers/views/programmer.js","redux/actions/views/client.js","redux/reducers/views/client.js","redux/reducers/index.js","utils/apiUtils.js","redux/sagas/api.js","redux/sagas/auth.js","redux/sagas/commonList.js","redux/sagas/utils.js","redux/sagas/views/technicalAreaManager.js","redux/sagas/views/programmer.js","redux/sagas/views/revisionOfficeManager.js","redux/sagas/views/client.js","redux/sagas/index.js","redux/configureStore.js","redux/notistackMiddleware.js","components/LogoLoader/LogoLoader.jsx","constants/routes.js","components/ResponsiveDialog/ResponsiveDialog.jsx","components/ElementDetailsDialog/ElementDetailsDialog.jsx","redux/actions/sendRequests.js","components/StatusIcon/StatusIcon.jsx","utils/viewUtils.js","views/styles.js","components/Table/TableDynamicBody/TableDynamicBody.jsx","components/Table/TablePaginationFooter/TablePaginationFooter.jsx","components/Table/TableSortableHeader/TableSortableHeader.jsx","components/Table/TableToolbar/TableToolbar.jsx","components/Table/WithTableFunctionality/WithTableFunctionality.jsx","components/ClientTable/ClientTable.jsx","components/InstallFeedbackDialog/InstallFeedbackDialog.jsx","views/ClientView/ClientView.jsx","components/Select/index.js","components/NewCommitDialog/NewCommitDialog.jsx","components/ProgrammerTable/ProgrammerTable.jsx","redux/actions/commits.js","views/CommitsCreationView/CommitsCreationView.jsx","components/NewSendRequestDialog/NewSendRequestDialog.jsx","views/SendRequestsCreationView/SendRequestsCreationView.jsx","components/RevisionTable/RevisionTable.jsx","views/CommitsRevisionView/CommitsRevisionView.jsx","views/SendRequestsRevisionView/SendRequestsRevisionView.jsx","components/DeliveryDialog/DeliveryDialog.jsx","components/DeliveryTable/DeliveryTable.jsx","views/RevisionOfficeManagerView/RevisionOfficeManagerView.jsx","constants/navigation.js","utils/colorUtils.js","components/InnerTabs/InnerTabs.jsx","components/Navigation/Navigation.jsx","routes/Home/Home.jsx","routes/Login/Login.jsx","routes/index.js","index.js","theme/configureTheme.js"],"names":["module","exports","__webpack_require__","p","getReactComponentName","component","displayName","name","errorBoxStyle","maxWidth","margin","padding","errorIconStyle","width","paddingBottom","display","withErrorBoundary","Component","_class","_temp","_React$Component","WithErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errorReceived","error","faultyComponentName","inherits","createClass","key","value","info","componentStack","slice","indexOf","trim","split","console","concat","setState","_this$state","react_default","a","createElement","style","alt","src","sad_face_grey","Typography_default","align","variant","paragraph","paddingLeft","window","location","hash","message","React","API_ENDPOINT_URL","TOKEN_LOCALSTORAGE_KEY","REQUEST_TIMEOUT_MS","LIST_AUTO_UPDATE_INTERVAL_MS","LIST_ELEMENTS_PER_PAGE","ELEMENT_TYPE","COMMITS","SEND_REQUESTS","CLIENTS","BRANCHES","ELEMENT_ENDPOINT_TYPE","ADD","LIST","SHORT_LIST","UPDATE","REMOVE","REQUEST_ENDPOINT_PATH","LOGIN","LOGOUT","VALIDATE_TOKEN","GET_USER_INFO","API_ERROR_STRING","MISSING_TOKEN","INVALID_TOKEN","INVALID_CREDENTIALS","INVALID_REQUEST","REQUEST_NOT_JSON","UNAUTHORIZED","DB_ERROR","NOT_IMPLEMENTED","USER_NOT_FOUND","INVALID_ID","LIST_INVALID_PARAMETER","REMOVE_COMMIT_ALREADY_INCLUDED","REMOVE_ALREADY_APPROVED","APPROVE_ALREADY_APPROVED","SEND_NOT_APPROVED","INSTALL_NOT_SENT","SERVER_IN_MAINTENANCE","AUTH_ACTION_TYPE","LOGIN_REQUESTED","LOGIN_SUCCESSFUL","LOGIN_FAILED","SESSION_EXPIRED","LOCAL_TOKEN_NOT_FOUND","TOKEN_VALIDATION_REQUESTED","TOKEN_VALIDATION_SUCCESSFUL","TOKEN_VALIDATION_FAILED","attemptLoginAction","username","password","type","performLogoutAction","accessToken","arguments","length","undefined","requestLocalTokenValidationAction","initialState","isAttemptingLogin","isValidatingToken","isSessionExpired","GLOBAL_ERROR_ACTION_TYPE","SAGA_ERROR","USER_TYPE_ID","PROGRAMMER","TECHNICAL_AREA_MANAGER","REVISION_OFFICE_MANAGER","CLIENT","USER_ROLE_STRING","COMMON_ELEMENT_ATTRIBUTE","ID","TITLE","DESCRIPTION","COMPONENTS","TIMESTAMP","UPDATE_TIMESTAMP","AUTHOR","APPROVAL_STATUS","APPROVER","BRANCH","SEND_REQUEST_ATTRIBUTE","LINKED_COMMITS","RECIPIENT_CLIENTS","INSTALL_LINK","INSTALL_TYPE","INSTALL_TIMESTAMP","INSTALL_STATUS","INSTALL_FEEDBACK","DELIVERY_TIMESTAMP","CLIENT_REPRESENTATIVES","ATTRIBUTE_LABEL","_ATTRIBUTE_LABEL","defineProperty","DURING_EXECUTION","NEEDS_SHUTDOWN","INSTALL_TYPE_LABEL","INSTALL_FAILED","NOT_YET_INSTALLED","INSTALL_SUCCESS","DELIVERED","APPROVED","PENDING","REJECTED","APPROVAL_STATUS_LABEL","_APPROVAL_STATUS_LABE","getSearchFilterOrDefault","searchQuery","defaultFilter","attribute","valueMatches","isSearchFilter","filter","getAlreadyReviewedFilter","valueDifferentFrom","getToBeReviewedFilter","getToBeDeliveredFilter","getAlreadyDeliveredFilter","getToBeInstalledFilter","getAlreadyInstalledFilter","LIST_ACTION_TYPE","PAGE_REQUEST","PAGE_RETRIEVAL_ERROR","PAGE_RETRIEVED_FROM_SERVER","NO_RETRIEVAL_NEEDED","UPDATE_RECEIVED","UPDATE_CHECKING_ERROR","START_AUTO_CHECKING","STOP_AUTO_CHECKING","SEARCH_QUERY_CHANGED","performNewSearchAction","pageRequestAction","elementType","userRoleString","pageNumber","limit","sortingCriteria","listPages","latestUpdateTimestamp","totalItemsCount","isLoadingList","errorWhileFetchingData","commonListReducer","action","objectSpread","newState","serverResponse","count_total","toConsumableArray","data","list","sorting","updateTimestamp","stateShapes","_stateShapes","_USER_TYPE_ID$PROGRAM","_USER_TYPE_ID$TECHNIC","USER_ACTION_TYPE","GET_CURRENT_USER_INFO_REQUEST","GET_CURRENT_USER_INFO_SUCCESSFUL","GET_CURRENT_USER_INFO_FAILED","requestCurrentUserInfoAction","id","area","email","roles","infoObtained","serverError","TECHNICAL_AREA_MANAGER_ACTION_TYPE","REVIEW_ITEM_REQUEST","REVIEW_ITEM_FAILED","REVIEW_ITEM_SUCCESSFUL","RESET_UI","reviewItemAction","elementId","approvalStatus","initialSubState","reviewInProgress","successfullyReviewed","reviewFailed","initialViewState","_initialViewState","REVISION_OFFICE_MANAGER_ACTION_TYPE","ELEMENT_DELIVERY_REQUEST","ELEMENT_DELIVERY_SUCCESSFUL","ELEMENT_DELIVERY_FAILED","RESET_FAILED_DELIVERY_FLAG","deliverElementAction","installLink","successfullyDeliveredElements","isDeliveringElement","lastDeliveryFailed","PROGRAMMER_ACTION_TYPE","ADD_ELEMENT_REQUEST","ADD_ELEMENT_SUCCESSFUL","ADD_ELEMENT_FAILED","REMOVE_ELEMENT_REQUEST","REMOVE_ELEMENT_SUCCESSFUL","REMOVE_ELEMENT_FAILED","GET_SHORT_LIST_REQUEST","GET_SHORT_LIST_SUCCESSFUL","GET_SHORT_LIST_FAILED","RESET_UI_STATE","addElementAction","payload","removeElementAction","getShortListForElementAction","resetUIStateAction","isRemovingElement","removedElementsIds","isAddingElement","isAdditionSuccessful","isAdditionFailed","isLoadingClients","allClients","isLoadingBranches","allBranches","isLoadingCommits","allCommits","handleGetShortList","isRequest","CLIENT_ACTION_TYPE","SEND_FEEDBACK_REQUEST","SEND_FEEDBACK_SUCCESSFUL","SEND_FEEDBACK_FAILED","RESET_FAILED_FEEDBACK_FLAG","sendFeedbackAction","installStatus","installFeedback","successfullySentFeedbackForElements","isSendingFeedback","lastFeedbackFailed","reducers","combineReducers","auth","user","user_id","area_id","area_name","role","lists","userTypeIds","forEach","userTypeId","keys","generateViewListsReducers","views","_combineReducers","handleGetShortListSuccessful","element","elementsReducer","globalError","makeUnauthenticatedApiRequest","requestPath","makeApiRequest","makeAuthenticatedApiRequest","requestData","timeoutInMilliseconds","requestUrl","init","headers","Content-Type","method","body","JSON","stringify","request_data","buildFetchInitParameter","abortController","AbortController","abortSignal","signal","setTimeout","abort","fetch","fetchWithTimeout","catch","printRequestErrorMessage","getRequestPath","requestType","getUIMessageForErrorString","errorString","saveAccessTokenToLocalStorage","log","localStorage","setItem","err","removeAccessTokenFromLocalStorage","removeItem","getAccessTokenFromState","makeRequestAndReportErrors","parseResponseJsonAndReportError","ApiRequest","errorAction","AuthenticatedApiRequest","_ApiRequest","apply","regenerator_default","mark","makeAndReportErrors","wrap","_context","prev","next","sent","abrupt","stop","makeWithTimeoutAndReportErrors","_context2","UnauthenticatedApiRequest","_ApiRequest2","_context3","_context4","_context5","select","Error","_marked","response","responseJson","_args6","_context6","put","errorMessage","ok","status","response_data","_marked2","_context7","json","t0","_marked3","authFlowSaga","notifyLogoutToServerAsync","requestLocalAccessTokenValidation","tokenAction","userLoggedIn","loginRequestAction","loginRequest","loginResponseData","userInfoRequest","userInfoResponseData","take","setRequestData","setErrorAction","token","auth_marked","fork","toPromise","then","statusText","auth_marked2","validationResponse","auth_marked3","retrieveListPage","checkForListUpdates","manageUpdateCheckingTasks","runListUpdateChecker","pageRequest","pageResponseData","pageNeedsToBeFetched","page","sort","columnKey","parameter","order","direction","commonList_marked","listState","currentPageState","requestedPageNotUpdated","pageSortingCriteriaIsDifferent","pageFilteringIsDifferent","updateRequest","updateResponseData","latest_update_timestamp","section","updates_found","commonList_marked2","actionsChannel","updateCheckingTasks","_loop","actionChannel","taskKey","cancel","delegateYield","commonList_marked3","delay","isListStateInitialized","isPageLoading","cancelled","finish","_marked4","listSagas","takeLatest","milliseconds","sagaPattern","task","_len","taskArgs","Array","_key","_callee","lastExecutedTask","latestAction","debounced","latestActionIfNotDebounced","_ref","_ref2","race","slicedToArray","strictDebounce","reviewListElement","request","approve_flag","technicalAreaManager_marked","technicalAreaManagerSagas","takeEvery","addElement","removeElement","getShortListForElement","programmer_marked","programmer_marked2","shortListResponseData","programmer_marked3","programmerSagas","deliverSendRequest","install_link","revisionOfficeManager_marked","revisionOfficeManagerSagas","sendInstallFeedback","install_status","feedback","client_marked","clientSagas","rootSaga","all","sagas_marked","configureStore","notistackCallback","enqueueSnackbar","composeWithDevToolsIfPresent","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","saga","createSagaMiddleware","notistack","getState","dispatch","autoHideDuration","preventDuplicate","store","createStore","applyMiddleware","run","withSnackbar","es","children","LogoLoader","classes","Grid_default","className","root","container","justify","alignItems","spacing","item","logo","gesbank_logo","CircularProgress_default","progress","color","withStyles","flexGrow","position","height","ROUTE","ROUTE_PARAM","TAB_VALUE","ResponsiveDialog","_this$props","isLoading","otherProps","objectWithoutProperties","Dialog_default","assign","fullWidth","showLoader","jssClasses","opaque","index_es","defaultProps","disableBackdropClick","zIndex","background","withMobileDialog","breakpoint","buttonToTheLeftStyle","marginRight","correctedActionsMargin","ElementDetailsDialog","elementFields","renderFieldContent","onClose","dialogTitle","renderExtraActions","backButtonToTheLeft","components_ResponsiveDialog_ResponsiveDialog","open","Fragment","DialogTitle_default","DialogContent_default","map","field","xs","md","fullRow","gutterBottom","label","DialogActions_default","disableActionSpacing","Button_default","onClick","retrieveSendRequestsListPageAction","startSendRequestsListUpdatesAutoCheckingAction","stopSendRequestsListUpdatesAutoCheckingAction","StatusIcon","opacity","opacityStyle","HighlightOff_default","Schedule_default","CheckCircleOutline_default","icon","PureComponent","theme","palette","approved","retrieveElementFromListState","rowIndex","find","renderElementFieldContent","attributeKey","components_StatusIcon_StatusIcon","Date","toLocaleString","Link_default","href","target","rel","commits","index","clients","representatives","renderElementFieldContentAsText","canElementBeRemoved","currentUser","isNotReviewed","createdByCurrentUser","programmerViewStyles","fab","right","bottom","viewStyles","paddingTop","paddingRight","breakpoints","up","paper","overflowX","errorColor","main","approvedColor","selectDialogStyles","dialogContent","overflowY","input","valueContainer","flexWrap","flex","overflow","chip","unit","noOptionsMessage","disabledEntryRowStyle","PLACEHOLDER_VALUE","TableDynamicBody","renderSkeleton","Children","TableRow_default","tableColumns","column","Hidden_default","smDown","displayOnMobile","TableCell_default","alignOption","renderErrorMessageWithRetryButton","loadCurrentPage","colSpan","verticallyAlignedContent","ErrorOutline_default","size","renderContent","_this$props2","tableData","renderCellContent","onElementClick","disabledEntries","isEntryDisabled","includes","hasRowOnClickHandler","handCursor","hover","columnIndex","_this$props3","displayError","TableBody_default","cursor","TablePaginationFooter","displayedRowsLabel","from","to","count","itemsCount","itemsPerPage","currentPage","onPageChange","TableFooter_default","TablePagination_default","rowsPerPage","rowsPerPageOptions","labelDisplayedRows","onChangePage","_","TableSortableHeader","onSortingUpdate","TableHead_default","TableSortLabel_default","active","notSortable","updatedSorting","TableToolbar","toolbarTitle","showAvailableUpdatesBadge","onSearchQueryChange","renderCustomContent","Toolbar_default","toolbarContainer","Badge_default","Refresh_default","search","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","inputInput","onChange","event","borderRadius","shape","borderWidth","borderStyle","borderColor","fade","common","black","&:hover","marginLeft","pointerEvents","justifyContent","transition","transitions","create","&:focus","withTableFunctionality","TableComponent","WithTableFunctionality","loadPage","nextPage","onSortingChange","nextSorting","onFilterChange","nextFilter","ACTIONS_COLUMN","alreadyInstalledTableColumns","toBeInstalledTableColumns","ClientTable","renderToolbarRadioButtons","showingUpdatesToBeInstalled","isShowingUpdatesToBeInstalled","isSearching","FormControlLabel_default","disabled","checked","control","Radio_default","onElementDownload","onElementFeedback","feedbackSentForElements","Done_default","IconButton_default","stopPropagation","GetApp_default","Feedback_default","nextProps","Table_TableToolbar_TableToolbar","newQuery","Table_default","TableSortableHeader_TableSortableHeader","Table_TableDynamicBody_TableDynamicBody","TablePaginationFooter_TablePaginationFooter","InstallFeedbackDialog","handleSelectChange","displayMissingInstallStatusError","handleFeedbackTextChange","handleSendButtonClick","sendRequest","onSend","isSending","displaySendError","toLocaleDateString","sm","Select_default","displayEmpty","OutlinedInput_default","labelWidth","MenuItem_default","selected","TextField_default","multiline","marginTop","detailsDialogFields","ClientView","downloadPatchFileInNewTab","sendRequestsData","hideDetailsModal","detailsModalOpen","hideFeedbackModal","resetFailedFeedbackFlag","feedbackModalOpen","currentlyShowingElement","startSendRequestsListUpdatesAutoChecking","stopSendRequestsListUpdatesAutoChecking","resetUI","_this2","retrieveSendRequestsListPage","performNewSearch","sendFeedback","Paper_default","components_ClientTable_ClientTable","ElementDetailsDialog_ElementDetailsDialog","InstallFeedbackDialog_InstallFeedbackDialog","connect","sendRequests","bindActionCreators","fontStyle","fontFamily","NoOptionsMessage","selectProps","innerProps","inputComponent","inputRef","ref","Control","InputProps","inputProps","innerRef","textFieldProps","ValueContainer","MultiValue","Chip_default","tabIndex","onDelete","removeProps","deleteIcon","Cancel_default","Menu","square","selectComponents","initialDialogState","title","description","branch","components","NewCommitDialog","onDialogClose","onDialogSend","onInputChanged","onSelectInputChanged","isFailed","isSuccessful","_this$state2","scroll","react_select_esm","InputLabelProps","shrink","options","isClearable","toBeReviewedTableColumns","alreadyReviewedTableColumns","ProgrammerTable","isDisplayingNotReviewedItems","isDisplayingToBeReviewedItems","tableToolbarTitle","retrieveCommitsListPageAction","startCommitsListUpdatesAutoCheckingAction","stopCommitsListUpdatesAutoCheckingAction","commitDetailsDialogFields","CommitsCreationView","renderRemoveDialogButtonIfNeeded","currentlyShowingCommit","onCloseClicked","resetUIState","showAddDialog","onSendClicked","show","isShowingNewCommitDialog","onFabClick","isShowingCommitDetails","startCommitsListUpdatesAutoChecking","stopCommitsListUpdatesAutoChecking","commitsData","retrieveCommitsListPage","components_ProgrammerTable_ProgrammerTable","Fab_default","aria-label","Add_default","components_NewCommitDialog_NewCommitDialog","installationType","destClients","NewSendRequestDialog","install_type","dest_clients","isMulti","FormControl_default","InputLabel_default","htmlFor","sendRequestDetailsDialogFields","SendRequestsCreationView","currentlyShowingSendRequest","isShowingNewSendRequestDialog","isShowingSendRequestDetails","components_NewSendRequestDialog_NewSendRequestDialog","client","commit","commit_id","REVIEW_BUTTONS_COLUMN","historyTableColumns","reviewTableColumns","RevisionTable","reviewMode","isReviewMode","onItemReview","successfullyReviewedItems","reviewInProgressItems","failedReviewItems","badge","errorBadge","badgeContent","parseInt","commitDetailsDialogFieldsForReview","CommitsRevisionView","renderApproveRejectModalActions","reviewItem","isReviewingCommits","components_RevisionTable_RevisionTable","isReviewing","sendRequestDetailsDialogFieldsForReview","SendRequestsRevisionView","isReviewingSendRequests","DeliveryDialog","handleLinkTextFieldChange","displayMissingLinkError","onDetailsClick","DELIVER_BUTTON_COLUMN","alreadyDeliveredTableColumns","toBeDeliveredTableColumns","DeliveryTable","deliveryMode","isDeliveryMode","onElementDelivery","Send_default","deliverMode","RevisionOfficeManagerView","hideDeliveryModal","resetDeliveryFailedFlag","deliveryModalOpen","components_DeliveryTable_DeliveryTable","DeliveryDialog_DeliveryDialog","deliverElement","NAVIGATION_HIERARCHY","routePath","drawerIcon","Code_default","visibleToRoles","tabs","RecordVoiceOver_default","Face_default","getSectionsForUserRoles","userRoles","isUserRole","roleId","sections","_i","_NAVIGATION_HIERARCHY","some","push","getRelativePathForUserRole","userRoleId","getRandomColor","i","Math","floor","random","InnerTabs","onTabClicked","tabValue","history","sectionUrl","match","Tabs_default","params","isWidthDown","scrollButtons","tab","Tab_default","withWidth","noSSR","Navigation","renderTabsRoutes","react_router","path","url","render","routeProps","components_InnerTabs_InnerTabs","renderMobileDrawer","Drawer_default","isDrawerOpen","closeDrawer","renderDrawerLayout","renderDesktopDrawer","drawer","anchor","onLogout","ListItem_default","ListItemIcon_default","Avatar_default","avatar","charAt","ListItemText_default","primary","secondary","onKeyDown","List_default","drawerItems","button","pathname","startsWith","onSectionClicked","ExitToApp_default","openDrawer","AppBar_default","appBar","menuButton","Menu_default","noWrap","mdUp","implementation","backgroundColor","Home","requestCurrentUserInfo","performLogout","components_Navigation_Navigation","content","renderContentSubRoutes","components_LogoLoader_LogoLoader","errorDialog","disableEscapeKeyDown","errorDialogText","dialogButton","tabRoutes","exact","dark","Login","_this$setState","onLoginButtonClicked","textFieldsAreValidated","attemptLogin","onEnterKeyClicked","usernameError","passwordError","_this$state3","Card_default","card","cardRoot","alignContent","ibt_logo","welcomeText","marginBottom","autoFocus","FormHelperText_default","loginButton","onKeyPress","footer","link","textAlign","alignSelf","AuthRoute","condition","redirectPath","rest","Routes","localAccessToken","getItem","requestLocalTokenValidation","notifyLocalTokenNotFound","react_router_dom","routes_AuthRoute","reload","createMuiTheme","white","default","light","contrastText","typography","useNextVariants","RootComponent","core_styles","build","maxSnack","anchorOrigin","vertical","horizontal","redux_configureStore","routes","ReactDOM","document","getElementById"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qPCAjC,SAASC,EAAsBC,GACpC,OAAOA,EAAUC,aAAeD,EAAUE,MAAQ,cCIpD,IAAMC,EAAgB,CACpBC,SAAU,QACVC,OAAQ,OACRC,QAAS,eAGLC,EAAiB,CACrBC,MAAO,QACPC,cAAe,OACfC,QAAS,QACTL,OAAQ,QA0BK,SAASM,EAAkBC,GAAW,IAAAC,EAAAC,EACnD,OAAAA,EAAAD,EAAA,SAAAE,GACE,SAAAC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,eAAe,EACfC,MAAO,KACPC,oBAAqB,IANNV,EADrB,OAAAC,OAAAU,EAAA,EAAAV,CAAAH,EAAAD,GAAAI,OAAAW,EAAA,EAAAX,CAAAH,EAAA,EAAAe,IAAA,oBAAAC,MAAA,SAkBoBL,EAAOM,GACvB,IAnCiCC,EAmC3BN,GAnC2BM,EAmCyBD,EAAKC,gBAjC/BC,MAAM,EAAGD,EAAeE,QAAQ,KAAM,IAAIC,OAE1DC,MAAM,KAAK,GAgC3BC,QAAQZ,MAAR,GAAAa,OACKb,EAAMzB,KADX,qBAAAsC,OACmCZ,EADnC,4BAEEK,EAAKC,gBAEPb,KAAKoB,SAAS,CAAEb,0BAxBpB,CAAAG,IAAA,SAAAC,MAAA,WA2BW,IAAAU,EAC+CrB,KAAKI,MAAnDC,EADDgB,EACChB,cAAeC,EADhBe,EACgBf,MAAOC,EADvBc,EACuBd,oBAC9B,OAAOF,EACLiB,EAAAC,EAAAC,cAAA,OAAKC,MAAO3C,GACVwC,EAAAC,EAAAC,cAAA,OAAKE,IAAI,WAAWC,IAAKC,IAAeH,MAAOvC,IAC/CoC,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYO,MAAM,SAASC,QAAQ,KAAKC,WAAS,GAAjD,SAGAV,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYO,MAAM,SAASC,QAAQ,YAAYC,WAAS,GAAxD,kFAEEV,EAAAC,EAAAC,cAAA,WAFF,iEAKAF,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYE,MAAO,CAAEQ,YAAa,OAASF,QAAQ,SACjDT,EAAAC,EAAAC,cAAA,4BADF,IAC0BU,OAAOC,SAASC,KACxCd,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sDAHF,IAGiDjB,EAC/Ce,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BALF,IAK4BlB,EAAMzB,KAChCyC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uBAPF,IAOqBlB,EAAM+B,QACzBf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sEAIJF,EAAAC,EAAAC,cAACjC,EAAcS,KAAKJ,UArD1B,EAAAc,IAAA,2BAAAC,MAAA,SAckCL,GAC9B,MAAO,CAAED,eAAe,EAAMC,aAflCX,EAAA,CAAuC2C,IAAM/C,WAA7CC,EAYSZ,YAZT,qBAAAuC,OAY4CzC,EAAsBa,GAZlE,KAAAE,EC1CK,IAAI8C,EAAmB,sCACjBC,EAAyB,QAEzBC,EAAqB,IACrBC,EAA+B,IAC/BC,EAAyB,GAIzBC,EAAe,CAC1BC,QAAS,UACTC,cAAe,eACfC,QAAS,UACTC,SAAU,YAGCC,EAAwB,CACnCC,IAAK,MACLC,KAAM,OACNC,WAAY,YACZC,OAAQ,SACRC,OAAQ,UAGGC,EAAwB,CACnCC,MAAO,aACPC,OAAQ,cACRC,eAAgB,qBAChBC,cAAe,aAGJC,EAAmB,CAC9BC,cAAe,6BACfC,cAAe,6BACfC,oBAAqB,kCACrBC,gBAAiB,+BACjBC,iBAAkB,yBAClBC,aAAc,4BACdC,SAAU,kBACVC,gBAAiB,+BACjBC,eAAgB,uBAChBC,WAAY,mBAEZC,uBAAwB,+BAExBC,+BAAgC,uCAChCC,wBAAyB,gCACzBC,yBAA0B,iCAC1BC,kBAAmB,0BACnBC,iBAAkB,+BAElBC,sBAAuB,+DC1CZC,EAAmB,CAC9BC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,aAAc,eACdxB,OAAQ,SACRyB,gBAAiB,kBACjBC,sBAAuB,wBACvBC,2BAA4B,6BAC5BC,4BAA6B,8BAC7BC,wBAAyB,2BAGpB,SAASC,EAAmBC,EAAUC,GAC3C,MAAO,CACLC,KAAMZ,EAAiBC,gBACvBS,WACAC,YAIG,SAASE,IAAwC,IAApBC,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAChD,MAAO,CACLH,KAAMZ,EAAiBrB,OACvBmC,eAIG,SAASI,EAAkCJ,GAChD,MAAO,CACLF,KAAMZ,EAAiBM,2BACvBQ,eC9BJ,IAAMK,EAAe,CACnBL,YAAa,KACbM,mBAAmB,EACnBC,mBAAmB,EACnBC,kBAAkB,GCbb,IAAMC,EAA2B,CACtCC,WAAY,cCCRL,EAAe,KCFd,QAAMM,EAAe,CAC1BC,WAAY,EACZC,uBAAwB,EACxBC,wBAAyB,EACzBC,OAAQ,GAIGC,EAAmB,CAC9B,KACA,aACA,uBACA,wBACA,kBCVWC,EAA2B,CACtCC,GAAI,KACJC,MAAO,QACPC,YAAa,cACbC,WAAY,aACZC,UAAW,YACXC,iBAAkB,mBAClBC,OAAQ,SACRC,gBAAiB,kBACjBC,SAAU,WACVC,OAAQ,UAGGC,EAAyB,CACpCC,eAAgB,UAChBC,kBAAmB,UACnBC,aAAc,eACdC,aAAc,eACdC,kBAAmB,oBACnBC,eAAgB,iBAChBC,iBAAkB,kBAClBC,mBAAoB,iBACpBC,uBAAwB,QAGbC,GAAeC,EAAA,GAAArI,OAAAsI,EAAA,EAAAtI,CAAAqI,EACzBtB,EAAyBC,GAAK,MADLhH,OAAAsI,EAAA,EAAAtI,CAAAqI,EAEzBtB,EAAyBE,MAAQ,UAFRjH,OAAAsI,EAAA,EAAAtI,CAAAqI,EAGzBtB,EAAyBG,YAAc,eAHdlH,OAAAsI,EAAA,EAAAtI,CAAAqI,EAIzBtB,EAAyBI,WAAa,cAJbnH,OAAAsI,EAAA,EAAAtI,CAAAqI,EAKzBtB,EAAyBK,UAAY,kBALZpH,OAAAsI,EAAA,EAAAtI,CAAAqI,EAMzBtB,EAAyBM,iBAAmB,kBANnBrH,OAAAsI,EAAA,EAAAtI,CAAAqI,EAOzBtB,EAAyBO,OAAS,UAPTtH,OAAAsI,EAAA,EAAAtI,CAAAqI,EAQzBtB,EAAyBQ,gBAAkB,aARlBvH,OAAAsI,EAAA,EAAAtI,CAAAqI,EASzBtB,EAAyBS,SAAW,gBATXxH,OAAAsI,EAAA,EAAAtI,CAAAqI,EAUzBtB,EAAyBU,OAAS,UAVTzH,OAAAsI,EAAA,EAAAtI,CAAAqI,EAWzBX,EAAuBC,eAAiB,kBAXf3H,OAAAsI,EAAA,EAAAtI,CAAAqI,EAYzBX,EAAuBE,kBAAoB,uBAZlB5H,OAAAsI,EAAA,EAAAtI,CAAAqI,EAazBX,EAAuBG,aAAe,yBAbb7H,OAAAsI,EAAA,EAAAtI,CAAAqI,EAczBX,EAAuBK,kBAAoB,yBAdlB/H,OAAAsI,EAAA,EAAAtI,CAAAqI,EAezBX,EAAuBI,aAAe,yBAfb9H,OAAAsI,EAAA,EAAAtI,CAAAqI,EAgBzBX,EAAuBM,eAAiB,4BAhBfhI,OAAAsI,EAAA,EAAAtI,CAAAqI,EAiBzBX,EAAuBO,iBAAmB,+BAjBjBjI,OAAAsI,EAAA,EAAAtI,CAAAqI,EAkBzBX,EAAuBQ,mBAAqB,cAlBnBlI,OAAAsI,EAAA,EAAAtI,CAAAqI,EAmBzBX,EAAuBS,uBAAyB,qBAnBvBE,GAsBfP,EAAe,CAC1BS,iBAAkB,EAClBC,eAAgB,GAGLC,EAAqB,CAChCF,iBAAkB,UAClBC,eAAgB,YAGLR,EAAiB,CAC5BU,gBAAiB,EACjBC,kBAAmB,EACnBC,gBAAiB,GAGNrB,EAAkB,CAC7BsB,UAAW,EACXC,SAAU,EACVC,QAAS,EACTC,UAAW,GAGAC,IAAqBC,EAAA,GAAAlJ,OAAAsI,EAAA,EAAAtI,CAAAkJ,EAC/B3B,EAAgBsB,UAAY,WADG7I,OAAAsI,EAAA,EAAAtI,CAAAkJ,EAE/B3B,EAAgBuB,SAAW,aAFI9I,OAAAsI,EAAA,EAAAtI,CAAAkJ,EAG/B3B,EAAgBwB,QAAU,aAHK/I,OAAAsI,EAAA,EAAAtI,CAAAkJ,EAI/B3B,EAAgByB,SAAW,aAJIE,GC7D3B,SAASC,GAAyBC,GAAiC,IAApBC,EAAoBtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACpE,OAAmB,MAAfqD,GAAuC,KAAhBA,EAClB,CACLE,UAAWvC,EAAyBE,MACpCsC,aAAcH,GAENC,EAGP,SAASG,GAAeC,GAC7B,OAAOA,EAAOH,YAAcH,GAAyB,cAAcG,UAa9D,SAASI,KACd,MAAO,CACLJ,UAAWvC,EAAyBQ,gBACpCoC,mBAAoBpC,EAAgBwB,SAIjC,SAASa,KACd,MAAO,CACLN,UAAWvC,EAAyBQ,gBACpCgC,aAAchC,EAAgBwB,SAO3B,SAASc,KACd,MAAO,CACLP,UAAWvC,EAAyBQ,gBACpCoC,mBAAoBpC,EAAgBsB,WAIjC,SAASiB,KACd,MAAO,CACLR,UAAWvC,EAAyBQ,gBACpCgC,aAAchC,EAAgBsB,WAO3B,SAASkB,KACd,MAAO,CACLT,UAAW5B,EAAuBM,eAClCuB,aAAcvB,EAAeW,mBAI1B,SAASqB,KACd,MAAO,CACLV,UAAW5B,EAAuBM,eAClC2B,mBAAoB3B,EAAeW,mBC7EhC,IAAMsB,GAAmB,CAE9BC,aAAc,eAGdC,qBAAsB,qBAGtBC,2BAA4B,cAI5BC,oBAAqB,sBAGrBC,gBAAiB,kBAGjBC,sBAAuB,wBAGvBC,oBAAqB,sBAGrBC,mBAAoB,qBAGpBC,qBAAsB,wBASjB,SAASC,GAAuBC,EAAmBxB,GACxD,MAAO,CACLxD,KAAMqE,GAAiBS,qBACvBG,YAAaD,EAAkBC,YAC/BC,eAAgBF,EAAkBE,eAClCC,WAAY,EACZC,MAAOJ,EAAkBI,MACzBC,gBAAiBL,EAAkBK,gBACnCxB,OAAQN,GAAyBC,IC3CrC,aAAMjD,GAAe,CAUnB+E,UAAW,GACXC,sBAAuB,EACvBC,gBAAiB,EACjBC,eAAe,EACfC,wBAAwB,GAMnB,SAASC,KAAgD,IAA9BjL,EAA8ByF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBI,GAAcqF,EAAQzF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9D,OAAQuF,EAAO5F,MACb,KAAKqE,GAAiBS,qBACtB,KAAKT,GAAiBC,aACpB,OAAOlK,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEgL,wBAAwB,EACxBD,eAAe,IAEnB,KAAKpB,GAAiBG,2BACpB,IAAMsB,EAAQ1L,OAAAyL,EAAA,EAAAzL,CAAA,GACTM,EADS,CAEZ+K,eAAe,EACfD,gBAAiBI,EAAOG,eAAeC,cAazC,OAXAF,EAASR,UAATlL,OAAA6L,EAAA,EAAA7L,CAAyBM,EAAM4K,WACc,MAAzCQ,EAASR,UAAUM,EAAOT,cAC5BW,EAASR,UAAUM,EAAOT,YAAc,IAC1CW,EAASR,UAAUM,EAAOT,YAAYe,KAAON,EAAOG,eAAeI,KAEnEL,EAASR,UAAUM,EAAOT,YAAYiB,QAAUR,EAAOP,gBACvDS,EAASR,UAAUM,EAAOT,YAAYtB,OAAS+B,EAAO/B,OAItDiC,EAASR,UAAUM,EAAOT,YAAYkB,gBAAkBP,EAASP,sBAC1DO,EACT,KAAKzB,GAAiBE,qBACpB,OAAOnK,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEgL,wBAAwB,EACxBD,eAAe,IAEnB,KAAKpB,GAAiBI,oBACpB,OAAOrK,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEE+K,eAAe,IAEnB,KAAKpB,GAAiBK,gBACpB,OAAOtK,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEE6K,sBAAuBK,EAAOL,wBAKlC,KAAKlB,GAAiBQ,mBACpB,OAAOzK,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEE+K,eAAe,IAEnB,KAAKrG,EAAiBrB,OACpB,OAAO3D,OAAAyL,EAAA,EAAAzL,CAAA,GACFmG,IAEP,QACE,OAAO7F,GC3Eb,IAAM4L,IAAWC,GAAA,GAAAnM,OAAAsI,EAAA,EAAAtI,CAAAmM,GACd1F,EAAaC,YADC0F,GAAA,GAAApM,OAAAsI,EAAA,EAAAtI,CAAAoM,GAEZtJ,EAAaC,aAAUkD,GAFXjG,OAAAsI,EAAA,EAAAtI,CAAAoM,GAGZtJ,EAAaE,mBAAgBiD,GAHjBmG,KAAApM,OAAAsI,EAAA,EAAAtI,CAAAmM,GAKd1F,EAAaE,wBALC0F,GAAA,GAAArM,OAAAsI,EAAA,EAAAtI,CAAAqM,GAMZvJ,EAAaC,aAAUkD,GANXjG,OAAAsI,EAAA,EAAAtI,CAAAqM,GAOZvJ,EAAaE,mBAAgBiD,GAPjBoG,KAAArM,OAAAsI,EAAA,EAAAtI,CAAAmM,GASd1F,EAAaG,wBATC5G,OAAAsI,EAAA,EAAAtI,CAAA,GAUZ8C,EAAaE,mBAAgBiD,IAVjBjG,OAAAsI,EAAA,EAAAtI,CAAAmM,GAYd1F,EAAaI,OAZC7G,OAAAsI,EAAA,EAAAtI,CAAA,GAaZ8C,EAAaE,mBAAgBiD,IAbjBkG,ICCV,IAAMG,GAAmB,CAC9BC,8BAA+B,gCAC/BC,iCAAkC,mCAClCC,6BAA8B,gCAGzB,SAASC,GAA6B5G,GAC3C,MAAO,CACLF,KAAM0G,GAAiBC,8BACvBzG,eCJJ,IAAMK,GAAe,CACnBwG,GAAI,KACJ5N,KAAM,KACN6N,KAAM,KACNC,MAAO,KACPC,MAAO,GACPC,cAAc,EACdC,aAAa,GCjBR,OAAMC,GAAqC,CAChDC,oBAAqB,gCACrBC,mBAAoB,+BACpBC,uBAAwB,mCACxBC,SAAU,sBAGL,SAASC,GAAiBzC,EAAa0C,EAAWC,GACvD,MAAO,CACL5H,KAAMqH,GAAmCC,oBACzCrC,cACA0C,YACAC,kBCTJ,IAAMC,GAAkB,CACtBC,iBAAkB,GAGlBC,qBAAsB,GACtBC,aAAc,IAGVC,IAAgBC,GAAA,GAAA9N,OAAAsI,EAAA,EAAAtI,CAAA8N,GACnBhL,EAAaC,QADM/C,OAAAyL,EAAA,EAAAzL,CAAA,GACSyN,KADTzN,OAAAsI,EAAA,EAAAtI,CAAA8N,GAEnBhL,EAAaE,cAFMhD,OAAAyL,EAAA,EAAAzL,CAAA,GAEeyN,KAFfK,ICXf,IAAMC,GAAsC,CACjDC,yBAA0B,sCAC1BC,4BAA6B,yCAC7BC,wBAAyB,qCACzBC,2BAA4B,wCAC5Bd,SAAU,uBAGL,SAASe,GAAqBb,EAAWc,GAC9C,MAAO,CACLzI,KAAMmI,GAAoCC,yBAC1CT,YACAc,eCVJ,IAAMlI,GAAe,CACnBmI,8BAA+B,GAC/BC,qBAAqB,EACrBC,oBAAoB,GCLf,IAAMC,GAAyB,CACpCC,oBAAqB,iCACrBC,uBAAwB,oCACxBC,mBAAoB,gCAEpBC,uBAAwB,oCACxBC,0BAA2B,uCAC3BC,sBAAuB,mCAEvBC,uBAAwB,oCACxBC,0BAA2B,uCAC3BC,sBAAuB,mCAEvBC,eAAgB,6BAGX,SAASC,GAAiBvE,EAAawE,GAC5C,MAAO,CACLzJ,KAAM6I,GAAuBC,oBAC7B7D,cACAwE,WAIG,SAASC,GAAoBzE,EAAa0C,GAC/C,MAAO,CACL3H,KAAM6I,GAAuBI,uBAC7BhE,cACA0C,aAIG,SAASgC,GAA6B1E,GAC3C,MAAO,CACLjF,KAAM6I,GAAuBO,uBAC7BnE,eAIG,SAAS2E,KACd,MAAO,CACL5J,KAAM6I,GAAuBU,gBCrCjC,IAAMhJ,GAAe,CACnBsJ,mBAAmB,EACnBC,mBAAoB,GAEpBC,iBAAiB,EACjBC,sBAAsB,EACtBC,kBAAkB,EAElBC,kBAAkB,EAClBC,WAAY,GACZC,mBAAmB,EACnBC,YAAa,GACbC,kBAAkB,EAClBC,WAAY,IA4Dd,SAASC,GAAmB9P,EAAOuK,EAAawF,GAC9C,OAAQxF,GACN,KAAK/H,EAAaG,QAChB,OAAOjD,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEwP,iBAAkBO,EAClBN,WAAY,KAEhB,KAAKjN,EAAaI,SAChB,OAAOlD,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEE0P,kBAAmBK,EACnBJ,YAAa,KAEjB,KAAKnN,EAAaC,QAChB,OAAO/C,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEE4P,iBAAkBG,EAClBF,WAAY,MC/Fb,IAAMG,GAAqB,CAChCC,sBAAuB,+BACvBC,yBAA0B,kCAC1BC,qBAAsB,8BACtBC,2BAA4B,oCAC5BrD,SAAU,mBAGL,SAASsD,GAAmBpD,EAAWqD,EAAeC,GAC3D,MAAO,CACLjL,KAAM0K,GAAmBC,sBACzBhD,YACAqD,gBACAC,mBCXJ,OAAM1K,GAAe,CACnB2K,oCAAqC,GACrCC,mBAAmB,EACnBC,oBAAoB,GC+BtB,IAoBeC,GApBEC,YAAgB,CAC/BC,KnBrBK,WAA4C,IAA9B7Q,EAA8ByF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBI,EAAcqF,EAAQzF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQuF,EAAO5F,MACb,KAAKZ,EAAiBC,gBACpB,OAAOjF,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEE8F,mBAAmB,IAEvB,KAAKpB,EAAiBE,iBACpB,OAAOlF,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEwF,YAAa0F,EAAO1F,YACpBM,mBAAmB,IAEvB,KAAKpB,EAAiBG,aACpB,OAAOnF,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEE8F,mBAAmB,IAGvB,KAAKpB,EAAiBrB,OACpB,OAAO3D,OAAAyL,EAAA,EAAAzL,CAAA,GACFmG,GAEP,KAAKnB,EAAiBI,gBACpB,OAAOpF,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEgG,kBAAkB,IAGtB,KAAKtB,EAAiBM,2BACpB,OAAOtF,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEE+F,mBAAmB,IAEvB,KAAKrB,EAAiBO,4BACpB,OAAOvF,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEwF,YAAa0F,EAAO1F,YACpBO,mBAAmB,IAEvB,KAAKrB,EAAiBK,sBACtB,KAAKL,EAAiBQ,wBACpB,OAAOxF,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEwF,YAAa,KACbO,mBAAmB,IAGvB,QACE,OAAO/F,ImB3BX8Q,KTlBK,WAA4C,IAA9B9Q,EAA8ByF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBI,GAAcqF,EAAQzF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQuF,EAAO5F,MACb,KAAK0G,GAAiBC,8BACpB,OAAOvM,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEyM,cAAc,EACdC,aAAa,IAEjB,KAAKV,GAAiBG,6BACpB,OAAOzM,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEyM,cAAc,EACdC,aAAa,IAEjB,KAAKV,GAAiBE,iCACpB,MAAO,CACLO,cAAc,EACdC,aAAa,EACbL,GAAInB,EAAO6F,QACXtS,KAAMyM,EAAOzM,KACb6N,KAAwB,MAAlBpB,EAAO8F,QAAkB,CAC7B3E,GAAInB,EAAO8F,QACXvS,KAAMyM,EAAO+F,WACX,KACJ1E,MAAOrB,EAAOqB,MACdC,MAAOtB,EAAOgG,MAKlB,KAAKxM,EAAiBrB,OACpB,OAAO3D,OAAAyL,EAAA,EAAAzL,CAAA,GACFmG,IAGP,QACE,OAAO7F,ISjBXmR,MAAOP,YXaF,SAAmCQ,GACxC,IAAIT,EAAW,GAIf,OAHAS,EAAYC,QAAQ,SAAAhF,GA5BtB,IAAkCiF,EA6B9BX,EAASnK,EAAiB6F,KA7BIiF,EA6B4BjF,EA5BrD,WAA6C,IAA5CrM,EAA4CyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApCmG,GAAY0F,GAAapG,EAAWzF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,GAAI,mBAAoBuF,EAAQ,CAC9B,GAAIA,EAAOV,iBAAmBhE,EAAiB8K,GAAa,CAC1D,IAAMlG,EAAQ1L,OAAAyL,EAAA,EAAAzL,CAAA,GAAQM,GAKtB,OAJIkL,EAAOX,cAAgB/H,EAAaC,SAAWD,EAAaC,WAAWzC,EACzEoL,EAAS5I,EAAaC,SAAWwI,GAAkBjL,EAAMwC,EAAaC,SAAUyI,GACzEA,EAAOX,cAAgB/H,EAAaE,eAAiBF,EAAaE,iBAAiB1C,IAC1FoL,EAAS5I,EAAaE,eAAiBuI,GAAkBjL,EAAMwC,EAAaE,eAAgBwI,IACvFE,EAET,OAAOpL,EAIP,IAAMoL,EAAW,GAEjB,OADA1L,OAAO6R,KAAK3F,GAAY0F,IAAaD,QAAQ,SAAA/Q,GAAG,OAAK8K,EAAS9K,GAAO2K,GAAkBjL,EAAMM,GAAM4K,KAC5FE,MAcJuF,EWjBLa,CAA0B,CACxBrL,EAAaC,WACbD,EAAaE,uBACbF,EAAaG,wBACbH,EAAaI,UAGjBkL,MAAOb,aAAec,GAAA,GAAAhS,OAAAsI,EAAA,EAAAtI,CAAAgS,GACnBlL,EAAiBL,EAAaC,YH5B5B,WAA6D,IAA9BpG,EAA8ByF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBI,GAAcqF,EAAQzF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClE,OAAQuF,EAAO5F,MACb,KAAK6I,GAAuBC,oBAC1B,OAAO1O,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEqP,iBAAiB,EACjBC,sBAAsB,EACtBC,kBAAkB,IAEtB,KAAKpB,GAAuBE,uBAC1B,OAAO3O,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEqP,iBAAiB,EACjBC,sBAAsB,EACtBC,kBAAkB,IAEtB,KAAKpB,GAAuBG,mBAC1B,OAAO5O,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEqP,iBAAiB,EACjBC,sBAAsB,EACtBC,kBAAkB,IAEtB,KAAKpB,GAAuBI,uBAC1B,OAAO7O,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEmP,mBAAmB,IAEvB,KAAKhB,GAAuBK,0BAC1B,OAAO9O,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEmP,mBAAmB,EACnBC,mBAAkB,GAAArO,OAAArB,OAAA6L,EAAA,EAAA7L,CAAMM,EAAMoP,oBAAZ,CAAgClE,EAAO+B,cAE7D,KAAKkB,GAAuBM,sBAC1B,OAAO/O,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEmP,mBAAmB,IAEvB,KAAKhB,GAAuBO,uBAC1B,OAAOoB,GAAmB9P,EAAOkL,EAAOX,aAAa,GACvD,KAAK4D,GAAuBQ,0BAC1B,OAsCN,SAAsC3O,EAAOuK,EAAawE,GACxD,OAAQxE,GACN,KAAK/H,EAAaG,QAChB,OAAOjD,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEwP,kBAAkB,EAClBC,WAAYV,IAEhB,KAAKvM,EAAaI,SAChB,OAAOlD,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEE0P,mBAAmB,EACnBC,YAAaZ,IAEjB,KAAKvM,EAAaC,QAChB,OAAO/C,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEE4P,kBAAkB,EAClBC,WAAYd,KAxDP4C,CAA6B3R,EAAOkL,EAAOX,YAAaW,EAAO6D,SACxE,KAAKZ,GAAuBS,sBAC1B,OAAOkB,GAAmB9P,EAAOkL,EAAOX,aAAa,GAGvD,KAAK4D,GAAuBU,eAC1B,OAAOnP,OAAAyL,EAAA,EAAAzL,CAAA,GACFmG,GADL,CAEEuJ,mBAAoBpP,EAAMoP,qBAE9B,QACE,OAAOpP,KG1BWN,OAAAsI,EAAA,EAAAtI,CAAAgS,GAEnBlL,EAAiBL,EAAaE,wBPhC5B,WAA2E,IAAlCrG,EAAkCyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1B8H,GAAkBrC,EAAQzF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChF,OAA0B,MAAtBuF,EAAOX,YACF7K,OAAAyL,EAAA,EAAAzL,CAAA,GAAKM,EAAZN,OAAAsI,EAAA,EAAAtI,CAAA,GAAoBwL,EAAOX,YAO/B,WAA0D,IAAjCvK,EAAiCyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB0H,GAAiBjC,EAAQzF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxD,OAAQuF,EAAO5F,MACb,KAAKqH,GAAmCC,oBACtC,IAAMxB,EAAQ1L,OAAAyL,EAAA,EAAAzL,CAAA,GACTM,EADS,CAEZoN,iBAAgB,GAAArM,OAAArB,OAAA6L,EAAA,EAAA7L,CAAMM,EAAMoN,kBAAZ,CAA8BlC,EAAO+B,YACrDK,aAAa5N,OAAAyL,EAAA,EAAAzL,CAAA,GAAMM,EAAMsN,gBAK3B,OAF+C,MAA3ClC,EAASkC,aAAapC,EAAO+B,mBACxB7B,EAASkC,aAAapC,EAAO+B,WAC/B7B,EACT,KAAKuB,GAAmCG,uBACtC,OAAOpN,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEoN,iBAAkBpN,EAAMoN,iBAAiBjE,OAAO,SAAAyI,GAAO,OAAIA,IAAY1G,EAAO+B,YAC9EI,qBAAqB3N,OAAAyL,EAAA,EAAAzL,CAAA,GAAMM,EAAMqN,qBAAb3N,OAAAsI,EAAA,EAAAtI,CAAA,GAAoCwL,EAAO+B,UAAY/B,EAAOgC,mBAEtF,KAAKP,GAAmCE,mBACtC,OAAOnN,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEoN,iBAAkBpN,EAAMoN,iBAAiBjE,OAAO,SAAAyI,GAAO,OAAIA,IAAY1G,EAAO+B,YAC9EK,aAAa5N,OAAAyL,EAAA,EAAAzL,CAAA,GAAMM,EAAMsN,aAAb5N,OAAAsI,EAAA,EAAAtI,CAAA,GAA4BwL,EAAO+B,UAAY/B,EAAOgC,mBAEtE,QACE,OAAOlN,GAhCgC6R,CAAgB7R,EAAMkL,EAAOX,aAAcW,KAC7EA,EAAO5F,OAASqH,GAAmCI,SACnDQ,GAEAvN,IOwBaN,OAAAsI,EAAA,EAAAtI,CAAAgS,GAGnBlL,EAAiBL,EAAaG,yBL1C5B,WAAwE,IAA9BtG,EAA8ByF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBI,GAAcqF,EAAQzF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7E,OAAQuF,EAAO5F,MACb,KAAKmI,GAAoCC,yBACvC,OAAOhO,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEiO,qBAAqB,EACrBC,oBAAoB,IAExB,KAAKT,GAAoCG,wBACvC,OAAOlO,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEiO,qBAAqB,EACrBC,oBAAoB,IAExB,KAAKT,GAAoCE,4BACvC,OAAOjO,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEiO,qBAAqB,EACrBC,oBAAoB,EACpBF,8BAA6B,GAAAjN,OAAArB,OAAA6L,EAAA,EAAA7L,CAAMM,EAAMgO,+BAAZ,CAA2C9C,EAAO+B,cAEnF,KAAKQ,GAAoCI,2BACvC,OAAOnO,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEkO,mBAAoBrI,GAAaqI,qBAErC,KAAKT,GAAoCV,SACvC,OAAOlH,GACT,QACE,OAAO7F,KKUWN,OAAAsI,EAAA,EAAAtI,CAAAgS,GAInBlL,EAAiBL,EAAaI,QD3C5B,WAAyD,IAA9BvG,EAA8ByF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBI,GAAcqF,EAAQzF,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9D,OAAQuF,EAAO5F,MACb,KAAK0K,GAAmBC,sBACtB,OAAOvQ,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEyQ,mBAAmB,EACnBC,oBAAoB,IAExB,KAAKV,GAAmBG,qBACtB,OAAOzQ,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEyQ,mBAAmB,EACnBC,oBAAoB,IAExB,KAAKV,GAAmBE,yBACtB,OAAOxQ,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEEyQ,mBAAmB,EACnBC,oBAAoB,EACpBF,oCAAmC,GAAAzP,OAAArB,OAAA6L,EAAA,EAAA7L,CAAMM,EAAMwQ,qCAAZ,CAAiDtF,EAAO+B,cAE/F,KAAK+C,GAAmBI,2BACtB,OAAO1Q,OAAAyL,EAAA,EAAAzL,CAAA,GACFM,EADL,CAEE0Q,mBAAoB7K,GAAa6K,qBAErC,KAAKV,GAAmBjD,SACtB,OAAOlH,GACT,QACE,OAAO7F,KCUW0R,KAMtBI,YjB9CK,WAAmD,IAA9B9R,EAA8ByF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBI,EAClC,QADwDJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACzCL,MACb,KAAKW,EAAyBC,WAC5B,MAAO,CACLhI,OAAQ,QAEZ,QACE,OAAO8B,0CkBNN,SAAS+R,GAA8BC,GAC5C,OAAOC,GAAeD,EADgFvM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B,GAA+BA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,GAI9F,SAASyM,GAA4BF,EAAaxM,GACvD,OAAOyM,GAAeD,EAD2FvM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B,GAA+BA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACvCD,GAGzE,SAASyM,GAAeD,EAAaG,EAAaC,GAA2C,IAApB5M,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAC/E4M,EAAU,GAAAtR,OAAMoB,EAAN,KAAApB,OAA0BiR,GACpCM,EAeR,SAAiCH,EAAa3M,GAC5C,IAAM+M,EAAU,CAAEC,eAAgB,oBACf,MAAfhN,IACF+M,EAAQ,iBAAmB/M,GAE7B,MAAO,CACLiN,OAAQ,OACRF,UACAG,KAAMC,KAAKC,UAAU,CAAEC,aAAcV,KAvB1BW,CAAwBX,EAAa3M,GASlD,OALI4M,EAAwB,EAuB9B,SAA0BC,EAAYC,EAAMF,GAC1C,IAAMW,EAAkB,IAAIC,gBACtBC,EAAcF,EAAgBG,OAIpC,OAFAC,WAAW,kBAAMJ,EAAgBK,SAAShB,GAEnCiB,MAAMhB,EAAD3S,OAAAyL,EAAA,EAAAzL,CAAA,GAAkB4S,EAAlB,CAAwBY,OAAQD,KA5B3BK,CAAiBjB,EAAYC,EAAMF,GAEnCiB,MAAMhB,EAAYC,IAEfiB,MAAM,SAAArT,GAExB,OA0BJ,SAAkCA,EAAO8R,GACpB,eAAf9R,EAAMzB,KACRqC,QAAQZ,MAAR,kBAAAa,OAAgCiR,EAAhC,4BAEAlR,QAAQZ,MAAMA,EAAd,kCAAAa,OAAuDiR,IA/BvDwB,CAAyBtT,EAAO8R,GACzB,OAsCJ,SAASyB,GAAelJ,EAAamJ,GAC1C,OAAOnJ,EAAW,IAAAxJ,OAAO2S,GAGpB,SAASC,GAA2BC,GACzC,OAAQA,GACN,KAAKpQ,EAAiBO,SACpB,MAAO,mEACT,KAAKP,EAAiBI,gBACpB,MAAO,qEACT,KAAKJ,EAAiBG,oBACpB,MAAO,0BACT,KAAKH,EAAiBM,aACpB,MAAO,kDACT,KAAKN,EAAiBU,WACpB,MAAO,uEACT,KAAKV,EAAiBY,+BACpB,MAAO,gEACT,KAAKZ,EAAiBc,yBACtB,KAAKd,EAAiBa,wBACpB,MAAO,4CACT,KAAKb,EAAiBe,kBACpB,MAAO,gDACT,KAAKf,EAAiBgB,iBACpB,MAAO,iDACT,KAAKhB,EAAiBW,uBACpB,MAAO,kDACT,KAAKX,EAAiBiB,sBACpB,MAAO,wDACT,QACE,OAAOmP,GAIN,SAASC,GAA8BrO,GAC5C1E,QAAQgT,IAAI,wCACZ,IACEC,aAAaC,QAAQ5R,EAAwBoD,GAC7C,MAAOyO,GACPnT,QAAQZ,MAAR,iDAAAa,OAA+DkT,KAI5D,SAASC,KACdpT,QAAQgT,IAAI,4CACZ,IACEC,aAAaI,WAAW/R,GACxB,MAAO6R,GACPnT,QAAQZ,MAAR,qDAAAa,OAAmEkT,sBChD7DG,iBAgBAC,iBAsCAC,IA3GWC,cACnB,SAAAA,EAAYvC,GAActS,OAAAC,EAAA,EAAAD,CAAAE,KAAA2U,GACxB3U,KAAKoS,YAAcA,6DAGNG,GAEb,OADAvS,KAAKuS,YAAcA,EACZvS,4CAGM4U,GAEb,OADA5U,KAAK4U,YAAcA,EACZ5U,cAOE6U,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA/U,OAAAC,EAAA,EAAAD,CAAAE,KAAA6U,GAAA/U,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+U,GAAAE,MAAA/U,KAAA6F,YAAA,OAAA/F,OAAAU,EAAA,EAAAV,CAAA+U,EAAAC,GAAAhV,OAAAW,EAAA,EAAAX,CAAA+U,EAAA,EAAAnU,IAAA,sBAAAC,MAAAqU,GAAAzT,EAAA0T,KAAA,SAAAC,IAAA,IAAAtP,EAAA,OAAAoP,GAAAzT,EAAA4T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEwB,OAFxBF,EAAAE,KAAA,EAE8Bd,KAF9B,OAGW,OADD5O,EAFVwP,EAAAG,KAAAH,EAAAE,KAAA,EAGiBb,GAA2BzU,KAAKoS,YAAapS,KAAKuS,YAAavS,KAAK4U,YAAahP,GAHlG,cAAAwP,EAAAI,OAAA,SAAAJ,EAAAG,MAAA,wBAAAH,EAAAK,SAAAP,EAAAlV,SAAA,CAAAU,IAAA,iCAAAC,MAAAqU,GAAAzT,EAAA0T,KAAA,SAAAS,IAAA,IAAA9P,EAAA,OAAAoP,GAAAzT,EAAA4T,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,OAOwB,OAPxBK,EAAAL,KAAA,EAO8Bd,KAP9B,OAQW,OADD5O,EAPV+P,EAAAJ,KAAAI,EAAAL,KAAA,EAQiBb,GACXzU,KAAKoS,YACLpS,KAAKuS,YACLvS,KAAK4U,YACLhP,EACAnD,GAbN,cAAAkT,EAAAH,OAAA,SAAAG,EAAAJ,MAAA,wBAAAI,EAAAF,SAAAC,EAAA1V,WAAA6U,EAAA,CAA6CF,IAkBhCiB,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA9V,OAAAC,EAAA,EAAAD,CAAAE,KAAA4V,GAAA9V,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8V,GAAAb,MAAA/U,KAAA6F,YAAA,OAAA/F,OAAAU,EAAA,EAAAV,CAAA8V,EAAAC,GAAA/V,OAAAW,EAAA,EAAAX,CAAA8V,EAAA,EAAAlV,IAAA,sBAAAC,MAAAqU,GAAAzT,EAAA0T,KAAA,SAAAC,IAAA,OAAAF,GAAAzT,EAAA4T,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAEW,OAFXQ,EAAAR,KAAA,EAEiBb,GAA2BzU,KAAKoS,YAAapS,KAAKuS,YAAavS,KAAK4U,aAFrF,cAAAkB,EAAAN,OAAA,SAAAM,EAAAP,MAAA,wBAAAO,EAAAL,SAAAP,EAAAlV,SAAA,CAAAU,IAAA,iCAAAC,MAAAqU,GAAAzT,EAAA0T,KAAA,SAAAS,IAAA,OAAAV,GAAAzT,EAAA4T,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,OAMW,OANXS,EAAAT,KAAA,EAMiBb,GACXzU,KAAKoS,YACLpS,KAAKuS,YACLvS,KAAK4U,YACL,KACAnS,GAXN,cAAAsT,EAAAP,OAAA,SAAAO,EAAAR,MAAA,wBAAAQ,EAAAN,SAAAC,EAAA1V,WAAA4V,EAAA,CAA+CjB,IAgB/C,SAAUH,KAAV,IAAA5O,EAAA,OAAAoP,GAAAzT,EAAA4T,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OACsB,OADtBU,EAAAV,KAAA,EAC4BW,aAAO,SAAA7V,GAAK,OAAIA,EAAM6Q,KAAKrL,cADvD,UAGqB,OAFbA,EADRoQ,EAAAT,MAAA,CAAAS,EAAAV,KAAA,cAIU,IAAIY,MAAM,+DAJpB,cAAAF,EAAAR,OAAA,SAMS5P,GANT,wBAAAoQ,EAAAP,SAAAU,IAgBA,SAAU1B,GACRrC,GADF,IAAAG,EAAAqC,EAAAhP,EAAA4M,EAAA4D,EAAAC,EAAAC,EAAAzQ,UAAA,OAAAmP,GAAAzT,EAAA4T,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UAEE/C,EAFF+D,EAAAxQ,OAAA,QAAAC,IAAAuQ,EAAA,GAAAA,EAAA,GAEgB,KACd1B,EAHF0B,EAAAxQ,OAAA,QAAAC,IAAAuQ,EAAA,GAAAA,EAAA,GAGgB,KACd1Q,EAJF0Q,EAAAxQ,OAAA,QAAAC,IAAAuQ,EAAA,GAAAA,EAAA,GAIgB,KACd9D,EALF8D,EAAAxQ,OAAA,QAAAC,IAAAuQ,EAAA,GAAAA,EAAA,GAK0B,EAIL,MAAf1Q,EATN,CAAA2Q,EAAAjB,KAAA,SAUe,OAVfiB,EAAAjB,KAAA,EAUqBnD,GAA8BC,EAAaG,EAAaC,GAV7E,OAUI4D,EAVJG,EAAAhB,KAAAgB,EAAAjB,KAAA,iBAYe,OAZfiB,EAAAjB,KAAA,GAYqBhD,GAA4BF,EAAaxM,EAAa2M,EAAaC,GAZxF,QAYI4D,EAZJG,EAAAhB,KAAA,WAckB,MAAZa,EAdN,CAAAG,EAAAjB,KAAA,SAeI,OAfJiB,EAAAjB,KAAA,GAeUkB,aAAI1W,OAAAyL,EAAA,EAAAzL,CAAA,GAAK8U,EAAN,CAAmB6B,aAAc,oEAf9C,eAAAF,EAAAf,OAAA,SAgBW,MAhBX,QAmBuB,OAnBvBe,EAAAjB,KAAA,GAmB6BZ,GAAgC0B,EAAUxB,GAnBvE,WAqBsB,OAFdyB,EAnBRE,EAAAhB,MAAA,CAAAgB,EAAAjB,KAAA,gBAAAiB,EAAAf,OAAA,SAsBW,MAtBX,WAyBOY,EAASM,GAzBhB,CAAAH,EAAAjB,KAAA,YA0BuB,MAAf1P,GAA2C,MAApBwQ,EAASO,OA1BxC,CAAAJ,EAAAjB,KAAA,SA2BM,OA3BNiB,EAAAjB,KAAA,GA2BYkB,aAAI,CAAE9Q,KAAMZ,EAAiBI,kBA3BzC,QAAAqR,EAAAjB,KAAA,oBA4B4B,MAAfV,EA5Bb,CAAA2B,EAAAjB,KAAA,SA6BM,OA7BNiB,EAAAjB,KAAA,GA6BYkB,aAAI1W,OAAAyL,EAAA,EAAAzL,CAAA,GAAK8U,EAAN,CAAmB6B,aAAc1C,GAA2BsC,EAAa/V,UA7BxF,eA+BIY,QAAQZ,MAAR,yBAAAa,OAAuCkV,EAAa/V,MAApD,QAAAa,OAAgEiR,EAAhE,cAAAjR,OAAwFkV,EAAahU,UA/BzGkU,EAAAf,OAAA,SAgCW,MAhCX,eAAAe,EAAAf,OAAA,SAmCSa,EAAaO,eAnCtB,yBAAAL,EAAAd,SAAAoB,IAsCA,SAAUnC,GAAgC0B,EAAUxB,GAApD,IAAAyB,EAAA,OAAArB,GAAAzT,EAAA4T,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OAEyB,OAFzBwB,EAAAzB,KAAA,EAAAyB,EAAAxB,KAAA,EAE+Bc,EAASW,OAFxC,cAEUV,EAFVS,EAAAvB,KAAAuB,EAAAtB,OAAA,SAGWa,GAHX,OAKI,OALJS,EAAAzB,KAAA,EAAAyB,EAAAE,GAAAF,EAAA,SAAAA,EAAAxB,KAAA,GAKUkB,aAAI1W,OAAAyL,EAAA,EAAAzL,CAAA,GACL8U,EADI,CAEP6B,aACE,+GARR,eAUIvV,QAAQZ,MAAM,iDAAdwW,EAAAE,IAVJF,EAAAtB,OAAA,SAWW,MAXX,yBAAAsB,EAAArB,SAAAwB,GAAA,+BChGiBC,iBAkEPC,iBAkBAC,IApFH,SAAUF,KAAV,IAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnM,EAAAoM,EAAAC,EAAA,OAAA3C,GAAAzT,EAAA4T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEe,OAFfF,EAAAE,KAAA,EAEqBsC,aAAK,CAAC9S,EAAiBM,2BAA4BN,EAAiBK,wBAFzF,WAECkS,EAFDjC,EAAAG,MAGW7P,OAASZ,EAAiBM,2BAHrC,CAAAgQ,EAAAE,KAAA,QAIH,OAJGF,EAAAE,KAAA,EAIG8B,GAAkCC,GAJrC,OAAAjC,EAAAE,KAAA,eAOHpU,QAAQgT,IAAI,2CAPT,OASe,OATfkB,EAAAE,KAAA,GASqBW,aAAO,SAAA7V,GAAK,OAAIA,EAAM6Q,KAAKrL,cAThD,QAAAwP,EAAA4B,GAAA5B,EAAAG,KASD+B,EAAkE,MATjElC,EAAA4B,GAAA,WAWEM,EAXF,CAAAlC,EAAAE,KAAA,SAY0B,OAZ1BF,EAAAE,KAAA,GAYgCsC,aAAK9S,EAAiBC,iBAZtD,QAoByB,OARpBwS,EAZLnC,EAAAG,KAaKiC,EAAe,IAAI5B,GAA0BrS,EAAsBC,OACtEqU,eAAe,CACdrS,SAAU+R,EAAmB/R,SAC7BC,SAAU8R,EAAmB9R,WAE9BqS,eAAe,CAAEpS,KAAMZ,EAAiBG,eAlB1CmQ,EAAAE,KAAA,GAoB+BkC,EAAa9B,iCApB5C,WAqBwB,OADnB+B,EApBLrC,EAAAG,MAAA,CAAAH,EAAAE,KAAA,SAsBC,OAtBDF,EAAAE,KAAA,GAsBOkB,aAAI,CACR9Q,KAAMZ,EAAiBE,iBACvBY,YAAa6R,EAAkBM,QAxBlC,QA0BC7W,QAAQgT,IAAI,oBACZD,GAA8BwD,EAAkBM,OAChDT,GAAe,EA5BhB,YAmCIA,EAnCJ,CAAAlC,EAAAE,KAAA,SAoCc,OApCdF,EAAAE,KAAA,GAoCoBsC,aAAK,CAACxL,GAAiBC,8BAA+BvH,EAAiBrB,SApC3F,YAoCK6H,EApCL8J,EAAAG,MAqCU7P,OAAS0G,GAAiBC,8BArCpC,CAAA+I,EAAAE,KAAA,SAyC8B,OAHvBoC,EAAkB,IAAI7C,GAAwBtR,EAAsBI,eACvEmU,eAAe,CAAEpS,KAAM0G,GAAiBG,+BAvC5C6I,EAAAE,KAAA,GAyCoCoC,EAAgBhC,iCAzCpD,WA0C6B,OADtBiC,EAzCPvC,EAAAG,MAAA,CAAAH,EAAAE,KAAA,SA2CG,OA3CHF,EAAAE,KAAA,GA2CSkB,aAAI1W,OAAAyL,EAAA,EAAAzL,CAAA,CACR4F,KAAM0G,GAAiBE,kCACpBqL,IA7CR,QA+CGzW,QAAQgT,IAAI,oCA/Cf,QAAAkB,EAAAE,KAAA,oBAoD2B,MAAtBhK,EAAO1F,YApDZ,CAAAwP,EAAAE,KAAA,SAqDG,OArDHF,EAAAE,KAAA,GAqDS6B,GAA0B7L,EAAO1F,aArD1C,QAuDC0O,KACAgD,GAAe,EAxDhB,QAAAlC,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,kCAAAF,EAAAK,SAAAuC,IAkEP,SAAUb,GAA0BvR,GAApC,OAAAoP,GAAAzT,EAAA4T,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,OACiC,OADjCK,EAAAL,KAAA,EACuC2C,aAAK3F,GAA6B/O,EAAsBE,OAAQmC,GADvG,OAAA+P,EAAAJ,KAIyB2C,YAAYC,KAAK,SAAA/B,GACtB,MAAZA,EACFlV,QAAQZ,MAAM,sDACP8V,EAASM,GAChBxV,QAAQgT,IAAI,kCAEZhT,QAAQZ,MAAR,6DAAAa,OAA2EiV,EAASgC,eAV1F,wBAAAzC,EAAAF,SAAA4C,IAkBA,SAAUjB,GAAkC9L,GAA5C,IAAAgN,EAAA,OAAAtD,GAAAzT,EAAA4T,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAC6B,OAD7BQ,EAAAR,KAAA,EACmChD,GAC/B/O,EAAsBG,eACtB4H,EAAO1F,YACP,KACAnD,GALJ,UAQ4B,OAPpB6V,EADRxC,EAAAP,QAQoC+C,EAAmB5B,GARvD,CAAAZ,EAAAR,KAAA,QASI,OATJQ,EAAAR,KAAA,EASUkB,aAAI,CACR9Q,KAAMZ,EAAiBO,4BACvBO,YAAa0F,EAAO1F,cAX1B,OAaI1E,QAAQgT,IAAI,+BAbhB4B,EAAAR,KAAA,gBAeI,OAfJQ,EAAAR,KAAA,GAeUkB,aAAI,CAAE9Q,KAAMZ,EAAiBQ,0BAfvC,QAgBIgP,KAhBJ,yBAAAwB,EAAAL,SAAA8C,mCC3FUC,iBA8EOC,iBAuCPC,iBAsCAC,IA3JV,SAAUH,GAAiBlN,GAA3B,IAAAsN,EAAAC,EAAA,OAAA7D,GAAAzT,EAAA4T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OADFF,EAAAE,KAAA,EACQmD,GAAoBnN,GAD5B,OAGoB,OAHpB8J,EAAAE,KAAA,EAG0BW,aAAO,SAAA7V,GAAK,OAAIA,EAAMmR,MAAMjG,EAAOV,gBAAgBU,EAAOX,eAHpF,WAIMmO,GAJN1D,EAAAG,KAIsCjK,GAJtC,CAAA8J,EAAAE,KAAA,SA4B6B,OAvBnBsD,EAAc,IAAI/D,GAAwBhB,GAAevI,EAAOX,YAAa1H,EAAsBE,OACtG0U,eAAe,CACdkB,KAAMzN,EAAOT,WACbC,MAAOnI,EACPqW,KACsC,MAApC1N,EAAOP,gBAAgBkO,UACnB,GACA,CACEC,UAAW5N,EAAOP,gBAAgBkO,UAClCE,MAAO7N,EAAOP,gBAAgBqO,WAEtC7P,OAAQ,CAAC+B,EAAO/B,QAIhB+H,KAAMhG,EAAOV,iBAEdkN,eAAe,CACdpS,KAAMqE,GAAiBE,qBACvBU,YAAaW,EAAOX,YACpBC,eAAgBU,EAAOV,iBAzB/BwK,EAAAE,KAAA,EA4BmCsD,EAAYlD,iCA5B/C,UA6B4B,OADlBmD,EA5BVzD,EAAAG,MAAA,CAAAH,EAAAE,KAAA,SA8BM,OA9BNF,EAAAE,KAAA,GA8BYkB,aAAI,CACR9Q,KAAMqE,GAAiBG,2BACvBS,YAAaW,EAAOX,YACpBC,eAAgBU,EAAOV,eACvBa,eAAgBoN,EAEhBhO,WAAYgO,EAAiBE,KAC7BhO,gBAAiBO,EAAOP,gBACxBxB,OAAQ+B,EAAO/B,SAtCvB,QAAA6L,EAAAE,KAAA,iBA0CI,OA1CJF,EAAAE,KAAA,GA0CUkB,aAAI,CACR9Q,KAAMqE,GAAiBI,oBACvBQ,YAAaW,EAAOX,YACpBC,eAAgBU,EAAOV,iBA7C7B,yBAAAwK,EAAAK,SAAA4D,IAkDA,SAASP,GAAqBQ,EAAWhO,GAGvC,KAFoCA,EAAOT,cAAcyO,EAAUtO,WAGjE,OAAO,EAET,IAAMC,EAAwBqO,EAAUrO,sBAClCsO,EAAmBD,EAAUtO,UAAUM,EAAOT,YAE9C2O,EAA0BD,EAAiBxN,gBAAkBd,EAC7DwO,EACJnO,EAAOP,gBAAgBkO,YAAcM,EAAiBzN,QAAQmN,WAC9D3N,EAAOP,gBAAgBqO,YAAcG,EAAiBzN,QAAQsN,UAC1DM,EACJpO,EAAO/B,OAAOH,YAAcmQ,EAAiBhQ,OAAOH,WACpDkC,EAAO/B,OAAOF,eAAiBkQ,EAAiBhQ,OAAOF,cACvDiC,EAAO/B,OAAOE,qBAAuB8P,EAAiBhQ,OAAOE,mBAE/D,OAAO+P,GAA2BC,GAAkCC,EAU/D,SAAUjB,GAAoBnN,GAA9B,IAAAL,EAAA0O,EAAAC,EAAA,OAAA5E,GAAAzT,EAAA4T,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,OAGyB,OAF9BpU,QAAQgT,IAAR,gBAAA/S,OAA4BmK,EAAOV,eAAnC,KAAAzJ,OAAqDmK,EAAOX,YAA5D,gBADKgL,EAAAL,KAAA,EAG+BW,aAClC,SAAA7V,GAAK,OAAIA,EAAMmR,MAAMjG,EAAOV,gBAAgBU,EAAOX,aAAaM,wBAJ7D,OAkBsB,OAfrBA,EAHD0K,EAAAJ,KAOCoE,EAAgB,IAAI9E,GAAwBhB,GAAevI,EAAOX,YAAa1H,EAAsBI,SACxGwU,eAAe,CACdgC,wBAAyB5O,EACzB6O,QAASxO,EAAOV,iBAEjBkN,eAAe,CACdpS,KAAMqE,GAAiBM,sBACvBM,YAAaW,EAAOX,YACpBC,eAAgBU,EAAOV,iBAftB+K,EAAAL,KAAA,EAkB4BqE,EAAcjE,iCAlB1C,UAmBqB,OADpBkE,EAlBDjE,EAAAJ,MAAA,CAAAI,EAAAL,KAAA,aAoBCsE,EAAmBG,cApBpB,CAAApE,EAAAL,KAAA,SAqBD,OArBCK,EAAAL,KAAA,GAqBKkB,aAAI,CACR9Q,KAAMqE,GAAiBK,gBACvBQ,eAAgBU,EAAOV,eACvBD,YAAaW,EAAOX,YACpBM,sBAAuB2O,EAAmBC,0BAzB3C,QAAAlE,EAAAL,KAAA,iBA6BDpU,QAAQgT,IAAR,MAAA/S,OAAkBmK,EAAOX,YAAzB,wBA7BC,yBAAAgL,EAAAF,SAAAuE,IAuCP,SAAUtB,KAAV,IAAAuB,EAAAC,EAAAC,EAAA,OAAAnF,GAAAzT,EAAA4T,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,OACyB,OADzBS,EAAAT,KAAA,EAC+B8E,aAAc,CACzCrQ,GAAiBO,oBACjBP,GAAiBQ,qBAHrB,OACQ0P,EADRlE,EAAAR,KASQ2E,EAAsB,GAT9BC,EAAAnF,GAAAzT,EAAA0T,KAAA,SAAAkF,IAAA,IAAA7O,EAAA+O,EAAA,OAAArF,GAAAzT,EAAA4T,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAamB,OAbnBQ,EAAAR,KAAA,EAayBsC,aAAKqC,GAb9B,UAaU3O,EAbVwK,EAAAP,KAcU8E,EAdV,GAAAlZ,OAcuBmK,EAAOV,eAd9B,KAAAzJ,OAcgDmK,EAAOX,aAE/CW,EAAO5F,OAASqE,GAAiBO,oBAhBzC,CAAAwL,EAAAR,KAAA,YAiB0C,MAAhC4E,EAAoBG,GAjB9B,CAAAvE,EAAAR,KAAA,SAkBuC,OAlBvCQ,EAAAR,KAAA,EAkB6C2C,aAAK,kBAAMU,GAAqBrN,KAlB7E,OAkBQ4O,EAAoBG,GAlB5BvE,EAAAP,KAAAO,EAAAR,KAAA,iBAoBQpU,QAAQZ,MAAR,qDAAAa,OAAmEkZ,IApB3E,QAAAvE,EAAAR,KAAA,oBAsBahK,EAAO5F,OAASqE,GAAiBQ,mBAtB9C,CAAAuL,EAAAR,KAAA,YAuB0C,MAAhC4E,EAAoBG,GAvB9B,CAAAvE,EAAAR,KAAA,SAwBQ,OAxBRQ,EAAAR,KAAA,GAwBcgF,aAAOJ,EAAoBG,IAxBzC,QAyBQH,EAAoBG,GAAW,KAzBvCvE,EAAAR,KAAA,iBA4BQpU,QAAQZ,MAAM,qDA5BtB,yBAAAwV,EAAAL,SAAA0E,KAAA,cAAApE,EAAAwE,cAAAJ,IAAA,eAAApE,EAAAT,KAAA,gCAAAS,EAAAN,SAAA+E,IAsCA,SAAU7B,GAAqBrN,GAA/B,IAAAgO,EAAA,OAAAtE,GAAAzT,EAAA4T,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OAAAU,EAAAX,KAAA,EAEInU,QAAQgT,IAAR,oCAAA/S,OAAgDmK,EAAOV,eAAvD,KAAAzJ,OAAyEmK,EAAOX,cAFpF,OAKM,OALNqL,EAAAV,KAAA,EAKYmF,aAAM/X,GALlB,OAMwB,OANxBsT,EAAAV,KAAA,EAM8BW,aAAO,SAAA7V,GAAK,OAAIA,EAAMmR,MAAMjG,EAAOV,gBAAgBU,EAAOX,eANxF,WAOU+P,GADEpB,EANZtD,EAAAT,OAOgDoF,GAAcrB,GAP9D,CAAAtD,EAAAV,KAAA,SAQQ,OARRU,EAAAV,KAAA,GAQcmD,GAAoBnN,GARlC,QAAA0K,EAAAV,KAAA,gBAWQ,OAXRU,EAAAX,KAAA,GAAAW,EAAAV,KAAA,GAWcsF,eAXd,YAAA5E,EAAAT,KAAA,CAAAS,EAAAV,KAAA,SAYMpU,QAAQgT,IAAR,oCAAA/S,OAAgDmK,EAAOV,eAAvD,KAAAzJ,OAAyEmK,EAAOX,cAZtFqL,EAAAV,KAAA,iBAeMpU,QAAQZ,MAAR,2BAAAa,OAAyCmK,EAAOV,eAAhD,KAAAzJ,OAAkEmK,EAAOX,YAAzE,wBAfN,eAAAqL,EAAA6E,OAAA,6BAAA7E,EAAAP,SAAAqF,GAAA,mBAmBA,SAASJ,GAAuBpB,GAC9B,OAAoB,MAAbA,EAGT,SAASqB,GAAcrB,GACrB,OAAOA,EAAUnO,cAGZ,IAAM4P,GAAY,CACvBrC,KACAsC,aAAWjR,GAAiBC,aAAcwO,IClMrC,SAAwByC,EAAcC,EAAaC,GAAmB,QAAAC,EAAAvV,UAAAC,OAAVuV,EAAU,IAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAVF,EAAUE,EAAA,GAAA1V,UAAA0V,GAC3E,OAAOtD,aAAIjD,GAAAzT,EAAA0T,KAAC,SAAAuG,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA9G,GAAAzT,EAAA4T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGW,OAHXF,EAAAE,KAAA,EAGiBsC,aAAKsD,GAHtB,UAGJQ,EAHItG,EAAAG,MAIJkG,EAJI,CAAArG,EAAAE,KAAA,QAKN,OALMF,EAAAE,KAAA,EAKAgF,aAAOmB,GALP,OAOJE,GAAY,EAPR,UAQAA,EARA,CAAAvG,EAAAE,KAAA,SAUoC,OADtCsG,OATE,EAAAxG,EAAAE,KAAA,GAU0CyG,aAAK,CAACtB,aAAMQ,GAAerD,aAAKsD,KAV1E,WAAAW,EAAAzG,EAAAG,KAAAuG,EAAAhc,OAAAkc,GAAA,EAAAlc,CAAA+b,EAAA,GAULF,EAVKG,EAAA,GAUMF,EAVNE,EAAA,IAYFH,EAZE,CAAAvG,EAAAE,KAAA,SAae,OAbfF,EAAAE,KAAA,GAaqB2C,KAAIlD,WAAJ,GAAKoG,GAALha,OAAcka,EAAd,CAAwBK,KAb7C,QAaJD,EAbIrG,EAAAG,KAAAH,EAAAE,KAAA,iBAeJoG,EAAeE,EAfX,QAAAxG,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iCAAAF,EAAAK,SAAA+F,MDkMZS,CzBpMsC,IyBoMGlS,GAAiBS,qBAAsBgO,kBElMxE0D,IAAV,SAAUA,GAAkB5Q,GAA5B,IAAA6Q,EAAA,OAAAnH,GAAAzT,EAAA4T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAW6B,OAVrB6G,EAAU,IAAItH,GAAwBhB,GAAevI,EAAOX,YAAa,YAC5EkN,eAAe,CACdpL,GAAInB,EAAO+B,UACX+O,aAAc9Q,EAAOgC,iBAEtBwK,eALahY,OAAAyL,EAAA,EAAAzL,CAAA,GAMTwL,EANS,CAOZ5F,KAAMqH,GAAmCE,sBAR/CmI,EAAAE,KAAA,EAWmC6G,EAAQjH,sBAX3C,UAY4B,MAZ5BE,EAAAG,KAAA,CAAAH,EAAAE,KAAA,QAcI,OADApU,QAAQgT,IAAR,WAAA/S,OAAuBmK,EAAO+B,UAA9B,2BAbJ+H,EAAAE,KAAA,EAcUkB,aAAI1W,OAAAyL,EAAA,EAAAzL,CAAA,GACLwL,EADI,CAEP5F,KAAMqH,GAAmCG,0BAhB/C,wBAAAkI,EAAAK,SAAA4G,IAqBO,IAAMC,GAA4B,CACvCC,aAAUxP,GAAmCC,oBAAqBkP,kBCjB1DM,iBAgBAC,iBAyBAC,IAzCV,SAAUF,GAAWlR,GAArB,IAAA6Q,EAAA,OAAAnH,GAAAzT,EAAA4T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKiC,OAJzB6G,EAAU,IAAItH,GAAwBhB,GAAevI,EAAOX,YAAa1H,EAAsBC,MAClG2U,eADa/X,OAAAyL,EAAA,EAAAzL,CAAA,GACOwL,EAAO6D,UAC3B2I,eAAe,CAAEpS,KAAM6I,GAAuBG,qBAHnD0G,EAAAE,KAAA,EAKuC6G,EAAQjH,sBAL/C,UAMgC,MANhCE,EAAAG,KAAA,CAAAH,EAAAE,KAAA,QAOI,OAPJF,EAAAE,KAAA,EAOUkB,aAAI,CAAE9Q,KAAM6I,GAAuBE,yBAP7C,OASI,OATJ2G,EAAAE,KAAA,EASUmD,GAAoB,CACxB9N,YAAaW,EAAOX,YACpBC,eAAgBhE,EAAiBL,EAAaC,cAXpD,wBAAA4O,EAAAK,SAAAkH,IAgBA,SAAUF,GAAcnR,GAAxB,IAAA6Q,EAAA,OAAAnH,GAAAzT,EAAA4T,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,OAKiC,OAJzB6G,EAAU,IAAItH,GAAwBhB,GAAevI,EAAOX,YAAa1H,EAAsBK,SAClGuU,eAAe,CAAEpL,GAAInB,EAAO+B,YAC5ByK,eAAe,CAAEpS,KAAM6I,GAAuBM,wBAHnD8G,EAAAL,KAAA,EAKuC6G,EAAQjH,sBAL/C,UAMgC,MANhCS,EAAAJ,KAAA,CAAAI,EAAAL,KAAA,QAOI,OAPJK,EAAAL,KAAA,EAOUkB,aAAI,CACR9Q,KAAM6I,GAAuBK,0BAC7BvB,UAAW/B,EAAO+B,YATxB,OAYI,OAZJsI,EAAAL,KAAA,EAYUmD,GAAoB,CACxB9N,YAAaW,EAAOX,YACpBC,eAAgBhE,EAAiBL,EAAaC,cAdpD,wBAAAmP,EAAAF,SAAAmH,IAyBA,SAAUF,GAAuBpR,GAAjC,IAAA6Q,EAAAU,EAAA,OAAA7H,GAAAzT,EAAA4T,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAKgC,OAJxB6G,EAAU,IAAItH,GAClBhB,GAAevI,EAAOX,YAAa1H,EAAsBG,aACzD0U,eAAe,CAAEpS,KAAM6I,GAAuBS,wBAHlD8G,EAAAR,KAAA,EAKsC6G,EAAQjH,sBAL9C,UAM+B,OADvB2H,EALR/G,EAAAP,MAAA,CAAAO,EAAAR,KAAA,QAQI,OADApU,QAAQgT,IAAI5I,EAAOX,YAAc,mCAPrCmL,EAAAR,KAAA,EAQUkB,aAAI,CACR9Q,KAAM6I,GAAuBQ,0BAC7BpE,YAAaW,EAAOX,YACpBwE,QAAS0N,IAXf,wBAAA/G,EAAAL,SAAAqH,IAgBO,IAAMC,GAAkB,CAC7BR,aAAUhO,GAAuBC,oBAAqBgO,IACtDD,aAAUhO,GAAuBI,uBAAwB8N,IACzDF,aAAUhO,GAAuBO,uBAAwB4N,kBChEjDM,IAAV,SAAUA,GAAmB1R,GAA7B,IAAA6Q,EAAA,OAAAnH,GAAAzT,EAAA4T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAWuB,OAVf6G,EAAU,IAAItH,GAAwBhB,GAAejR,EAAaE,cAAe,SACpF+U,eAAe,CACdpL,GAAInB,EAAO+B,UACX4P,aAAc3R,EAAO6C,cAEtB2J,eAAe,CACdpS,KAAMmI,GAAoCG,wBAC1CX,UAAW/B,EAAO+B,YARxB+H,EAAAE,KAAA,EAW6B6G,EAAQjH,sBAXrC,UAYsB,MAZtBE,EAAAG,KAAA,CAAAH,EAAAE,KAAA,QAaI,OAbJF,EAAAE,KAAA,EAaUkB,aAAI,CACR9Q,KAAMmI,GAAoCE,4BAC1CV,UAAW/B,EAAO+B,YAfxB,wBAAA+H,EAAAK,SAAAyH,IAoBO,IAAMC,GAA6B,CACxCZ,aAAU1O,GAAoCC,yBAA0BkP,kBCzBhEI,IAAV,SAAUA,GAAoB9R,GAA9B,IAAA6Q,EAAA,OAAAnH,GAAAzT,EAAA4T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAYuB,OAXf6G,EAAU,IAAItH,GAAwBhB,GAAejR,EAAaE,cAAe,YACpF+U,eAAe,CACdpL,GAAInB,EAAO+B,UACXgQ,eAAgB/R,EAAOoF,cACvB4M,SAAUhS,EAAOqF,kBAElBmH,eAAe,CACdpS,KAAM0K,GAAmBG,qBACzBlD,UAAW/B,EAAO+B,YATxB+H,EAAAE,KAAA,EAY6B6G,EAAQjH,sBAZrC,UAasB,MAbtBE,EAAAG,KAAA,CAAAH,EAAAE,KAAA,QAcI,OAdJF,EAAAE,KAAA,EAcUkB,aAAI,CACR9Q,KAAM0K,GAAmBE,yBACzBjD,UAAW/B,EAAO+B,YAhBxB,wBAAA+H,EAAAK,SAAA8H,IAqBO,IAAMC,GAAc,CAACjB,aAAUnM,GAAmBC,sBAAuB+M,kBCTvDK,IAAV,SAAUA,KAAV,OAAAzI,GAAAzT,EAAA4T,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEX,OAFWF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAELoI,aAAG,CACPxG,MADO/V,OAAArB,OAAA6L,EAAA,EAAA7L,CAEJib,IAFIjb,OAAA6L,EAAA,EAAA7L,CAGJid,IAHIjd,OAAA6L,EAAA,EAAA7L,CAIJwc,IAJIxc,OAAA6L,EAAA,EAAA7L,CAKJqd,IALIrd,OAAA6L,EAAA,EAAA7L,CAMJ0d,MARM,OAcX,OAdWpI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAcLkB,aAAI,CAAE9Q,KAAMW,EAAyBC,aAdhC,cAAA8O,EAAAyF,OAAA,2BAAAzF,EAAAK,SAAAkI,GAAA,8BCHf,SAASC,GAAeC,GACtB,ICHwCC,EDGlCC,EAA+B7b,OAAO8b,sCAAwCC,IAE9EC,EAAOC,cACPC,GCNkCN,EDMID,ECLrC,SAAAhC,GAAA,OAAAA,EAAGwC,SAAHxC,EAAayC,SAAe,SAAAhJ,GAAI,OAAI,SAAAhK,GACzC,OAAQA,EAAO5F,MACb,KAAKqE,GAAiBM,sBACpByT,EACE,wFACA,CAAE/b,QAAS,QAASwc,iBAAkB,IAAMC,kBAAkB,IAEhE,MACF,KAAKzR,GAAmCE,mBACtC6Q,EAAe,gBAAA3c,OAEXmK,EAAOX,cAAgB/H,EAAaC,QAAU,UAAY,wBAF/C,MAAA1B,OAGRmK,EAAO+B,UAHC,cAAAlM,OAGqBmK,EAAOmL,aAH5B,KAIb,CAAE1U,QAAS,QAASwc,iBAAkB,MAExC,MACF,KAAKzZ,EAAiBG,aACpB6Y,EAAgB,qCAAuCxS,EAAOmL,aAAc,CAC1E1U,QAAS,QACTwc,iBAAkB,MAEpB,MACF,KAAKxU,GAAiBE,qBACpB6T,EAAgB,mCAAqCxS,EAAOmL,aAAc,CACxE1U,QAAS,QACTwc,iBAAkB,MAEpB,MACF,KAAKhQ,GAAuBE,uBAC1BqP,EAAgB,kDAAgD,CAC9DS,iBAAkB,MAEpB,MACF,KAAKhQ,GAAuBK,0BAC1BkP,EAAgB,gDAA8C,CAC5DS,iBAAkB,MAEpB,MACF,KAAKhQ,GAAuBM,sBAC1BiP,EAAgB,2CAA6CxS,EAAOmL,aAAc,CAChF1U,QAAS,QACTwc,iBAAkB,MAIxBjJ,EAAKhK,ODvCDmT,EAAQC,YACZ3N,GACAgN,EAA6BY,YAAgBT,EAAME,KAIrD,OAFAF,EAAKU,IAAInB,IAEFgB,EAeMI,8BARf,SAA+Bjf,GAC7B,OACE0B,EAAAC,EAAAC,cAACsd,GAAA,EAAD,CAAUL,MAAOb,GAAehe,EAAMke,kBACnCle,EAAMmf,6GEXPC,oLACK,IACCC,EAAYjf,KAAKJ,MAAjBqf,QACR,OACE3d,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CACE4d,UAAWF,EAAQG,KACnBC,WAAS,EACTjG,UAAU,SACVkG,QAAQ,SACRC,WAAW,SACXC,QAAS,IAETle,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,GACRne,EAAAC,EAAAC,cAAA,OAAK2d,UAAWF,EAAQS,KAAM/d,IAAKge,KAAcje,IAAI,uBAEvDJ,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,GACRne,EAAAC,EAAAC,cAACoe,GAAAre,EAAD,CAAkB4d,UAAWF,EAAQY,SAAUC,MAAM,uBAhBtCvgB,aAuBzByf,GAAWpgB,YAAc,aAKVmhB,4BA9CA,CACbX,KAAM,CACJY,SAAU,EACVC,SAAU,WACVC,OAAQ,QAEVR,KAAM,CACJ3gB,SAAU,OACVI,MAAO,OACP+gB,OAAQ,SAqCGH,CAAmBf,ICrDrBmB,GACL,IADKA,GAEJ,SAFIA,GAGL,QAHKA,GAIC,cAJDA,GAKc,aALdA,GAMa,YANbA,GAOH,UAGGC,GAAc,CACzBC,UAAW,qZCWPC,oLACK,IAAAC,EACiDvgB,KAAKJ,MAArD4gB,EADDD,EACCC,UAAWvB,EADZsB,EACYtB,QAASF,EADrBwB,EACqBxB,SAAa0B,EADlC3gB,OAAA4gB,GAAA,EAAA5gB,CAAAygB,EAAA,oCAGP,OACEjf,EAAAC,EAAAC,cAACmf,GAAApf,EAADzB,OAAA8gB,OAAA,CAAQC,WAAS,GAAKJ,GACnBD,GAAaxgB,KAAK8gB,WAAW7B,GAC7BF,sCAKIgC,GACT,OACEzf,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM4d,UAAW4B,EAAWC,OAAQ3B,WAAS,EAACE,WAAW,SAASD,QAAQ,UACxEhe,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,GACRne,EAAAC,EAAAC,cAACyf,GAAA,EAAD,eAhBqB3e,IAAM/C,WAuBrC+gB,GAAiBY,aAAe,CAC9BV,WAAW,EACXzhB,SAAU,KACVoiB,sBAAsB,GAGxBb,GAAiB1hB,YAAc,mBAKhBmhB,4BAjDA,CACbiB,OAAQ,CACNI,OAAQ,GACRnB,SAAU,WACV9gB,MAAO,OACP+gB,OAAQ,OACRmB,WAAY,6BA2CDtB,CAAmBuB,KAAiB,CAAEC,WAAY,MAA/BD,CAAuChB,qFC7CnEkB,GAAuB,CAC3BC,YAAa,QAGTC,GAAyB,CAC7B1iB,OAAQ,YAYW2iB,oLACV,IAAApB,EAUHvgB,KAAKJ,MARPoS,EAFKuO,EAELvO,QACA4P,EAHKrB,EAGLqB,cACAC,EAJKtB,EAILsB,mBACAC,EALKvB,EAKLuB,QACAC,EANKxB,EAMLwB,YACAC,EAPKzB,EAOLyB,mBACAC,EARK1B,EAQL0B,oBACGxB,EATE3gB,OAAA4gB,GAAA,EAAA5gB,CAAAygB,EAAA,qHAYP,OACEjf,EAAAC,EAAAC,cAAC0gB,GAAqBzB,EACnBA,EAAW0B,MACV7gB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC6gB,GAAA9gB,EAAD,KAAcwgB,GACdzgB,EAAAC,EAAAC,cAAC8gB,GAAA/gB,EAAD,KACED,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACG,QAAS,IACtBoC,EAAcW,IAAI,SAAAC,GAAK,OACtBlhB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,GAAIC,GAAIF,EAAMG,QAAU,GAAK,EAAGjiB,IAAK8hB,EAAM9hB,KACxDY,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,YAAY6gB,cAAY,GACzCJ,EAAMK,OAAS3a,EAAgBsa,EAAM9hB,MAExCY,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,SAAS8f,EAAmBW,EAAM9hB,IAAKsR,EAAQwQ,EAAM9hB,YAKjFY,EAAAC,EAAAC,cAACshB,GAAAvhB,EAAD,CAAewhB,sBAAoB,EAACthB,MAAOigB,IACzCpgB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQ0hB,QAASnB,EAAShC,MAAM,UAAUre,MAAOwgB,EAAsBT,QAAuBzb,GAA9F,YAGuB,MAAtBic,EAA6BA,IAAuB,eAlCjB1f,IAAM/C,WCzBjD,SAAS2jB,GACdtY,GAIA,IAHAC,EAGAhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHa,EACbkF,EAEAlF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFkB,CAAEoT,UAAW,KAAMG,UAAW,QAChD7P,EACA1D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADS,GAET,MAAO,CACLH,KAAMqE,GAAiBC,aACvBW,YAAa/H,EAAaE,cAC1B8H,iBACAC,aACAC,MAAOnI,EACPoI,kBACAxB,UAIG,SAAS4Z,GAA+CvY,GAC7D,MAAO,CACLlF,KAAMqE,GAAiBO,oBACvBK,YAAa/H,EAAaE,cAC1B8H,kBAIG,SAASwY,GAA8CxY,GAC5D,MAAO,CACLlF,KAAMqE,GAAiBQ,mBACvBI,YAAa/H,EAAaE,cAC1B8H,kBDuCJ+W,GAAqBT,aAAe,CAClCe,qBAAqB,sEExDjBoB,oLACK,IAAA9C,EAC8BvgB,KAAKJ,MAAlCqf,EADDsB,EACCtB,QAAStI,EADV4J,EACU5J,OAAQ2M,EADlB/C,EACkB+C,QACnBC,EAA0B,MAAXD,EAAkB,CAAE/Z,OAAM,WAAApI,OAAamiB,EAAb,YAA6Bvd,EAG5E,OAAI4Q,EAAS,EACJrV,EAAAC,EAAAC,cAACgiB,GAAAjiB,EAAD,CAAcue,MAAM,QAAQre,MAAO8hB,IACxB,IAAX5M,EACArV,EAAAC,EAAAC,cAACiiB,GAAAliB,EAAD,CAAUue,MAAM,SAASre,MAAO8hB,IAEhCjiB,EAAAC,EAAAC,cAACkiB,GAAAniB,EAAD,CAAoB4d,UAAWF,EAAQ0E,KAAMliB,MAAO8hB,WAXxCjhB,IAAMshB,eAe/BP,GAAWzkB,YAAc,aAMVmhB,4BA9BW,SAAA8D,GAAK,MAAK,CAClCF,KAAM,CAAE7D,MAAO+D,EAAMC,QAAQC,YA6BhBhE,CAA8BsD,yBC1BtC,SAASW,GAA6B5jB,EAAOiN,EAAWxC,GAA6B,IAAjBoZ,EAAiBpe,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KACpF,GAAkB,MAAdgF,GAAkC,MAAZoZ,EAAkB,CAC1C,IAAMjS,EAAU5R,EAAM4K,UAAUH,GAAYe,KAAKqY,GACjD,OAAOnkB,OAAAyL,EAAA,EAAAzL,CAAA,GAAKkS,GACP,GAAkB,MAAdnH,GAAmC,MAAbwC,EAAmB,CAClD,IAAM2E,EAAU5R,EAAM4K,UAAUH,GAAYe,KAAKsY,KAAK,SAAAlS,GAAO,OAAIA,EAAQvF,KAAOY,IAChF,OAAOvN,OAAAyL,EAAA,EAAAzL,CAAA,GAAKkS,GAGd,OADA9Q,QAAQZ,MAAM,8BACP,KAOF,SAAS6jB,GAA0BC,EAAczjB,GAEtD,GAAa,MAATA,EACF,MAF4B,SAI9B,OAAQyjB,GACN,KAAKvd,EAAyBS,SAC9B,KAAKT,EAAyBO,OAC5B,OAAOzG,EAAM9B,KACf,KAAKgI,EAAyBQ,gBAC9B,KAAKG,EAAuBM,eAC1B,OAAOxG,EAAAC,EAAAC,cAAC6iB,GAAD,CAAY1N,QAAShW,IAC9B,KAAKkG,EAAyBM,iBAC9B,KAAKN,EAAyBK,UAC9B,KAAKM,EAAuBQ,mBAC1B,OAAO,IAAIsc,KAAa,IAAR3jB,GAAc4jB,eAAe,SAC/C,KAAK/c,EAAuBI,aAC1B,OAAOA,EAAaS,iBAAmBE,EAAmBF,iBAAmBE,EAAmBD,eAClG,KAAKd,EAAuBG,aAC1B,OAAOrG,EAAAC,EAAAC,cAACgjB,GAAAjjB,EAAD,CAAMkjB,KAAM9jB,EAAO+jB,OAAO,SAASC,IAAI,YAAYhkB,GAE5D,KAAK6G,EAAuBC,eAC1B,GAAqB,IAAjB9G,EAAMmF,OACR,MAtBwB,SAwBxB,IAAI8e,EAAU,GAMd,OALAjkB,EAAM8Q,QAAQ,SAACO,EAAS6S,GACtBD,GAAO,GAAAzjB,OAAO6Q,EAAQnL,EAAyBE,OAAxC,OAAA5F,OAAoD6Q,EAAQnL,EAAyBC,IAArF,KACH+d,EAAQlkB,EAAMmF,OAAO,IACvB8e,GAAW,QAERA,EAGX,KAAKpd,EAAuBE,kBAC1B,GAAqB,IAAjB/G,EAAMmF,OACR,MAnCwB,SAqCxB,IAAIgf,EAAU,GAMd,OALAnkB,EAAM8Q,QAAQ,SAACO,EAAS6S,GACtBC,GAAW9S,EAAQnT,KACfgmB,EAAQlkB,EAAMmF,OAAO,IACvBgf,GAAW,QAERA,EAGX,KAAKtd,EAAuBS,uBAC1B,GAAqB,IAAjBtH,EAAMmF,OACR,MAhDwB,SAkDxB,IAAIif,EAAkB,GAMtB,OALApkB,EAAM8Q,QAAQ,SAACO,EAAS6S,GACtBE,GAAmB/S,EACf6S,EAAQlkB,EAAMmF,OAAO,IACvBif,GAAmB,QAEhBA,EAEX,QACE,OAAOpkB,GAMN,SAASqkB,GAAgCZ,EAAczjB,GAC5D,OAAQyjB,GACN,KAAKvd,EAAyBQ,gBAC5B,OAAO0B,GAAsBpI,GAC/B,QACE,OAAOwjB,GAA0BC,EAAczjB,IAI9C,SAASskB,GAAoBjT,EAASkT,GAE3C,IAAMC,EAAgBnT,EAAQnL,EAAyBQ,kBAAoBA,EAAgBwB,QACrFuc,EAAuBpT,EAAQnL,EAAyBO,QAAQqF,KAAOyY,EAAYzY,GACzF,OAAO0Y,GAAiBC,ECrG1B,IAAMC,GAAuB,CAC3BC,IAAK,CACHC,MAAO,GACPC,OAAQ,GACRvF,SAAU,UAIDwF,GAAa,SAAA5B,GAAK,OAAA/jB,OAAAyL,EAAA,EAAAzL,CAAA,CAC7Bsf,KAAKtf,OAAAsI,EAAA,EAAAtI,CAAA,CACHX,MAAO,OACPumB,WAAY,EACZtmB,cAAe,GACf6C,YAAa,EACb0jB,aAAc,GACb9B,EAAM+B,YAAYC,GAAG,MAAQ,CAC5BH,WAAY,GACZtmB,cAAe,GACf6C,YAAa,GACb0jB,aAAc,KAGlBG,MAAO,CACL9F,SAAU,EACV7gB,MAAO,OACP4mB,UAAW,QAEbC,WAAY,CACVlG,MAAO+D,EAAMC,QAAQxjB,MAAM2lB,MAE7BC,cAAe,CACbpG,MAAO+D,EAAMC,QAAQC,WAEpBsB,KAGQc,GAAqB,SAAAtC,GAAK,MAAK,CAC1CuC,cAAe,CACbC,UAAW,WAEbC,MAAO,CACLjnB,QAAS,QAEXknB,eAAgB,CACdlnB,QAAS,OACTmnB,SAAU,OACVC,KAAM,EACNlH,WAAY,SACZmH,SAAU,UAEZC,KAAM,CACJ3nB,OAAM,GAAAmC,OAAK0iB,EAAMrE,QAAQoH,KAAO,EAA1B,OAAAzlB,OAAiC0iB,EAAMrE,QAAQoH,KAAO,EAAtD,OAERC,iBAAkB,CAChB5nB,QAAO,GAAAkC,OAAK0iB,EAAMrE,QAAQoH,KAAnB,OAAAzlB,OAAkD,EAArB0iB,EAAMrE,QAAQoH,KAA3C,sNCtCLE,GAAwB,CAC5Bvd,OAAQ,iBAGJwd,GAAoB,SAUpBC,8MAqBJC,eAAiB,WACf,OAAO3kB,IAAM4kB,SAAS3E,IAAIjH,MAAM3Y,GAAyB,WACvD,OACErB,EAAAC,EAAAC,cAAC2lB,GAAA5lB,EAAD,KACG1B,EAAKD,MAAMwnB,aAAa7E,IAAI,SAAC8E,EAAQxC,GAAT,OAC3BvjB,EAAAC,EAAAC,cAAC8lB,GAAA/lB,EAAD,CAAQb,IAAKmkB,EAAO0C,QAASF,EAAOG,iBAClClmB,EAAAC,EAAAC,cAACimB,GAAAlmB,EAAD,CAAWO,MAA6B,MAAtBulB,EAAOK,YAAsBL,EAAOK,iBAAc3hB,EAAW9G,QAAQ,SACpF8nB,aASfY,kCAAoC,WAAM,IAAApH,EACW1gB,EAAKD,MAAhDwnB,EADgC7G,EAChC6G,aAAcQ,EADkBrH,EAClBqH,gBAAiB3I,EADCsB,EACDtB,QACvC,OACE3d,EAAAC,EAAAC,cAAC2lB,GAAA5lB,EAAD,KACED,EAAAC,EAAAC,cAACimB,GAAAlmB,EAAD,CAAWsmB,QAAST,EAAathB,QAC/BxE,EAAAC,EAAAC,cAAA,OAAK2d,UAAWF,EAAQ6I,0BACtBxmB,EAAAC,EAAAC,cAACumB,GAAAxmB,EAAD,CAAcue,MAAM,WADtB,6CAEExe,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQymB,KAAK,QAAQ/E,QAAS2E,EAAiB9H,MAAM,WAArD,iBASVmI,cAAgB,WAAM,IAAAC,EAShBroB,EAAKD,MAPPuoB,EAFkBD,EAElBC,UACAf,EAHkBc,EAGlBd,aACAvc,EAJkBqd,EAIlBrd,WACAud,EALkBF,EAKlBE,kBACAC,EANkBH,EAMlBG,eACAC,EAPkBJ,EAOlBI,gBACArJ,EARkBiJ,EAQlBjJ,QAGF,OAAOkJ,EAAUtd,GAAYe,KAAK2W,IAAI,SAACvQ,EAASiS,GAC9C,IAAMsE,EAAkBD,EAAgBE,SAASxW,EAAQvF,IACnDgc,GAAwBF,GAAqC,MAAlBF,EAEjD,OACE/mB,EAAAC,EAAAC,cAAC2lB,GAAA5lB,EAAD,CACE4d,UAAWsJ,EAAuBxJ,EAAQyJ,gBAAa3iB,EACvD4iB,MAAOF,EACPxF,QAASwF,EAAuB,kBAAMJ,EAAexd,EAAYoZ,EAAUjS,EAAQvF,UAAM1G,EACzFrF,IAAKsR,EAAQvF,GACbhL,MAAO8mB,EAAkBzB,QAAwB/gB,GAEhDqhB,EAAa7E,IAAI,SAAC8E,EAAQuB,GAAT,OAChBtnB,EAAAC,EAAAC,cAAC8lB,GAAA/lB,EAAD,CAAQb,IAAKkoB,EAAarB,QAASF,EAAOG,iBACxClmB,EAAAC,EAAAC,cAACimB,GAAAlmB,EAAD,CAAWO,MAAOulB,EAAOK,kBAAe3hB,EAAW9G,QAAQ,SACxDmpB,EAAkBf,EAAO3mB,IAAKsR,EAAQqV,EAAO3mB,KAAMsR,EAAQvF,oFA9EjE,IAAAoc,EAC4D7oB,KAAKJ,MAAhEwnB,EADDyB,EACCzB,aAAc0B,EADfD,EACeC,aAAc5d,EAD7B2d,EAC6B3d,gBAAiBsV,EAD9CqI,EAC8CrI,UAErD,OACElf,EAAAC,EAAAC,cAACunB,GAAAxnB,EAAD,KACGif,EACCxgB,KAAKinB,iBACH6B,EACF9oB,KAAK2nB,oCACiB,IAApBzc,EACF5J,EAAAC,EAAAC,cAAC2lB,GAAA5lB,EAAD,KACED,EAAAC,EAAAC,cAACimB,GAAAlmB,EAAD,CAAWsmB,QAAST,EAAathB,QAAjC,0BAGF9F,KAAKioB,wBAfgB3lB,IAAM/C,WAyFrCynB,GAAiBpoB,YAAc,mBAC/BooB,GAAiB9F,aAAe,CAC9BoH,gBAAiB,IAeJvI,4BAlIA,CACb2I,WAAY,CACVM,OAAQ,WAEVlB,yBAA0B,CACxBzoB,QAAS,OACTkgB,WAAY,WA4HDQ,CAAmBiH,8CCnIbiC,8MAmBnBC,mBAAqB,SAAArN,GAAA,IAAGsN,EAAHtN,EAAGsN,KAAMC,EAATvN,EAASuN,GAAIC,EAAbxN,EAAawN,MAAb,SAAAloB,OAA4BgoB,EAA5B,KAAAhoB,OAAoCioB,EAApC,QAAAjoB,OAA6CkoB,EAA7C,6FAlBZ,IAAA9I,EACyDvgB,KAAKJ,MAA7D0pB,EADD/I,EACC+I,WAAYC,EADbhJ,EACagJ,aAAcC,EAD3BjJ,EAC2BiJ,YAAaC,EADxClJ,EACwCkJ,aAC/C,OACEnoB,EAAAC,EAAAC,cAACkoB,GAAAnoB,EAAD,KACED,EAAAC,EAAAC,cAAC2lB,GAAA5lB,EAAD,KACED,EAAAC,EAAAC,cAACmoB,GAAApoB,EAAD,CACE8nB,MAAOC,EACPM,YAAaL,EACbxQ,KAAMyQ,EACNK,mBAAoB,CAACN,GACrBO,mBAAoB9pB,KAAKkpB,mBACzBa,aAAc,SAACC,EAAGnf,GAAJ,OAAmB4e,EAAa5e,eAZPvI,IAAMshB,eAsBzDqF,GAAsBrqB,YAAc,sEChBfqrB,oLACV,IAAA1J,EACoDvgB,KAAKJ,MAAxDwnB,EADD7G,EACC6G,aAAcrc,EADfwV,EACexV,gBAAiBmf,EADhC3J,EACgC2J,gBACvC,OACE5oB,EAAAC,EAAAC,cAAC2oB,GAAA5oB,EAAD,KACED,EAAAC,EAAAC,cAAC2lB,GAAA5lB,EAAD,KACG6lB,EAAa7E,IAAI,SAAA8E,GAAM,OACtB/lB,EAAAC,EAAAC,cAAC8lB,GAAA/lB,EAAD,CAAQb,IAAK2mB,EAAO3mB,IAAK6mB,QAASF,EAAOG,iBACvClmB,EAAAC,EAAAC,cAACimB,GAAAlmB,EAAD,CAAWO,MAA6B,MAAtBulB,EAAOK,YAAsBL,EAAOK,iBAAc3hB,EAAW9G,QAAQ,SACrFqC,EAAAC,EAAAC,cAAC4oB,GAAA7oB,EAAD,CACE8oB,OAAQtf,EAAgBkO,YAAcoO,EAAO3mB,IAC7C0Y,UAAWrO,EAAgBqO,UAC3B6J,QACEoE,EAAOiD,iBACHvkB,EACA,WACE,IAAMwkB,EAAiB,CACrBtR,UAAWoO,EAAO3mB,IAClB0Y,UAAyC,QAA9BrO,EAAgBqO,UAAsB,OAAS,OAE5D8Q,EAAgBK,KAIvBlD,EAAOxE,OAAS3a,EAAgBmf,EAAO3mB,mBAxBT4B,IAAMshB,eAmCvDqG,GAAoBrrB,YAAc,qHCkB5B4rB,oLACK,IAAAjK,EAQHvgB,KAAKJ,MANPqf,EAFKsB,EAELtB,QACAwL,EAHKlK,EAGLkK,aACAC,EAJKnK,EAILmK,0BACA9C,EALKrH,EAKLqH,gBACA+C,EANKpK,EAMLoK,oBACAC,EAPKrK,EAOLqK,oBAGF,OACEtpB,EAAAC,EAAAC,cAACqpB,GAAAtpB,EAAD,KACED,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CACE4d,UAAWF,EAAQ6L,iBACnBzL,WAAS,EACTjG,UAAU,MACVkG,QAAQ,gBACRC,WAAW,SACXC,QAAS,IAETle,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,GACRne,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,MAAM0oB,IAI5BnpB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,GACPiL,GACCppB,EAAAC,EAAAC,cAACupB,GAAAxpB,EAAD,CAAOue,MAAM,aACXxe,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQQ,QAAQ,WAAW+d,MAAM,UAAUmD,QAAS2E,GAApD,4BAEEtmB,EAAAC,EAAAC,cAACwpB,GAAAzpB,EAAD,SAORD,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,GACRne,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACjG,UAAU,MAAMkG,QAAQ,gBAAgBC,WAAW,UACjEje,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,GAEgB,MAAvBmL,GAA+BtpB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,GAAEmL,MAE9CtpB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,GACRne,EAAAC,EAAAC,cAAA,OAAK2d,UAAWF,EAAQgM,QACtB3pB,EAAAC,EAAAC,cAAA,OAAK2d,UAAWF,EAAQiM,YACtB5pB,EAAAC,EAAAC,cAAC2pB,GAAA5pB,EAAD,OAEFD,EAAAC,EAAAC,cAAC4pB,GAAA7pB,EAAD,CACE8pB,YAAY,WACZpM,QAAS,CACPG,KAAMH,EAAQqM,UACdhF,MAAOrH,EAAQsM,YAEjBC,SAAU,SAAAC,GAAK,OAAId,EAAoBc,EAAM/G,OAAO/jB,uBAvD7C2B,IAAM/C,WAmEjCirB,GAAa5rB,YAAc,eASZmhB,4BApIO,SAAA8D,GAAK,MAAK,CAC9BoH,OAAOnrB,OAAAsI,EAAA,EAAAtI,CAAA,CACLmgB,SAAU,WACVyL,aAAc7H,EAAM8H,MAAMD,aAC1BE,YAAa,EACbC,YAAa,QACbC,YAAaC,gBAAKlI,EAAMC,QAAQkI,OAAOC,MAAO,KAC9CC,UAAW,CACTJ,YAAaC,gBAAKlI,EAAMC,QAAQkI,OAAOC,MAAO,KAEhDE,WAAY,EACZhtB,MAAO,QACN0kB,EAAM+B,YAAYC,GAAG,MAAQ,CAC5BsG,WAAYtI,EAAMrE,QAAQoH,KAC1BznB,MAAO,SAGX+rB,WAAY,CACV/rB,MAA4B,EAArB0kB,EAAMrE,QAAQoH,KACrB1G,OAAQ,OACRD,SAAU,WACVmM,cAAe,OACf/sB,QAAS,OACTkgB,WAAY,SACZ8M,eAAgB,UAElBf,UAAW,CACTxL,MAAO,UACP3gB,MAAO,QAETosB,WAAWzrB,OAAAsI,EAAA,EAAAtI,CAAA,CACT4lB,WAAY7B,EAAMrE,QAAQoH,KAC1BjB,aAAc9B,EAAMrE,QAAQoH,KAC5BxnB,cAAeykB,EAAMrE,QAAQoH,KAC7B3kB,YAAkC,GAArB4hB,EAAMrE,QAAQoH,KAC3B0F,WAAYzI,EAAM0I,YAAYC,OAAO,SACrCrtB,MAAO,QACN0kB,EAAM+B,YAAYC,GAAG,MAAQ,CAC5B1mB,MAAO,IACPstB,UAAW,CACTttB,MAAO,OAIb2rB,iBAAkB,CAChB9rB,OAAQ,YAuFG+gB,CAA0ByK,ICzI1B,SAASkC,GAAuBC,GAAoC,IAAAntB,EAAAC,EAApB0J,EAAoBtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC7E,OAAApG,EAAAD,EAAA,SAAAE,GACE,SAAAktB,EAAYhtB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4sB,IACjB/sB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8sB,GAAAzsB,KAAAH,KAAMJ,KAkCRgoB,gBAAkB,WAChB/nB,EAAKD,MAAMitB,SAAShtB,EAAKO,MAAMyK,WAAYhL,EAAKO,MAAM0L,QAASjM,EAAKO,MAAMmJ,SApCzD1J,EAuCnB4pB,aAAe,SAAAqD,GACbjtB,EAAKuB,SAAS,CAAEyJ,WAAYiiB,IAC5BjtB,EAAKD,MAAMitB,SAASC,EAAUjtB,EAAKO,MAAM0L,QAASjM,EAAKO,MAAMmJ,SAzC5C1J,EA4CnBktB,gBAAkB,SAAAC,GAChBntB,EAAKuB,SAAS,CAAE0K,QAASkhB,IACzBntB,EAAKD,MAAMitB,SAAShtB,EAAKO,MAAMyK,WAAYmiB,EAAantB,EAAKO,MAAMmJ,SA9ClD1J,EAkDnBotB,eAAiB,SAAAC,GACfrtB,EAAKuB,SAAS,CAAEmI,OAAQ2jB,EAAYriB,WAAY,IAC5CvB,GAAe4jB,GACjBrtB,EAAKD,MAAM+qB,oBAAoBuC,EAAW7jB,cAE1CxJ,EAAKD,MAAMitB,SAAS,EAAGhtB,EAAKO,MAAM0L,QAASohB,IApD7CrtB,EAAKO,MAAQ,CACXyK,WAAY,EACZiB,QvCWC,CACLmN,UAAW,KACXG,UAAW,QuCZP7P,OAAQJ,GANOtJ,EADrB,OAAAC,OAAAU,EAAA,EAAAV,CAAA8sB,EAAAltB,GAAAI,OAAAW,EAAA,EAAAX,CAAA8sB,EAAA,EAAAlsB,IAAA,oBAAAC,MAAA,WAeIX,KAAKJ,MAAMitB,SAAS,EAAG7sB,KAAKI,MAAM0L,QAAS9L,KAAKI,MAAMmJ,UAf1D,CAAA7I,IAAA,SAAAC,MAAA,WAkBW,IAAAU,EACiCrB,KAAKI,MAArCyK,EADDxJ,EACCwJ,WAAYiB,EADbzK,EACayK,QAASvC,EADtBlI,EACsBkI,OAE7B,OACEjI,EAAAC,EAAAC,cAACmrB,EAAD7sB,OAAA8gB,OAAA,CACE/V,WAAYA,EACZiB,QAASA,EACTvC,OAAQA,EAERqe,gBAAiB5nB,KAAK4nB,gBACtB6B,aAAczpB,KAAKypB,aACnBsD,gBAAiB/sB,KAAK+sB,gBACtBE,eAAgBjtB,KAAKitB,gBACjBjtB,KAAKJ,YA/BjBgtB,EAAA,CAA4CtqB,IAAM/C,WAAlDC,EAWSZ,YAXT,0BAAAuC,OAWiDzC,EAAsBiuB,GAXvE,KAAAltB,ECgBF,IAAM0tB,GAAiB,iBAEjBC,GAA+B,CACnC,CAAE1sB,IAAKmG,EAAyBE,MAAOygB,iBAAiB,GACxD,CAAE9mB,IAAK8G,EAAuBQ,mBAAoBwf,iBAAiB,GACnE,CAAE9mB,IAAKmG,EAAyBS,SAAUub,MAAO,oBAAqB2E,iBAAiB,GACvF,CAAE9mB,IAAK8G,EAAuBI,aAAc4f,iBAAiB,GAC7D,CAAE9mB,IAAK8G,EAAuBM,eAAgB0f,iBAAiB,IAG3D6F,GAA4B,CAChC,CAAE3sB,IAAKmG,EAAyBE,MAAOygB,iBAAiB,GACxD,CAAE9mB,IAAK8G,EAAuBQ,mBAAoBwf,iBAAiB,GACnE,CAAE9mB,IAAKmG,EAAyBS,SAAUub,MAAO,oBAAqB2E,iBAAiB,GACvF,CAAE9mB,IAAK8G,EAAuBI,aAAc4f,iBAAiB,GAC7D,CACE3E,MAAO,SACPniB,IAAKysB,GACL3F,iBAAiB,EACjB8C,aAAa,EACb5C,YAAa,WAIX4F,8MAwEJC,0BAA4B,WAC1B,IAAMC,EAA8B3tB,EAAK4tB,gCACnCC,EAAcpkB,GAAezJ,EAAKD,MAAM2J,QAC9C,OACEjI,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAACmsB,GAAApsB,EAAD,CACEqsB,SAAUF,EACVG,SAAUL,IAAgCE,EAC1CI,QAASxsB,EAAAC,EAAAC,cAACusB,GAAAxsB,EAAD,CAAOue,MAAM,YACtB+C,MAAM,oBACN2I,SAAU,kBAAM3rB,EAAKD,MAAMqtB,eAAenjB,SAE5CxI,EAAAC,EAAAC,cAACmsB,GAAApsB,EAAD,CACEqsB,SAAUF,EACVG,QAASL,IAAgCE,EACzCI,QAASxsB,EAAAC,EAAAC,cAACusB,GAAAxsB,EAAD,CAAOue,MAAM,YACtB+C,MAAM,gBACN2I,SAAU,kBAAM3rB,EAAKD,MAAMqtB,eAAepjB,aAMlDue,kBAAoB,SAACnP,EAAWtY,EAAO0M,GAAc,IAAAkT,EACmC1gB,EAAKD,MAAnFouB,EAD2CzN,EAC3CyN,kBAAmBC,EADwB1N,EACxB0N,kBAAmBpjB,EADK0V,EACL1V,WAAYqjB,EADP3N,EACO2N,wBAE1D,OAAQjV,GACN,KAAKkU,GACH,OAAOe,EAAwB1F,SAASnb,GACtC/L,EAAAC,EAAAC,cAAC2sB,GAAA5sB,EAAD,CAAUue,MAAM,WAEhBxe,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC4sB,GAAA7sB,EAAD,CACE0hB,QAAS,SAAAwI,GACPuC,EAAkB3gB,EAAWxC,GAC7B4gB,EAAM4C,oBAGR/sB,EAAAC,EAAAC,cAAC8sB,GAAA/sB,EAAD,CAAYue,MAAM,YAEpBxe,EAAAC,EAAAC,cAAC4sB,GAAA7sB,EAAD,CACE0hB,QAAS,SAAAwI,GACPwC,EAAkB5gB,EAAWxC,GAC7B4gB,EAAM4C,oBAGR/sB,EAAAC,EAAAC,cAAC+sB,GAAAhtB,EAAD,CAAcue,MAAM,aAI5B,QACE,OAAOqE,GAA0BlL,EAAWtY,OAIlD8sB,8BAAgC,WAC9B,OACE5tB,EAAKD,MAAM2J,OAAOH,YAAcS,KAAyBT,WACzDvJ,EAAKD,MAAM2J,OAAOF,eAAiBQ,KAAyBR,mGAjI1CmlB,GACpB,OACExuB,KAAKJ,MAAM4gB,YAAcgO,EAAUhO,WACnCxgB,KAAKJ,MAAMqL,wBAA0BujB,EAAUvjB,uBAC/CjL,KAAKJ,MAAMsuB,0BAA4BM,EAAUN,yDAI5C,IAAAhG,EAcHloB,KAAKJ,MAZPuoB,EAFKD,EAELC,UACAmB,EAHKpB,EAGLoB,WACA9I,EAJK0H,EAIL1H,UACAvV,EALKid,EAKLjd,sBACA6d,EANKZ,EAMLY,aACAT,EAPKH,EAOLG,eACAT,EARKM,EAQLN,gBACA6B,EATKvB,EASLuB,aACAsD,EAVK7E,EAUL6E,gBACAE,EAXK/E,EAWL+E,eACApiB,EAZKqd,EAYLrd,WACAiB,EAbKoc,EAaLpc,QAEI0hB,EAA8BxtB,KAAKytB,gCAEzC,OACEnsB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAACitB,GAAD,CACEhE,aAAa,yBACbC,2BACGlK,GACD2H,EAAUriB,OAAS,GACM,MAAzBqiB,EAAUtd,IACVI,EAAwBkd,EAAUtd,GAAYkB,gBAEhD6b,gBAAiBA,EACjB+C,oBAAqB,SAAA+D,GAAQ,OAC3BzB,EAAehkB,GAAyBylB,EAAU5kB,QAEpD8gB,oBAAqB5qB,KAAKutB,4BAE5BjsB,EAAAC,EAAAC,cAACmtB,GAAAptB,EAAD,KACED,EAAAC,EAAAC,cAACotB,GAAD,CACExH,aAAcoG,EAA8BH,GAA4BD,GACxEriB,gBAAiBe,EACjBoe,gBAAiB6C,IAGnBzrB,EAAAC,EAAAC,cAACqtB,GAAD,CACEzH,aAAcoG,EAA8BH,GAA4BD,GACxEjF,UAAWA,EACXjd,gBAAiBoe,EACjBR,aAAcA,EACdtI,UAAWA,EACX3V,WAAYA,EACZud,kBAAmBpoB,KAAKooB,kBACxBR,gBAAiBA,EACjBS,eAAgBA,IAGlB/mB,EAAAC,EAAAC,cAACstB,GAAD,CACExF,WAAYA,EACZC,aAAc5mB,EACd6mB,YAAa3e,EACb4e,aAAcA,aAjEAnnB,IAAM/C,WAuIhC+tB,GAAY1uB,YAAc,cAwBX8tB,UAAuBY,GAAazjB,sFCjM9BklB,eACnB,SAAAA,EAAYnvB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+uB,IACjBlvB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAivB,GAAA5uB,KAAAH,KAAMJ,KAgFRovB,mBAAqB,SAAAvD,GACnB5rB,EAAKuB,SAAS,CACZ6tB,kCAAkC,EAClCve,cAAe+a,EAAM/G,OAAO/jB,SApFbd,EAwFnBqvB,yBAA2B,SAAAzD,GACzB5rB,EAAKuB,SAAS,CAAEuP,gBAAiB8a,EAAM/G,OAAO/jB,SAzF7Bd,EA4FnBsvB,sBAAwB,WAAM,IAAA5O,EACI1gB,EAAKD,MAA7BwvB,EADoB7O,EACpB6O,YAAaC,EADO9O,EACP8O,OAGY,KAA7BxvB,EAAKO,MAAMsQ,cACb7Q,EAAKuB,SAAS,CAAE6tB,kCAAkC,IAElDI,EAAOD,EAAY3iB,GAAI5M,EAAKO,MAAMsQ,cAAe7Q,EAAKO,MAAMuQ,gBAAgB3P,SAhG9EnB,EAAKO,MAAQ,CACXsQ,cAAe,GACfC,gBAAiB,GACjBse,kCAAkC,GANnBpvB,wEAUV,IAAAqoB,EAC8EloB,KAAKJ,MAAlFwvB,EADDlH,EACCkH,YAAqBtN,GADtBoG,EACcmH,OADdnH,EACsBpG,SAASwN,EAD/BpH,EAC+BoH,UAAWC,EAD1CrH,EAC0CqH,iBAAqB9O,EAD/D3gB,OAAA4gB,GAAA,EAAA5gB,CAAAooB,EAAA,mEAGP,OACE5mB,EAAAC,EAAAC,cAAC0gB,GAADpiB,OAAA8gB,OAAA,CAAkBJ,UAAW8O,GAAe7O,GACzCA,EAAW0B,MACV7gB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC6gB,GAAA9gB,EAAD,wCAAAJ,OACsC,IAAImjB,KACmB,IAAzD8K,EAAY5nB,EAAuBQ,qBACnCwnB,mBAAmB,SAHvB,MAAAruB,OAGoCiuB,EAAYvoB,EAAyBE,SAEzEzF,EAAAC,EAAAC,cAAC8gB,GAAA/gB,EAAD,KACED,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACE,WAAW,SAASC,QAAS,IAC3Cle,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,GAAIgN,GAAI,GACrBnuB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,SAApB,6CAEFT,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,GAAIgN,GAAI,GACrBnuB,EAAAC,EAAAC,cAACkuB,GAAAnuB,EAAD,CACEsf,WAAS,EACT2K,SAAUxrB,KAAKgvB,mBACfruB,MAAOX,KAAKI,MAAMsQ,cAClBif,cAAY,EACZrJ,MAAOhlB,EAAAC,EAAAC,cAACouB,GAAAruB,EAAD,CAAesuB,WAAY,IAClCvvB,MAAON,KAAKI,MAAM6uB,kCAElB3tB,EAAAC,EAAAC,cAACsuB,GAAAvuB,EAAD,CAAUZ,MAAM,GAAGitB,UAAQ,EAACmC,UAAQ,GAApC,aAGAzuB,EAAAC,EAAAC,cAACsuB,GAAAvuB,EAAD,CAAUZ,MAAOmH,EAAeY,iBAAhC,SACApH,EAAAC,EAAAC,cAACsuB,GAAAvuB,EAAD,CAAUZ,MAAOmH,EAAeU,gBAAhC,QAIJlH,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,YAAY6gB,cAAY,GAA5C,oCAGAthB,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAAD,CACEsf,WAAS,EACToP,WAAS,EACTluB,QAAQ,WACRpB,MAAOX,KAAKI,MAAMuQ,gBAClB6a,SAAUxrB,KAAKkvB,yBACfztB,MAAO,CAAEyuB,UAAW,UAIvBX,GACCjuB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,YAAY+d,MAAM,SAAtC,6DAORxe,EAAAC,EAAAC,cAACshB,GAAAvhB,EAAD,KACED,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQ0hB,QAASnB,EAAShC,MAAM,WAAhC,WAGAxe,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQ0hB,QAASjjB,KAAKmvB,sBAAuBrP,MAAM,WAAnD,mBAxEqCxd,IAAM/C,WAwGzDwvB,GAAsBnwB,YAAc,wBCjGpC,IAAMuxB,GAAsB,CAC1B,CAAEzvB,IAAKmG,EAAyBE,OAChC,CAAErG,IAAK8G,EAAuBQ,oBAC9B,CAAEtH,IAAKmG,EAAyBG,aAChC,CAAEtG,IAAKmG,EAAyBI,YAChC,CAAEvG,IAAK8G,EAAuBS,wBAC9B,CAAEvH,IAAK8G,EAAuBI,cAC9B,CAAElH,IAAK8G,EAAuBG,cAC9B,CAAEjH,IAAK8G,EAAuBO,mBAG1BqoB,eACJ,SAAAA,EAAYxwB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAowB,IACjBvwB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAswB,GAAAjwB,KAAAH,KAAMJ,KAsHRywB,0BAA4B,SAAChjB,EAAWxC,GACtC,IACMsD,EADc6V,GAA6BnkB,EAAKD,MAAM0wB,iBAAkBjjB,EAAWxC,GACzDrD,EAAuBG,cAEpC,MAAfwG,GACFjM,OAAOigB,KAAKhU,EAAa,SAAU,aA5HpBtO,EA+HnB0wB,iBAAmB,WACjB1wB,EAAKuB,SAAS,CAAEovB,kBAAkB,KAhIjB3wB,EAmInB4wB,kBAAoB,WAClB5wB,EAAKD,MAAM8wB,0BACX7wB,EAAKuB,SAAS,CAAEuvB,mBAAmB,KAlInC9wB,EAAKO,MAAQ,CACXowB,kBAAkB,EAClBG,mBAAmB,EAInBC,wBAAyB,IATV/wB,mFAqBjBG,KAAKJ,MAAMixB,yCAAyCjqB,EAAiBL,EAAaI,wDAIlF3G,KAAKJ,MAAMkxB,wCAAwClqB,EAAiBL,EAAaI,SACjF3G,KAAKJ,MAAMmxB,2CAGJ,IAAAC,EAAAhxB,KAAAugB,EAUHvgB,KAAKJ,MARPqf,EAFKsB,EAELtB,QACAqR,EAHK/P,EAGL+P,iBACAW,EAJK1Q,EAIL0Q,6BACAC,EALK3Q,EAKL2Q,iBACAC,EANK5Q,EAML4Q,aACAvgB,EAPK2P,EAOL3P,oCACAC,EARK0P,EAQL1P,kBACAC,EATKyP,EASLzP,mBATKzP,EAWkErB,KAAKI,MAAtEowB,EAXDnvB,EAWCmvB,iBAAkBG,EAXnBtvB,EAWmBsvB,kBAAmBC,EAXtCvvB,EAWsCuvB,wBAE7C,OACEtvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACF,UAAWF,EAAQG,MACjC9d,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACC,QAAQ,UACtBhe,EAAAC,EAAAC,cAAC4vB,GAAA7vB,EAAD,CAAO4d,UAAWF,EAAQ6G,OACxBxkB,EAAAC,EAAAC,cAAC6vB,GAAD,CACElJ,UAAWmI,EAAiBtlB,UAC5Bse,WAAYgH,EAAiBplB,gBAC7BsV,UAAW8P,EAAiBnlB,cAC5BF,sBAAuBqlB,EAAiBrlB,sBACxC6d,aAAcwH,EAAiBllB,uBAC/ByhB,SAAU,SAAChiB,EAAYE,EAAiBxB,GACtC0nB,EACErqB,EAAiBL,EAAaI,QAC9BkE,EACAE,EACAxB,IAGJohB,oBAAqB,SAAAzhB,GACnBgoB,EACEhO,GAAmCtc,EAAiBL,EAAaI,SACjEuC,IAGJ8kB,kBAAmBhuB,KAAKqwB,0BACxBpC,kBAAmB,SAAC5gB,EAAWxC,GAC7BmmB,EAAK5vB,SAAS,CACZuvB,mBAAmB,EACnBC,wBAAyB5M,GAA6BsM,EAAkBjjB,EAAWxC,MAGvFwd,eAAgB,SAACxd,EAAYoZ,EAAU5W,GACrC2jB,EAAK5vB,SAAS,CACZovB,kBAAkB,EAClBI,wBAAyB5M,GACvBsM,EACAjjB,EACAxC,EACAoZ,MAINiK,wBAAyBtd,QAOnCtP,EAAAC,EAAAC,cAAC8vB,GAAD,CACEnP,KAAMqO,EACNzO,YAAW,qBAAA5gB,OAAuB,IAAImjB,KACiC,IAArEsM,EAAwBppB,EAAuBQ,qBAC/CwnB,mBAAmB,SAFV,MAAAruB,OAEuByvB,EAAwB/pB,EAAyBE,QACnFiL,QAAS4e,EACThP,cAAeuO,GACftO,mBAAoBsC,GACpBrC,QAAS9hB,KAAKuwB,mBAGhBjvB,EAAAC,EAAAC,cAAC+vB,GAAD,CACE7wB,IAAKkwB,EAAwBnkB,GAC7B0V,KAAMwO,EACNnQ,UAAW3P,EACX0e,iBAAkBze,EAClBse,YAAawB,EACbvB,OAAQ,SAAChiB,EAAWqD,EAAeC,GAA3B,OACNwgB,EAAa9jB,EAAWqD,EAAeC,IAEzCmR,QAAS9hB,KAAKywB,wEAnGU7wB,EAAOQ,GACrC,OAAIR,EAAMgR,oCAAoC4X,SAASpoB,EAAMwwB,wBAAwBnkB,IAC5E,CAAEkkB,mBAAmB,GACvB,YAlBcruB,IAAM/C,WA0I/B6wB,GAAWxxB,YAAc,aAEzB,IAyBeU,KACbygB,qBAAW0F,GAAX1F,CACEyR,aA3BoB,SAAApxB,GACtB,MAAO,CACLkwB,iBAAkBlwB,EAAMmR,MAAM3K,EAAiBL,EAAaI,SAAS8qB,aACrE7gB,oCACExQ,EAAMyR,MAAMjL,EAAiBL,EAAaI,SAASiK,oCACrDC,kBAAmBzQ,EAAMyR,MAAMjL,EAAiBL,EAAaI,SAASkK,kBACtEC,mBAAoB1Q,EAAMyR,MAAMjL,EAAiBL,EAAaI,SAASmK,qBAIhD,SAAAwN,GACzB,OAAOoT,YACL,CACET,6BAA8B/N,GAC9B2N,yCAA0C1N,GAC1C2N,wCAAyC1N,GACzC8N,iBAAkBzmB,GAClB0mB,aAAc1gB,GACdigB,wBAAyB,iBAAO,CAAEhrB,KAAM0K,GAAmBI,6BAC3DugB,QAAS,iBAAO,CAAErrB,KAAM0K,GAAmBjD,YAE7CmR,IAMAkT,CAGEpB,kGC/LAuB,GAAY,CAChBC,WAAY,SACZ9R,MAAO,iBAGF,SAAS+R,GAAiBjyB,GAC/B,OACE0B,EAAAC,EAAAC,cAACK,EAAAN,EAADzB,OAAA8gB,OAAA,CAAYd,MAAM,gBAAgBX,UAAWvf,EAAMkyB,YAAY7S,QAAQ4H,kBAAsBjnB,EAAMmyB,YAChGnyB,EAAMmf,UAKb,SAASiT,GAATnW,GAAgD,IAAtBoW,EAAsBpW,EAAtBoW,SAAaryB,EAASE,OAAA4gB,GAAA,EAAA5gB,CAAA+b,EAAA,cAC9C,OAAOva,EAAAC,EAAAC,cAAA,MAAA1B,OAAA8gB,OAAA,CAAKsR,IAAKD,GAAcryB,IAG1B,SAASuyB,GAAQvyB,GACtB,OACE0B,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAADzB,OAAA8gB,OAAA,CACEC,WAAS,EACT7hB,OAAO,SACP+C,QAAQ,WACRqwB,WAAY,CACVJ,kBACAK,WAAWvyB,OAAAyL,EAAA,EAAAzL,CAAA,CACTqf,UAAWvf,EAAMkyB,YAAY7S,QAAQqH,MACrC2L,SAAUryB,EAAM0yB,SAChBvT,SAAUnf,EAAMmf,UACbnf,EAAMmyB,cAGTnyB,EAAMkyB,YAAYS,iBAKrB,SAASC,GAAe5yB,GAC7B,OAAO0B,EAAAC,EAAAC,cAAA,OAAK2d,UAAWvf,EAAMkyB,YAAY7S,QAAQsH,gBAAiB3mB,EAAMmf,UAGnE,SAAS0T,GAAW7yB,GAGzB,OAFAsB,QAAQgT,IAAItU,GAGV0B,EAAAC,EAAAC,cAACkxB,GAAAnxB,EAAD,CACE4d,UAAWvf,EAAMkyB,YAAY7S,QAAQ0H,KACrCgM,UAAW,EACX9P,MAAOjjB,EAAMgM,KAAKiX,MAClB+P,SAAUhzB,EAAMizB,YAAY5P,QAC5B6P,WAAYxxB,EAAAC,EAAAC,cAACuxB,GAAAxxB,EAAe3B,EAAMizB,eAKjC,SAASG,GAAKpzB,GACnB,OACE0B,EAAAC,EAAAC,cAAC4vB,GAAA7vB,EAADzB,OAAA8gB,OAAA,CAAOqS,QAAM,EAACxxB,MAAOkwB,IAAe/xB,EAAMmyB,YACvCnyB,EAAMmf,UCxDb,IAAMmU,GAAmB,CACvBrB,oBACAM,WACAK,kBACAC,cACAO,SAGIG,GAAqB,CACzBC,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,WAAY,IAGRC,eACJ,SAAAA,EAAY5zB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwzB,IACjB3zB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0zB,GAAArzB,KAAAH,KAAMJ,KAqFR6zB,cAAgB,WAAM,IACZA,EAAkB5zB,EAAKD,MAAvB6zB,cAER5zB,EAAKuB,SAAS+xB,IAEdM,KA3FiB5zB,EA8FnB6zB,aAAe,WAAM,IACXA,EAAiB7zB,EAAKD,MAAtB8zB,aADWryB,EAEgCxB,EAAKO,MAAhDgzB,EAFW/xB,EAEX+xB,MAAOC,EAFIhyB,EAEJgyB,YAAaC,EAFTjyB,EAESiyB,OAAQC,EAFjBlyB,EAEiBkyB,WAEpCG,EAAa,CACXN,QACAC,cACAC,OAAQA,EAAO3yB,MACf4yB,gBAtGe1zB,EA0GnB8zB,eAAiB,SAAC90B,EAAM4sB,GACtB5rB,EAAKuB,SAALtB,OAAAsI,EAAA,EAAAtI,CAAA,GACGjB,EAAO4sB,EAAM/G,OAAO/jB,SA5GNd,EAgHnB+zB,qBAAuB,SAAA/0B,GAAI,OAAI,SAAA8B,GAC7Bd,EAAKuB,SAALtB,OAAAsI,EAAA,EAAAtI,CAAA,GACGjB,EAAO8B,MA/GVd,EAAKO,MAAQ+yB,GAHItzB,wEAMV,IAAAmxB,EAAAhxB,KAAAugB,EAC+FvgB,KAAKJ,MAAnGqf,EADDsB,EACCtB,QAASnP,EADVyQ,EACUzQ,kBAAmBC,EAD7BwQ,EAC6BxQ,YAAayQ,EAD1CD,EAC0CC,UAAWqT,EADrDtT,EACqDsT,SAAUC,EAD/DvT,EAC+DuT,aAAiBrT,EADhF3gB,OAAA4gB,GAAA,EAAA5gB,CAAAygB,EAAA,qFAAAwT,EAE4C/zB,KAAKI,MAAhDgzB,EAFDW,EAECX,MAAOC,EAFRU,EAEQV,YAAaC,EAFrBS,EAEqBT,OAAQC,EAF7BQ,EAE6BR,WAIpC,OAFK/S,GAAcqT,IAAYC,GAAc9zB,KAAKyzB,gBAGhDnyB,EAAAC,EAAAC,cAAC0gB,GAADpiB,OAAA8gB,OAAA,GAAsBH,EAAtB,CAAkCD,UAAWA,IAAcqT,EAAUG,OAAO,SAC1E1yB,EAAAC,EAAAC,cAACyf,GAAA,EAAD,kCACA3f,EAAAC,EAAAC,cAAC8gB,GAAA/gB,EAAD,CAAe0d,QAAS,CAAEG,KAAMH,EAAQmH,gBACtC9kB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACG,QAAS,IACvBle,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAAD,CACEshB,MAAM,SACN7jB,OAAO,SACP+C,QAAQ,WACR8e,WAAS,EACTlgB,MAAOyyB,EACP5H,SAAU,SAAAC,GAAK,OAAIuF,EAAK2C,eAAe,QAASlI,OAGpDnqB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAAD,CACEshB,MAAM,cACN7jB,OAAO,SACP+C,QAAQ,WACR8e,WAAS,EACTlgB,MAAO0yB,EACP7H,SAAU,SAAAC,GAAK,OAAIuF,EAAK2C,eAAe,cAAelI,OAG1DnqB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACyyB,GAAA,EAAD,CACEhV,QAASA,EACTsT,eAAgB,CACd1P,MAAO,SACPqR,gBAAiB,CACfC,QAAQ,IAGZC,QAASrkB,EACTwjB,WAAYL,GACZvyB,MAAO2yB,EACP9H,SAAUxrB,KAAK4zB,qBAAqB,UACpCvI,YAAY,sBACZgJ,aAAW,EACX7T,UAAW1Q,KAGfxO,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAAD,CACEshB,MAAM,aACN7jB,OAAO,SACP+C,QAAQ,WACR8e,WAAS,EACTlgB,MAAO4yB,EACP/H,SAAU,SAAAC,GAAK,OAAIuF,EAAK2C,eAAe,aAAclI,OAGxDoI,GACCvyB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,YAAY+d,MAAM,QAAQ8C,cAAY,GAA1D,6DAORthB,EAAAC,EAAAC,cAACshB,GAAAvhB,EAAD,KACED,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQue,MAAM,UAAUmD,QAASjjB,KAAKyzB,eAAtC,WAGAnyB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQue,MAAM,UAAUmD,QAASjjB,KAAK0zB,cAAtC,kBA/EoBn0B,aAwH9Bi0B,GAAgB50B,YAAc,kBAWfmhB,4BAAWoG,GAAXpG,CAA+ByT,IC3IxCc,GAA2B,CAC/B,CAAE5zB,IAAKmG,EAAyBC,GAAI0gB,iBAAiB,GACrD,CAAE9mB,IAAKmG,EAAyBE,MAAOygB,iBAAiB,GACxD,CAAE9mB,IAAKmG,EAAyBK,UAAWsgB,iBAAiB,GAC5D,CAAE9mB,IAAKmG,EAAyBO,OAAQogB,iBAAiB,IAGrD+M,GAA2B,GAAApzB,OAC5BmzB,GAD4B,CAE/B,CAAE5zB,IAAKmG,EAAyBM,iBAAkBqgB,iBAAiB,GACnE,CAAE9mB,IAAKmG,EAAyBQ,gBAAiBmgB,iBAAiB,KAG9DgN,8MA0EJjH,0BAA4B,WAC1B,IAAMkH,EAA+B50B,EAAK60B,gCACpChH,EAAcpkB,GAAezJ,EAAKD,MAAM2J,QAC9C,OACEjI,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAACmsB,GAAApsB,EAAD,CACEqsB,SAAUF,EACVG,SAAU4G,IAAiC/G,EAC3CI,QAASxsB,EAAAC,EAAAC,cAACusB,GAAAxsB,EAAD,CAAOue,MAAM,YACtB+C,MAAM,qBACN2I,SAAU,kBAAM3rB,EAAKD,MAAMqtB,eAAezjB,SAE5ClI,EAAAC,EAAAC,cAACmsB,GAAApsB,EAAD,CACEqsB,SAAUF,EACVG,QAAS4G,IAAiC/G,EAC1CI,QAASxsB,EAAAC,EAAAC,cAACusB,GAAAxsB,EAAD,CAAOue,MAAM,YACtB+C,MAAM,yBACN2I,SAAU,kBAAM3rB,EAAKD,MAAMqtB,eAAevjB,aAOlDgrB,8BAAgC,WAC9B,OACE70B,EAAKD,MAAM2J,OAAOH,YAAcM,KAAwBN,WACxDvJ,EAAKD,MAAM2J,OAAOF,eAAiBK,KAAwBL,mGAnGzCmlB,GACpB,OACExuB,KAAKJ,MAAM4gB,YAAcgO,EAAUhO,WACnCxgB,KAAKJ,MAAMqL,wBAA0BujB,EAAUvjB,uBAC/CjL,KAAKJ,MAAM0oB,kBAAoBkG,EAAUlG,iDAIpC,IAAA/H,EAgBHvgB,KAAKJ,MAdP4gB,EAFKD,EAELC,UACAmU,EAHKpU,EAGLoU,kBACAxM,EAJK5H,EAIL4H,UACAld,EALKsV,EAKLtV,sBACAqe,EANK/I,EAML+I,WACAR,EAPKvI,EAOLuI,aACAT,EARK9H,EAQL8H,eACAT,EATKrH,EASLqH,gBACA6B,EAVKlJ,EAULkJ,aACAsD,EAXKxM,EAWLwM,gBACAE,EAZK1M,EAYL0M,eACApiB,EAbK0V,EAaL1V,WACAiB,EAdKyU,EAcLzU,QACAwc,EAfK/H,EAeL+H,gBAEImM,EAA+Bz0B,KAAK00B,gCAE1C,OACEpzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAACitB,GAAD,CACEhE,aAAckK,EACdjK,2BACGlK,GACD2H,EAAUriB,OAAS,GACM,MAAzBqiB,EAAUtd,IACVI,EAAwBkd,EAAUtd,GAAYkB,gBAEhD6b,gBAAiBA,EACjB+C,oBAAqB,SAAA+D,GAAQ,OAAIzB,EAAehkB,GAAyBylB,EAAUhlB,QACnFkhB,oBAAqB5qB,KAAKutB,4BAE5BjsB,EAAAC,EAAAC,cAACmtB,GAAAptB,EAAD,KACED,EAAAC,EAAAC,cAACotB,GAAD,CACExH,aAAcqN,EAA+BH,GAA2BC,GACxExpB,gBAAiBe,EACjBoe,gBAAiB6C,IAGnBzrB,EAAAC,EAAAC,cAACqtB,GAAD,CACEzH,aAAcqN,EAA+BH,GAA2BC,GACxEpM,UAAWA,EACXjd,gBAAiBoe,EACjBR,aAAcA,EACdtI,UAAWA,EACX3V,WAAYA,EACZud,kBAAmBjE,GACnByD,gBAAiBA,EACjBS,eAAgBA,EAChBC,gBAAiBA,IAGnBhnB,EAAAC,EAAAC,cAACstB,GAAD,CACExF,WAAYA,EACZC,aAAc5mB,EACd6mB,YAAa3e,EACb4e,aAAcA,aAnEIlqB,aA0G9Bi1B,GAAgB51B,YAAc,kBAuBf8tB,UAAuB8H,GAAiB9qB,MChKhD,SAASkrB,GACdhqB,GAIA,IAHAC,EAGAhF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHa,EACbkF,EAEAlF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFkB,CAAEoT,UAAW,KAAMG,UAAW,QAChD7P,EACA1D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADS,GAET,MAAO,CACLH,KAAMqE,GAAiBC,aACvBW,YAAa/H,EAAaC,QAC1B+H,iBACAC,aACAC,MAAOnI,EACPoI,kBACAxB,UAIG,SAASsrB,GAA0CjqB,GACxD,MAAO,CACLlF,KAAMqE,GAAiBO,oBACvBK,YAAa/H,EAAaC,QAC1B+H,kBAIG,SAASkqB,GAAyClqB,GACvD,MAAO,CACLlF,KAAMqE,GAAiBQ,mBACvBI,YAAa/H,EAAaC,QAC1B+H,kBCDJ,IAAMmqB,GAA4B,CAChC,CAAEr0B,IAAKmG,EAAyBE,MAAO4b,SAAS,GAChD,CAAEjiB,IAAKmG,EAAyBG,YAAa2b,SAAS,GACtD,CAAEjiB,IAAKmG,EAAyBU,QAChC,CAAE7G,IAAKmG,EAAyBI,YAChC,CAAEvG,IAAKmG,EAAyBO,QAChC,CAAE1G,IAAKmG,EAAyBK,WAChC,CAAExG,IAAKmG,EAAyBQ,gBAAiBwb,MAAO,mBACxD,CAAEniB,IAAKmG,EAAyBS,SAAUub,MAAO,mBAO7CmS,eACJ,SAAAA,EAAYp1B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAg1B,IACjBn1B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAk1B,GAAA70B,KAAAH,KAAMJ,KAyHRq1B,iCAAmC,WAAM,IAC/BC,EAA2Br1B,EAAKO,MAAhC80B,uBAD+B3U,EAES1gB,EAAKD,MAA7Cqf,EAF+BsB,EAE/BtB,QAASxC,EAFsB8D,EAEtB9D,cAAeyI,EAFO3E,EAEP2E,YAEhC,GAAID,GAAoBiQ,EAAwBhQ,GAC9C,OACE5jB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CACE0d,QAAS,CAAEG,KAAMH,EAAQ+G,YACzB/C,QAAS,kBAAMxG,EAAc7Z,EAAaC,QAASqyB,EAAuBzoB,MAF5E,YAhIa5M,EAyInBs1B,eAAiB,WACft1B,EAAKD,MAAMw1B,eACXv1B,EAAKw1B,eAAc,IA3IFx1B,EA8InBy1B,cAAgB,SAAAnmB,GACdtP,EAAKD,MAAM4c,WAAW5Z,EAAaC,QAASsM,IA/I3BtP,EAkJnBw1B,cAAgB,SAAAE,GACd11B,EAAKuB,SAAS,CACZo0B,yBAA0BD,KApJX11B,EAwJnB41B,WAAa,WACX51B,EAAKD,MAAM8c,uBAAuB9Z,EAAaI,UAC/CnD,EAAKw1B,eAAc,IAvJnBx1B,EAAKO,MAAQ,CACXs1B,wBAAwB,EACxBF,0BAA0B,EAC1BN,uBAAwB,IANTr1B,mFAWjBG,KAAKJ,MAAM+1B,oCAAoC/uB,EAAiBL,EAAaC,4DAI7ExG,KAAKJ,MAAMg2B,mCAAmChvB,EAAiBL,EAAaC,aAC5ExG,KAAKJ,MAAMw1B,gDAUJ,IAAApE,EAAAhxB,KAAAkoB,EAaHloB,KAAKJ,MAXPqf,EAFKiJ,EAELjJ,QACA4W,EAHK3N,EAGL2N,YACAC,EAJK5N,EAIL4N,wBACA5E,EALKhJ,EAKLgJ,iBACAphB,EANKoY,EAMLpY,kBACAC,EAPKmY,EAOLnY,YACAN,EARKyY,EAQLzY,gBACAC,EATKwY,EASLxY,qBACAC,EAVKuY,EAULvY,iBACAJ,EAXK2Y,EAWL3Y,kBACAC,EAZK0Y,EAYL1Y,mBAZKnO,EAc8ErB,KAAKI,MAAlFs1B,EAdDr0B,EAcCq0B,uBAAwBF,EAdzBn0B,EAcyBm0B,yBAA0BN,EAdnD7zB,EAcmD6zB,uBAE1D,OACE5zB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACF,UAAWF,EAAQG,MACjC9d,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACC,QAAQ,UACtBhe,EAAAC,EAAAC,cAAC4vB,GAAA7vB,EAAD,CAAO4d,UAAWF,EAAQ6G,OACxBxkB,EAAAC,EAAAC,cAACu0B,GAAD,CACEpB,kBAAkB,4BAClBxM,UAAW0N,EAAY7qB,UACvBL,YAAa/H,EAAaC,QAC1BymB,WAAYuM,EAAY3qB,gBACxB2hB,SAAU,SAAChiB,EAAYE,EAAiBxB,GACtCusB,EACElvB,EAAiBL,EAAaC,YAC9BqE,EACAE,EACAxB,IAGJohB,oBAAqB,SAAAzhB,GACnBgoB,EACE0D,GAA8BhuB,EAAiBL,EAAaC,aAC5D0C,IAGJsX,UAAWqV,EAAY1qB,cACvBF,sBAAuB4qB,EAAY5qB,sBACnC6d,aAAc+M,EAAYzqB,uBAC1Bid,eAAgB,SAACxd,EAAYoZ,EAAU5W,GACrC2jB,EAAK5vB,SAAS,CACZs0B,wBAAwB,EACxBR,uBAAwBlR,GAA6B6R,EAAaxoB,EAAWxC,EAAYoZ,MAG7FqE,gBAAiB9Y,QAO3BlO,EAAAC,EAAAC,cAACw0B,GAAAz0B,EAAD,CACEue,MAAM,YACN/d,QAAQ,WACRk0B,aAAW,WACX9W,UAAWF,EAAQqG,IACnBrC,QAASjjB,KAAKy1B,YAEdn0B,EAAAC,EAAAC,cAAC00B,GAAA30B,EAAD,MAPF,gBAWAD,EAAAC,EAAAC,cAAC20B,GAAD,CACEhU,KAAMqT,EACN1lB,kBAAmBA,EACnBC,YAAaA,EAAYwS,IAAI,SAAA+Q,GAAM,MAAK,CACtC3yB,MAAO2yB,EAAO7mB,GACdoW,MAAOyQ,EAAOz0B,QAEhB2hB,UAAW/Q,EACXqkB,aAAcpkB,EACdmkB,SAAUlkB,EACV8jB,cAAezzB,KAAKm1B,eACpBzB,aAAc1zB,KAAKs1B,gBAGrBh0B,EAAAC,EAAAC,cAAC8vB,GAAD,CACEnP,KAAMuT,EACNlV,UAAWjR,EACXwS,YAAW,wBAAA5gB,OAA0B+zB,EAAuBzoB,IAC5DuF,QAASkjB,EACTtT,cAAemT,GACflT,mBAAoBmD,GACpBhD,mBAAoBhiB,KAAKi1B,iCACzBnT,QAAS,kBAAMkP,EAAK5vB,SAAS,CAAEs0B,wBAAwB,2DAhG/B91B,EAAOQ,GACrC,OAAIA,EAAMs1B,wBAA0B91B,EAAM4P,mBAAmBgZ,SAASpoB,EAAM80B,uBAAuBzoB,IAC1F,CAAEipB,wBAAwB,GAC5B,YAxBuBn2B,aA+JlCy1B,GAAoBp2B,YAAc,sBAElC,IAiCeU,KACbygB,qBAAW0F,GAAX1F,CACEyR,aAnCoB,SAAApxB,GACtB,MAAO,CACL8kB,YAAa9kB,EAAM8Q,KAEnB2kB,YAAaz1B,EAAMmR,MAAM3K,EAAiBL,EAAaC,aAAaoe,QACpE9U,kBAAmB1P,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAasJ,kBAC1EC,YAAa3P,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAauJ,YAEpEN,gBAAiBrP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAaiJ,gBACxEC,qBAAsBtP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAakJ,qBAC7EC,iBAAkBvP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAamJ,iBAEzEJ,kBAAmBnP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAa+I,kBAC1EC,mBAAoBpP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAagJ,qBAIpD,SAAA8O,GACzB,OAAOoT,YACL,CACEoE,wBAAyBlB,GACzBe,oCAAqCd,GACrCe,mCAAoCd,GACpC5D,iBAAkBzmB,GAClBiS,uBAAwBrN,GACxBmN,WAAYtN,GACZuN,cAAerN,GACfgmB,aAAc9lB,IAEhBgP,IAMAkT,CAGEwD,8CCjOA9B,GAAmB,CACvBrB,oBACAM,WACAK,kBACAC,cACAO,SAGIG,GAAqB,CACzBC,MAAO,GACPC,YAAa,GACb+C,iBAAkB,GAClBC,YAAa,GACb/C,OAAQ,GACR1O,QAAS,GACT2O,WAAY,IAGR+C,eACJ,SAAAA,EAAY12B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAs2B,IACjBz2B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAw2B,GAAAn2B,KAAAH,KAAMJ,KAmJR6zB,cAAgB,WAAM,IACZA,EAAkB5zB,EAAKD,MAAvB6zB,cAER5zB,EAAKuB,SAAS+xB,IAEdM,KAzJiB5zB,EA4JnB6zB,aAAe,WAAM,IACXA,EAAiB7zB,EAAKD,MAAtB8zB,aADWryB,EAEwExB,EAAKO,MAAxFgzB,EAFW/xB,EAEX+xB,MAAOC,EAFIhyB,EAEJgyB,YAAa+C,EAFT/0B,EAES+0B,iBAAkBC,EAF3Bh1B,EAE2Bg1B,YAAa/C,EAFxCjyB,EAEwCiyB,OAAQ1O,EAFhDvjB,EAEgDujB,QAAS2O,EAFzDlyB,EAEyDkyB,WAE5EG,EAAa,CACXN,QACAC,cACAkD,aAAcH,EACdI,aAAcH,EAAY9T,IAAI,SAAAvQ,GAAO,OAAIA,EAAQrR,QACjD2yB,OAAQA,EAAO3yB,MACfikB,QAASA,EAAQrC,IAAI,SAAAvQ,GAAO,OAAIA,EAAQrR,QACxC4yB,gBAvKe1zB,EA2KnB8zB,eAAiB,SAAC90B,EAAM4sB,GACtB5rB,EAAKuB,SAALtB,OAAAsI,EAAA,EAAAtI,CAAA,GACGjB,EAAO4sB,EAAM/G,OAAO/jB,SA7KNd,EAiLnB+zB,qBAAuB,SAAA/0B,GAAI,OAAI,SAAA8B,GAC7Bd,EAAKuB,SAALtB,OAAAsI,EAAA,EAAAtI,CAAA,GACGjB,EAAO8B,MAhLVd,EAAKO,MAAQ+yB,GAHItzB,wEAMV,IAAAmxB,EAAAhxB,KAAAugB,EAaHvgB,KAAKJ,MAXPqf,EAFKsB,EAELtB,QACArP,EAHK2Q,EAGL3Q,iBACAC,EAJK0Q,EAIL1Q,WACAC,EALKyQ,EAKLzQ,kBACAC,EANKwQ,EAMLxQ,YACAC,EAPKuQ,EAOLvQ,iBACAC,EARKsQ,EAQLtQ,WACAuQ,EATKD,EASLC,UACAqT,EAVKtT,EAULsT,SACAC,EAXKvT,EAWLuT,aACGrT,EAZE3gB,OAAA4gB,GAAA,EAAA5gB,CAAAygB,EAAA,qJAAAwT,EAcoF/zB,KAAKI,MAAxFgzB,EAdDW,EAcCX,MAAOC,EAdRU,EAcQV,YAAa+C,EAdrBrC,EAcqBqC,iBAAkBC,EAdvCtC,EAcuCsC,YAAa/C,EAdpDS,EAcoDT,OAAQ1O,EAd5DmP,EAc4DnP,QAAS2O,EAdrEQ,EAcqER,WAI5E,OAFK/S,GAAcqT,IAAYC,GAAc9zB,KAAKyzB,gBAGhDnyB,EAAAC,EAAAC,cAAC0gB,GAADpiB,OAAA8gB,OAAA,GAAsBH,EAAtB,CAAkCD,UAAWA,IAAcqT,EAAUG,OAAO,SAC1E1yB,EAAAC,EAAAC,cAACyf,GAAA,EAAD,+CACA3f,EAAAC,EAAAC,cAAC8gB,GAAA/gB,EAAD,CAAe0d,QAAS,CAAEG,KAAMH,EAAQmH,gBACtC9kB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACG,QAAS,IACvBle,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAAD,CACEshB,MAAM,SACN7jB,OAAO,SACP+C,QAAQ,WACR8e,WAAS,EACTlgB,MAAOyyB,EACP5H,SAAU,SAAAC,GAAK,OAAIuF,EAAK2C,eAAe,QAASlI,OAGpDnqB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAAD,CACEshB,MAAM,cACN7jB,OAAO,SACP+C,QAAQ,WACR8e,WAAS,EACTlgB,MAAO0yB,EACP7H,SAAU,SAAAC,GAAK,OAAIuF,EAAK2C,eAAe,cAAelI,OAG1DnqB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACyyB,GAAA,EAAD,CACEhV,QAASA,EACTsT,eAAgB,CACd1P,MAAO,YACPqR,gBAAiB,CACfC,QAAQ,IAGZZ,WAAYL,GACZkB,QAASvkB,EACTwb,YAAY,iCACZ1qB,MAAO01B,EACP7K,SAAUxrB,KAAK4zB,qBAAqB,eACpC6C,SAAO,EACPjW,UAAW5Q,KAGftO,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,GAAIC,GAAI,GACrBphB,EAAAC,EAAAC,cAACyyB,GAAA,EAAD,CACEhV,QAASA,EACTsT,eAAgB,CACd1P,MAAO,SACPqR,gBAAiB,CACfC,QAAQ,IAGZC,QAASrkB,EACTwjB,WAAYL,GACZvyB,MAAO2yB,EACP9H,SAAUxrB,KAAK4zB,qBAAqB,UACpCvI,YAAY,sBACZgJ,aAAW,EACX7T,UAAW1Q,KAGfxO,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,GAAIC,GAAI,GACrBphB,EAAAC,EAAAC,cAACyyB,GAAA,EAAD,CACEhV,QAASA,EACTsT,eAAgB,CACd1P,MAAO,UACPqR,gBAAiB,CACfC,QAAQ,IAGZZ,WAAYL,GACZkB,QAASnkB,EACTob,YAAY,gCACZ1qB,MAAOikB,EACP4G,SAAUxrB,KAAK4zB,qBAAqB,WACpC6C,SAAO,EACPjW,UAAWxQ,KAGf1O,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,GAAIC,GAAI,GACrBphB,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAAD,CACEshB,MAAM,aACN7jB,OAAO,SACP+C,QAAQ,WACR8e,WAAS,EACTlgB,MAAO4yB,EACP/H,SAAU,SAAAC,GAAK,OAAIuF,EAAK2C,eAAe,aAAclI,OAGzDnqB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,GAAIC,GAAI,GACrBphB,EAAAC,EAAAC,cAACk1B,GAAAn1B,EAAD,CAAaQ,QAAQ,WAAW8e,WAAS,EAACpf,MAAO,CAAEyuB,UAAW,KAC5D5uB,EAAAC,EAAAC,cAACm1B,GAAAp1B,EAAD,CAAYq1B,QAAQ,oBAApB,sBACAt1B,EAAAC,EAAAC,cAACkuB,GAAAnuB,EAAD,CACEZ,MAAOy1B,EACP5K,SAAU,SAAAC,GAAK,OAAIuF,EAAK2C,eAAe,mBAAoBlI,IAC3DnF,MAAOhlB,EAAAC,EAAAC,cAACouB,GAAAruB,EAAD,CAAekL,GAAG,mBAAmBojB,WAAY,OAGxDvuB,EAAAC,EAAAC,cAACsuB,GAAAvuB,EAAD,CAAUZ,MAAOiH,EAAaS,kBAAmBE,EAAmBF,kBACpE/G,EAAAC,EAAAC,cAACsuB,GAAAvuB,EAAD,CAAUZ,MAAOiH,EAAaU,gBAAiBC,EAAmBD,mBAIvEurB,GACCvyB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,YAAY+d,MAAM,QAAQ8C,cAAY,GAA1D,0EAORthB,EAAAC,EAAAC,cAACshB,GAAAvhB,EAAD,KACED,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQue,MAAM,UAAUmD,QAASjjB,KAAKyzB,eAAtC,WAGAnyB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQue,MAAM,UAAUmD,QAASjjB,KAAK0zB,cAAtC,kBA7IyBn0B,aAyLnC+2B,GAAqB13B,YAAc,uBAepBmhB,4BAAWoG,GAAXpG,CAA+BuW,IC/MxCO,GAAiC,CACrC,CAAEn2B,IAAKmG,EAAyBE,MAAO4b,SAAS,GAChD,CAAEjiB,IAAKmG,EAAyBG,YAAa2b,SAAS,GACtD,CAAEjiB,IAAKmG,EAAyBI,WAAY0b,SAAS,GACrD,CAAEjiB,IAAKmG,EAAyBU,QAChC,CAAE7G,IAAK8G,EAAuBI,cAC9B,CAAElH,IAAK8G,EAAuBC,gBAC9B,CAAE/G,IAAK8G,EAAuBE,mBAC9B,CAAEhH,IAAKmG,EAAyBO,QAChC,CAAE1G,IAAKmG,EAAyBK,WAChC,CAAExG,IAAKmG,EAAyBQ,gBAAiBwb,MAAO,mBACxD,CAAEniB,IAAKmG,EAAyBS,SAAUub,MAAO,mBAO7CiU,eACJ,SAAAA,EAAYl3B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA82B,IACjBj3B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAg3B,GAAA32B,KAAAH,KAAMJ,KA4IRq1B,iCAAmC,WAAM,IAC/B8B,EAAgCl3B,EAAKO,MAArC22B,4BAD+BxW,EAES1gB,EAAKD,MAA7Cqf,EAF+BsB,EAE/BtB,QAASxC,EAFsB8D,EAEtB9D,cAAeyI,EAFO3E,EAEP2E,YAEhC,GAAID,GAAoB8R,EAA6B7R,GACnD,OACE5jB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CACE0d,QAAS,CAAEG,KAAMH,EAAQ+G,YACzB/C,QAAS,kBAAMxG,EAAc7Z,EAAaE,cAAei0B,EAA4BtqB,MAFvF,YAnJa5M,EA4JnBs1B,eAAiB,WACft1B,EAAKD,MAAMw1B,eACXv1B,EAAKw1B,eAAc,IA9JFx1B,EAiKnBy1B,cAAgB,SAAAnmB,GACdtP,EAAKD,MAAM4c,WAAW5Z,EAAaE,cAAeqM,IAlKjCtP,EAqKnBw1B,cAAgB,SAAAE,GACd11B,EAAKuB,SAAS,CACZ41B,8BAA+BzB,KAvKhB11B,EA2KnB41B,WAAa,WAAM,IACT/Y,EAA2B7c,EAAKD,MAAhC8c,uBAERA,EAAuB9Z,EAAaG,SACpC2Z,EAAuB9Z,EAAaI,UACpC0Z,EAAuB9Z,EAAaC,SAEpChD,EAAKw1B,eAAc,IAlLFx1B,EAqLnB8zB,eAAiB,SAAC90B,EAAM4sB,GACtB5rB,EAAKuB,SAALtB,OAAAsI,EAAA,EAAAtI,CAAA,GACGjB,EAAO4sB,EAAM/G,OAAO/jB,SApLvBd,EAAKO,MAAQ,CACX62B,6BAA6B,EAC7BD,+BAA+B,EAC/BD,4BAA6B,IANdl3B,mFAWjBG,KAAKJ,MAAMixB,yCAAyCjqB,EAAiBL,EAAaC,4DAIlFxG,KAAKJ,MAAMkxB,wCAAwClqB,EAAiBL,EAAaC,aACjFxG,KAAKJ,MAAMw1B,gDAUJ,IAAApE,EAAAhxB,KAAAkoB,EAiBHloB,KAAKJ,MAfPqf,EAFKiJ,EAELjJ,QACAqR,EAHKpI,EAGLoI,iBACAW,EAJK/I,EAIL+I,6BACAC,EALKhJ,EAKLgJ,iBACAthB,EANKsY,EAMLtY,iBACAC,EAPKqY,EAOLrY,WACAC,EARKoY,EAQLpY,kBACAC,EATKmY,EASLnY,YACAC,EAVKkY,EAULlY,iBACAC,EAXKiY,EAWLjY,WACAR,EAZKyY,EAYLzY,gBACAC,EAbKwY,EAaLxY,qBACAC,EAdKuY,EAcLvY,iBACAJ,EAfK2Y,EAeL3Y,kBACAC,EAhBK0Y,EAgBL1Y,mBAhBKnO,EAkB6FrB,KAAKI,MAAjG62B,EAlBD51B,EAkBC41B,4BAA6BD,EAlB9B31B,EAkB8B21B,8BAA+BD,EAlB7D11B,EAkB6D01B,4BAEpE,OACEz1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACF,UAAWF,EAAQG,MACjC9d,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACC,QAAQ,UACtBhe,EAAAC,EAAAC,cAAC4vB,GAAA7vB,EAAD,CAAO4d,UAAWF,EAAQ6G,OACxBxkB,EAAAC,EAAAC,cAACu0B,GAAD,CACEpB,kBAAkB,2BAClBxM,UAAWmI,EAAiBtlB,UAC5BL,YAAa/H,EAAaE,cAC1BwmB,WAAYgH,EAAiBplB,gBAC7B2hB,SAAU,SAAChiB,EAAYE,EAAiBxB,GACtC0nB,EACErqB,EAAiBL,EAAaC,YAC9BqE,EACAE,EACAxB,IAGJiX,UAAW8P,EAAiBnlB,cAC5Bwf,oBAAqB,SAAAzhB,GACnBgoB,EACEhO,GAAmCtc,EAAiBL,EAAaC,aACjE0C,IAGJ+B,sBAAuBqlB,EAAiBrlB,sBACxC6d,aAAcwH,EAAiBllB,uBAC/Bid,eAAgB,SAACxd,EAAYoZ,EAAU5W,GACrC2jB,EAAK5vB,SAAS,CACZ61B,6BAA6B,EAC7BF,4BAA6B/S,GAC3BsM,EACAjjB,EACAxC,EACAoZ,MAINqE,gBAAiB9Y,QAO3BlO,EAAAC,EAAAC,cAACw0B,GAAAz0B,EAAD,CACEue,MAAM,YACN/d,QAAQ,WACRk0B,aAAW,WACX9W,UAAWF,EAAQqG,IACnBrC,QAASjjB,KAAKy1B,YAEdn0B,EAAAC,EAAAC,cAAC00B,GAAA30B,EAAD,MAPF,4BAWAD,EAAAC,EAAAC,cAAC01B,GAAD,CACE/U,KAAM6U,EACNpnB,iBAAkBA,EAClBC,WAAYA,EAAW0S,IAAI,SAAA4U,GAAM,MAAK,CACpCx2B,MAAOw2B,EAAOhmB,QACd0R,MAAOsU,EAAOt4B,QAEhBiR,kBAAmBA,EACnBC,YAAaA,EAAYwS,IAAI,SAAA+Q,GAAM,MAAK,CACtC3yB,MAAO2yB,EAAO7mB,GACdoW,MAAOyQ,EAAOz0B,QAEhBmR,iBAAkBA,EAClBC,WAAYA,EAAWsS,IAAI,SAAA6U,GAAM,MAAK,CACpCz2B,MAAOy2B,EAAOC,UACdxU,MAAK,IAAA1hB,OAAMi2B,EAAOC,UAAb,MAAAl2B,OAA2Bi2B,EAAOhE,UAEzC5S,UAAW/Q,EACXqkB,aAAcpkB,EACdmkB,SAAUlkB,EACV8jB,cAAezzB,KAAKm1B,eACpBzB,aAAc1zB,KAAKs1B,gBAGrBh0B,EAAAC,EAAAC,cAAC8vB,GAAD,CACEnP,KAAM8U,EACNzW,UAAWjR,EACXwS,YAAW,uBAAA5gB,OAAyB41B,EAA4BtqB,IAChEuF,QAAS+kB,EACTnV,cAAeiV,GACfhV,mBAAoBmD,GACpBhD,mBAAoBhiB,KAAKi1B,iCACzBnT,QAAS,kBAAMkP,EAAK5vB,SAAS,CAAE61B,6BAA6B,2DAnHpCr3B,EAAOQ,GACrC,OAAIA,EAAM62B,6BAA+Br3B,EAAM4P,mBAAmBgZ,SAASpoB,EAAM22B,4BAA4BtqB,IACpG,CAAEwqB,6BAA6B,GACjC,YAxB4B13B,aA6LvCu3B,GAAyBl4B,YAAc,2BAEvC,IAqCeU,KACbygB,qBAAW0F,GAAX1F,CACEyR,aAvCoB,SAAApxB,GACtB,MAAO,CACL8kB,YAAa9kB,EAAM8Q,KAEnBof,iBAAkBlwB,EAAMmR,MAAM3K,EAAiBL,EAAaC,aAAairB,aACzE7hB,iBAAkBxP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAaoJ,iBACzEC,WAAYzP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAaqJ,WACnEC,kBAAmB1P,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAasJ,kBAC1EC,YAAa3P,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAauJ,YACpEC,iBAAkB5P,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAawJ,iBACzEC,WAAY7P,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAayJ,WAEnER,gBAAiBrP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAaiJ,gBACxEC,qBAAsBtP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAakJ,qBAC7EC,iBAAkBvP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAamJ,iBAEzEJ,kBAAmBnP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAa+I,kBAC1EC,mBAAoBpP,EAAMyR,MAAMjL,EAAiBL,EAAaC,aAAagJ,qBAIpD,SAAA8O,GACzB,OAAOoT,YACL,CACET,6BAA8B/N,GAC9B2N,yCAA0C1N,GAC1C2N,wCAAyC1N,GACzC8N,iBAAkBzmB,GAClBiS,uBAAwBrN,GACxBmN,WAAYtN,GACZuN,cAAerN,GACfgmB,aAAc9lB,IAEhBgP,IAMAkT,CAGEsF,MCxPAQ,GAAwB,wBAExBC,GAAsB,CAC1B,CAAE72B,IAAKmG,EAAyBC,GAAI0gB,iBAAiB,GACrD,CAAE9mB,IAAKmG,EAAyBE,MAAOygB,iBAAiB,GACxD,CAAE9mB,IAAKmG,EAAyBK,UAAWsgB,iBAAiB,GAC5D,CAAE9mB,IAAKmG,EAAyBO,OAAQogB,iBAAiB,GACzD,CAAE9mB,IAAKmG,EAAyBM,iBAAkBqgB,iBAAiB,GACnE,CAAE9mB,IAAKmG,EAAyBQ,gBAAiBmgB,iBAAiB,IAG9DgQ,GAAqB,CACzB,CAAE92B,IAAKmG,EAAyBC,GAAI0gB,iBAAiB,GACrD,CAAE9mB,IAAKmG,EAAyBE,MAAOygB,iBAAiB,GACxD,CAAE9mB,IAAKmG,EAAyBK,UAAWsgB,iBAAiB,GAC5D,CAAE9mB,IAAKmG,EAAyBO,OAAQogB,iBAAiB,GACzD,CACE3E,MAAO,SACPniB,IAAK42B,GACL9P,iBAAiB,EACjB8C,aAAa,EACb5C,YAAa,WAYX+P,8MA8EJlK,0BAA4B,WAC1B,IAAMmK,EAAa73B,EAAK83B,eAClBjK,EAAcpkB,GAAezJ,EAAKD,MAAM2J,QAC9C,OACEjI,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAACmsB,GAAApsB,EAAD,CACEqsB,SAAUF,EACVG,SAAU6J,IAAehK,EACzBI,QAASxsB,EAAAC,EAAAC,cAACusB,GAAAxsB,EAAD,CAAOue,MAAM,YACtB+C,MAAM,qBACN2I,SAAU,kBAAM3rB,EAAKD,MAAMqtB,eAAezjB,SAE5ClI,EAAAC,EAAAC,cAACmsB,GAAApsB,EAAD,CACEqsB,SAAUF,EACVG,QAAS6J,IAAehK,EACxBI,QAASxsB,EAAAC,EAAAC,cAACusB,GAAAxsB,EAAD,CAAOue,MAAM,YACtB+C,MAAM,iBACN2I,SAAU,kBAAM3rB,EAAKD,MAAMqtB,eAAevjB,aAMlD0e,kBAAoB,SAACnP,EAAWtY,EAAO0M,GAAc,IAAAkT,EACoD1gB,EAAKD,MAApGqf,EAD2CsB,EAC3CtB,QAAS2Y,EADkCrX,EAClCqX,aAAcC,EADoBtX,EACpBsX,0BAA2BC,EADPvX,EACOuX,sBAAuBC,EAD9BxX,EAC8BwX,kBAEjF,OAAQ9e,GACN,KAAKqe,GACH,OACEh2B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KAC2C,MAAxCyV,EAA0BxqB,GACzB/L,EAAAC,EAAAC,cAAC6iB,GAAD,CAAY1N,OAAQkhB,EAA0BxqB,KACZ,MAAhC0qB,EAAkB1qB,GACpB/L,EAAAC,EAAAC,cAAC4sB,GAAA7sB,EAAD,CACE0hB,QAAS,SAAAwI,GACPmM,EAAavqB,EAAWxN,EAAKD,MAAMm4B,kBAAkB1qB,IACrDoe,EAAM4C,oBAGR/sB,EAAAC,EAAAC,cAACupB,GAAAxpB,EAAD,CAAO0d,QAAS,CAAE+Y,MAAO/Y,EAAQgZ,YAAcC,aAAa,IAAIpY,MAAM,SACpExe,EAAAC,EAAAC,cAACwpB,GAAAzpB,EAAD,CAAaue,MAAM,aAGrBgY,EAAsBtP,SAASnb,GACjC/L,EAAAC,EAAAC,cAACoe,GAAAre,EAAD,CAAkBymB,KAAM,KAExB1mB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC4sB,GAAA7sB,EAAD,CACE0hB,QAAS,SAAAwI,GACPmM,EAAavqB,EAAWhG,EAAgByB,UACxC2iB,EAAM4C,oBAGR/sB,EAAAC,EAAAC,cAAC6iB,GAAD,CAAY1N,OAAQtP,EAAgByB,YAEtCxH,EAAAC,EAAAC,cAAC4sB,GAAA7sB,EAAD,CACE0hB,QAAS,SAAAwI,GACPmM,EAAavqB,EAAWhG,EAAgBuB,UACxC6iB,EAAM4C,oBAGR/sB,EAAAC,EAAAC,cAAC6iB,GAAD,CAAY1N,OAAQtP,EAAgBuB,cAMhD,QACE,OAAOub,GAA0BlL,EAAWtY,OAMlD0nB,eAAiB,SAACxd,EAAYoZ,EAAU5W,GACtCxN,EAAKD,MAAMyoB,eAAexd,EAAYoZ,EAAU5W,EAAWxN,EAAK83B,mBAIlEA,aAAe,WACb,OACE93B,EAAKD,MAAM2J,OAAOH,YAAcM,KAAwBN,WACxDvJ,EAAKD,MAAM2J,OAAOF,eAAiBK,KAAwBL,mGA/JzCmlB,GACpB,OACExuB,KAAKJ,MAAM4gB,YAAcgO,EAAUhO,WACnCxgB,KAAKJ,MAAMqL,wBAA0BujB,EAAUvjB,uBAC/CjL,KAAKJ,MAAMk4B,wBAA0BtJ,EAAUsJ,uBAC/C93B,KAAKJ,MAAMi4B,4BAA8BrJ,EAAUqJ,2BACnD73B,KAAKJ,MAAMm4B,oBAAsBvJ,EAAUuJ,mDAItC,IAAA7P,EAeHloB,KAAKJ,MAbPuoB,EAFKD,EAELC,UACAxd,EAHKud,EAGLvd,YACA2e,EAJKpB,EAILoB,WACA9I,EALK0H,EAKL1H,UACAvV,EANKid,EAMLjd,sBACA6d,EAPKZ,EAOLY,aACAlB,EARKM,EAQLN,gBACA6B,EATKvB,EASLuB,aACAsD,EAVK7E,EAUL6E,gBACAE,EAXK/E,EAWL+E,eACApiB,EAZKqd,EAYLrd,WACAiB,EAbKoc,EAaLpc,QACA+rB,EAdK3P,EAcL2P,0BAEIH,EAAa13B,KAAK23B,eAExB,OACEr2B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAACitB,GAAD,CACEhE,aACE9f,IAAgB/H,EAAaC,QAAU,mBAAqB,+BAE9D6nB,2BACGlK,GACD2H,EAAUriB,OAAS,GACM,MAAzBqiB,EAAUtd,IACVI,EAAwBkd,EAAUtd,GAAYkB,gBAEhD6b,gBAAiBA,EACjB+C,oBAAqB,SAAA+D,GAAQ,OAC3BzB,EAAehkB,GAAyBylB,EAAUllB,QAEpDohB,oBAAqB5qB,KAAKutB,4BAE5BjsB,EAAAC,EAAAC,cAACmtB,GAAAptB,EAAD,KACED,EAAAC,EAAAC,cAACotB,GAAD,CACExH,aAAcsQ,EAAaF,GAAqBD,GAChDxsB,gBAAiBe,EACjBoe,gBAAiB6C,IAGnBzrB,EAAAC,EAAAC,cAACqtB,GAAD,CACEzH,aAAcsQ,EAAaF,GAAqBD,GAChDpP,UAAWA,EACXjd,gBAAiBoe,EACjBR,aAAcA,EACdtI,UAAWA,EACX3V,WAAYA,EACZud,kBAAmBpoB,KAAKooB,kBACxBR,gBAAiBA,EACjBS,eAAgBroB,KAAKqoB,eACrBC,gBAAiBxoB,OAAO6R,KAAKkmB,GAA2BtV,IAAI,SAAA7hB,GAAG,OAAIy3B,SAASz3B,OAG9EY,EAAAC,EAAAC,cAACstB,GAAD,CACExF,WAAYA,EACZC,aAAc5mB,EACd6mB,YAAa3e,EACb4e,aAAcA,aAvEEnnB,IAAM/C,WAqKlCk4B,GAAc74B,YAAc,gBA4Bb8tB,UAAuB3M,qBAzOlB,CAClBkY,WAAY,CACV94B,MAAO,OACP+gB,OAAQ,SAsO0BH,CAAwB0X,IAAgB/tB,MC7OxE0uB,GAAqC,CACzC,CAAE13B,IAAKmG,EAAyBE,MAAO4b,SAAS,GAChD,CAAEjiB,IAAKmG,EAAyBG,YAAa2b,SAAS,GACtD,CAAEjiB,IAAKmG,EAAyBU,QAChC,CAAE7G,IAAKmG,EAAyBI,YAChC,CAAEvG,IAAKmG,EAAyBO,QAChC,CAAE1G,IAAKmG,EAAyBK,YAG5B6tB,GAAyB,GAAA5zB,OAC1Bi3B,GAD0B,CAE7B,CAAE13B,IAAKmG,EAAyBQ,gBAAiBwb,MAAO,mBACxD,CAAEniB,IAAKmG,EAAyBS,SAAUub,MAAO,oBAG7CwV,eACJ,SAAAA,EAAYz4B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAq4B,IACjBx4B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAu4B,GAAAl4B,KAAAH,KAAMJ,KAsGR04B,gCAAkC,WAAM,IAAA/X,EACN1gB,EAAKD,MAA7Bqf,EAD8BsB,EAC9BtB,QAASsZ,EADqBhY,EACrBgY,WACTrD,EAA2Br1B,EAAKO,MAAhC80B,uBAER,OACE5zB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CACE0d,QAAS,CAAEG,KAAMH,EAAQ+G,YACzB/C,QAAS,kBAAMsV,EAAW31B,EAAaC,QAASqyB,EAAuBzoB,GAAIpF,EAAgByB,YAF7F,WAMAxH,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CACE0d,QAAS,CAAEG,KAAMH,EAAQiH,eACzBjD,QAAS,kBAAMsV,EAAW31B,EAAaC,QAASqyB,EAAuBzoB,GAAIpF,EAAgBuB,YAF7F,aAnHa/I,EA6HnB0wB,iBAAmB,WACjB1wB,EAAKuB,SAAS,CAAEs0B,wBAAwB,KA3HxC71B,EAAKO,MAAQ,CAGXo4B,oBAAoB,EAEpB9C,wBAAwB,EACxBR,uBAAwB,IATTr1B,mFAcjBG,KAAKJ,MAAM+1B,oCAAoC/uB,EAAiBL,EAAaE,wEAI7EzG,KAAKJ,MAAMg2B,mCAAmChvB,EAAiBL,EAAaE,yBAC5EzG,KAAKJ,MAAMmxB,2CAUJ,IAAAC,EAAAhxB,KAAAkoB,EAUHloB,KAAKJ,MARPqf,EAFKiJ,EAELjJ,QACA4W,EAHK3N,EAGL2N,YACAC,EAJK5N,EAIL4N,wBACA5E,EALKhJ,EAKLgJ,iBACAqH,EANKrQ,EAMLqQ,WACAT,EAPK5P,EAOL4P,sBACAD,EARK3P,EAQL2P,0BACAE,EATK7P,EASL6P,kBATK12B,EAWwErB,KAAKI,MAA5Es1B,EAXDr0B,EAWCq0B,uBAAwB8C,EAXzBn3B,EAWyBm3B,mBAAoBtD,EAX7C7zB,EAW6C6zB,uBAEpD,OACE5zB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACF,UAAWF,EAAQG,MACjC9d,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACC,QAAQ,UACtBhe,EAAAC,EAAAC,cAAC4vB,GAAA7vB,EAAD,CAAO4d,UAAWF,EAAQ6G,OACxBxkB,EAAAC,EAAAC,cAACi3B,GAAD,CACEtQ,UAAW0N,EAAY7qB,UACvBL,YAAa/H,EAAaC,QAC1BymB,WAAYuM,EAAY3qB,gBACxBsV,UAAWqV,EAAY1qB,cACvBF,sBAAuB4qB,EAAY5qB,sBACnC6d,aAAc+M,EAAYzqB,uBAC1ByhB,SAAU,SAAChiB,EAAYE,EAAiBxB,GACtCusB,EACElvB,EAAiBL,EAAaE,wBAC9BoE,EACAE,EACAxB,IAGJohB,oBAAqB,SAAAzhB,GACnBgoB,EACE0D,GAA8BhuB,EAAiBL,EAAaE,yBAC5DyC,IAGJ0uB,aAAc,SAACvqB,EAAWC,GAAZ,OACZirB,EAAW31B,EAAaC,QAASwK,EAAWC,IAE9C+a,eAAgB,SAACxd,EAAYoZ,EAAU5W,EAAWqrB,GAChD1H,EAAK5vB,SAAS,CACZo3B,mBAAoBE,EACpBhD,wBAAwB,EACxBR,uBAAwBlR,GAA6B6R,EAAaxoB,EAAWxC,EAAYoZ,MAG7F6T,sBAAuBA,EACvBD,0BAA2BA,EAC3BE,kBAAmBA,QAO7Bz2B,EAAAC,EAAAC,cAAC8vB,GAAD,CACEnP,KAAMuT,EACNlV,UAAWsX,EAAsBtP,SAAS0M,EAAuBzoB,IACjEsV,YAAW,wBAAA5gB,OAA0B+zB,EAAuBzoB,IAC5DuF,QAASkjB,EACTtT,cAAe4W,EAAqBJ,GAAqCrD,GACzElT,mBAAoBmD,GACpBlD,QAAS9hB,KAAKuwB,iBACdtO,oBAAqBuW,EACrBxW,mBAAoBwW,EAAqBx4B,KAAKs4B,qCAAkCvyB,wDA1ExDnG,EAAOQ,GACrC,OAAIA,EAAMo4B,oBAAsBp4B,EAAM80B,uBAAuBzoB,MAAM7M,EAAMi4B,0BAChE,CAAEnC,wBAAwB,GAC5B,YA3BuBpzB,IAAM/C,WAmIxC84B,GAAoBz5B,YAAc,sBAElC,IAwBeU,KACbygB,qBAAW0F,GAAX1F,CACEyR,aA1BoB,SAAApxB,GACtB,MAAO,CACLy1B,YAAaz1B,EAAMmR,MAAM3K,EAAiBL,EAAaE,yBAAyBme,QAChFkT,sBAAuB13B,EAAMyR,MAAMjL,EAAiBL,EAAaE,yBAAyBme,QAAQpX,iBAClGqqB,0BACEz3B,EAAMyR,MAAMjL,EAAiBL,EAAaE,yBAAyBme,QAAQnX,qBAC7EsqB,kBAAmB33B,EAAMyR,MAAMjL,EAAiBL,EAAaE,yBAAyBme,QAAQlX,eAIvE,SAAA4Q,GACzB,OAAOoT,YACL,CACEoE,wBAAyBlB,GACzBe,oCAAqCd,GACrCe,mCAAoCd,GACpC5D,iBAAkBzmB,GAClB8tB,WAAYnrB,GACZ2jB,QAAS,iBAAO,CAAErrB,KAAMqH,GAAmCI,YAE7DmR,IAMAkT,CAGE6G,MCjLAM,GAA0C,CAC9C,CAAEj4B,IAAKmG,EAAyBE,MAAO4b,SAAS,GAChD,CAAEjiB,IAAKmG,EAAyBG,YAAa2b,SAAS,GACtD,CAAEjiB,IAAKmG,EAAyBI,WAAY0b,SAAS,GACrD,CAAEjiB,IAAKmG,EAAyBU,QAChC,CAAE7G,IAAK8G,EAAuBI,cAC9B,CAAElH,IAAK8G,EAAuBC,gBAC9B,CAAE/G,IAAK8G,EAAuBE,mBAC9B,CAAEhH,IAAKmG,EAAyBO,QAChC,CAAE1G,IAAKmG,EAAyBK,YAG5B2vB,GAA8B,GAAA11B,OAC/Bw3B,GAD+B,CAElC,CAAEj4B,IAAKmG,EAAyBQ,gBAAiBwb,MAAO,mBACxD,CAAEniB,IAAKmG,EAAyBS,SAAUub,MAAO,oBAG7C+V,eACJ,SAAAA,EAAYh5B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA44B,IACjB/4B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA84B,GAAAz4B,KAAAH,KAAMJ,KA6GR04B,gCAAkC,WAAM,IAAA/X,EACN1gB,EAAKD,MAA7Bqf,EAD8BsB,EAC9BtB,QAASsZ,EADqBhY,EACrBgY,WACTxB,EAAgCl3B,EAAKO,MAArC22B,4BAER,OACEz1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CACE0d,QAAS,CAAEG,KAAMH,EAAQ+G,YACzB/C,QAAS,kBACPsV,EAAW31B,EAAaE,cAAei0B,EAA4BtqB,GAAIpF,EAAgByB,YAH3F,WAQAxH,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CACE0d,QAAS,CAAEG,KAAMH,EAAQiH,eACzBjD,QAAS,kBACPsV,EAAW31B,EAAaE,cAAei0B,EAA4BtqB,GAAIpF,EAAgBuB,YAH3F,aA5Ha/I,EAwInB0wB,iBAAmB,WACjB1wB,EAAKuB,SAAS,CAAE61B,6BAA6B,KAtI7Cp3B,EAAKO,MAAQ,CAGXy4B,yBAAyB,EAEzB5B,6BAA6B,EAC7BF,4BAA6B,IATdl3B,mFAcjBG,KAAKJ,MAAMixB,yCAAyCjqB,EAAiBL,EAAaE,wEAIlFzG,KAAKJ,MAAMkxB,wCAAwClqB,EAAiBL,EAAaE,yBACjFzG,KAAKJ,MAAMmxB,2CAUJ,IAAAC,EAAAhxB,KAAAkoB,EAUHloB,KAAKJ,MARPqf,EAFKiJ,EAELjJ,QACAqR,EAHKpI,EAGLoI,iBACAW,EAJK/I,EAIL+I,6BACAC,EALKhJ,EAKLgJ,iBACAqH,EANKrQ,EAMLqQ,WACAT,EAPK5P,EAOL4P,sBACAD,EARK3P,EAQL2P,0BACAE,EATK7P,EASL6P,kBATK12B,EAWuFrB,KAAKI,MAA3Fy4B,EAXDx3B,EAWCw3B,wBAAyB5B,EAX1B51B,EAW0B41B,4BAA6BF,EAXvD11B,EAWuD01B,4BAE9D,OACEz1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACF,UAAWF,EAAQG,MACjC9d,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACC,QAAQ,UACtBhe,EAAAC,EAAAC,cAAC4vB,GAAA7vB,EAAD,CAAO4d,UAAWF,EAAQ6G,OACxBxkB,EAAAC,EAAAC,cAACi3B,GAAD,CACEtQ,UAAWmI,EAAiBtlB,UAC5BL,YAAa/H,EAAaE,cAC1BwmB,WAAYgH,EAAiBplB,gBAC7BsV,UAAW8P,EAAiBnlB,cAC5BF,sBAAuBqlB,EAAiBrlB,sBACxC6d,aAAcwH,EAAiBllB,uBAC/ByhB,SAAU,SAAChiB,EAAYE,EAAiBxB,GACtC0nB,EACErqB,EAAiBL,EAAaE,wBAC9BoE,EACAE,EACAxB,IAGJohB,oBAAqB,SAAAzhB,GACnBgoB,EACEhO,GAAmCtc,EAAiBL,EAAaE,yBACjEyC,IAGJ0uB,aAAc,SAACvqB,EAAWC,GAAZ,OACZirB,EAAW31B,EAAaE,cAAeuK,EAAWC,IAEpD+a,eAAgB,SAACxd,EAAYoZ,EAAU5W,EAAWqrB,GAChD1H,EAAK5vB,SAAS,CACZy3B,wBAAyBH,EACzBzB,6BAA6B,EAC7BF,4BAA6B/S,GAC3BsM,EACAjjB,EACAxC,EACAoZ,MAIN6T,sBAAuBA,EACvBD,0BAA2BA,EAC3BE,kBAAmBA,QAO7Bz2B,EAAAC,EAAAC,cAAC8vB,GAAD,CACEnP,KAAM8U,EACNzW,UAAWsX,EAAsBtP,SAASuO,EAA4BtqB,IACtEsV,YAAW,uBAAA5gB,OAAyB41B,EAA4BtqB,IAChEuF,QAAS+kB,EACTnV,cACEiX,EAA0BF,GAA0C9B,GAEtEhV,mBAAoBmD,GACpBlD,QAAS9hB,KAAKuwB,iBACdtO,oBAAqB4W,EACrB7W,mBAAoB6W,EAA0B74B,KAAKs4B,qCAAkCvyB,wDAjF7DnG,EAAOQ,GACrC,OAAIA,EAAMy4B,yBAA2Bz4B,EAAM22B,4BAA4BtqB,MAAM7M,EAAMi4B,0BAC1E,CAAEZ,6BAA6B,GACjC,YA3B4B30B,IAAM/C,WA8I7Cq5B,GAAyBh6B,YAAc,2BAEvC,IAyBeU,KACbygB,qBAAW0F,GAAX1F,CACEyR,aA3BoB,SAAApxB,GACtB,MAAO,CACLkwB,iBAAkBlwB,EAAMmR,MAAM3K,EAAiBL,EAAaE,yBAAyBgrB,aACrFqG,sBACE13B,EAAMyR,MAAMjL,EAAiBL,EAAaE,yBAAyBgrB,aAAajkB,iBAClFqqB,0BACEz3B,EAAMyR,MAAMjL,EAAiBL,EAAaE,yBAAyBgrB,aAAahkB,qBAClFsqB,kBAAmB33B,EAAMyR,MAAMjL,EAAiBL,EAAaE,yBAAyBgrB,aAAa/jB,eAI5E,SAAA4Q,GACzB,OAAOoT,YACL,CACET,6BAA8B/N,GAC9B2N,yCAA0C1N,GAC1C2N,wCAAyC1N,GACzC8N,iBAAkBzmB,GAClB8tB,WAAYnrB,GACZ2jB,QAAS,iBAAO,CAAErrB,KAAMqH,GAAmCI,YAE7DmR,IAMAkT,CAGEoH,MC1MApX,GAAuB,CAC3BC,YAAa,QAGMqX,eACnB,SAAAA,EAAYl5B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA84B,IACjBj5B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAg5B,GAAA34B,KAAAH,KAAMJ,KA+FRm5B,0BAA4B,SAAAtN,GAC1B5rB,EAAKuB,SAAS,CACZ43B,yBAAyB,EACzB7qB,YAAasd,EAAM/G,OAAO/jB,SAnGXd,EAwGnBsvB,sBAAwB,WAAM,IAAA5O,EACI1gB,EAAKD,MAA7BwvB,EADoB7O,EACpB6O,YAAaC,EADO9O,EACP8O,OAEiB,KAAlCxvB,EAAKO,MAAM+N,YAAYnN,OACzBnB,EAAKuB,SAAS,CAAE43B,yBAAyB,IAEzC3J,EAAOD,EAAY3iB,GAAI5M,EAAKO,MAAM+N,cA3GpCtO,EAAKO,MAAQ,CACX+N,YAAa,GACb6qB,yBAAyB,GALVn5B,wEASV,IAAAqoB,EAC+EloB,KAAKJ,MAAnFwvB,EADDlH,EACCkH,YAAqBtN,GADtBoG,EACcmH,OADdnH,EACsBpG,SAASmX,EAD/B/Q,EAC+B+Q,eAAgBnQ,EAD/CZ,EAC+CY,aAAiBrI,EADhE3gB,OAAA4gB,GAAA,EAAA5gB,CAAAooB,EAAA,oEAGP,OACE5mB,EAAAC,EAAAC,cAAC0gB,GAAqBzB,EACnBA,EAAW0B,MACV7gB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC6gB,GAAA9gB,EAAD,qBAAAJ,OACmBiuB,EAAY3iB,GAD/B,MAAAtL,OACsCiuB,EAAYvoB,EAAyBE,SAE3EzF,EAAAC,EAAAC,cAAC8gB,GAAA/gB,EAAD,KACED,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACG,QAAS,IACvBle,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,YAAY6gB,cAAY,GACzC1a,EAAgBrB,EAAyBG,cAE5C1F,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,SAASqtB,EAAYvoB,EAAyBG,eAEpE1F,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,YAAY6gB,cAAY,GACzC1a,EAAgBV,EAAuBE,oBAE1CpG,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,SACjBoiB,GACC3c,EAAuBE,kBACvB0nB,EAAY5nB,EAAuBE,sBAIzCpG,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,GAAIC,GAAI,GACrBphB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,YAAY6gB,cAAY,GACzC1a,EAAgBrB,EAAyBU,SAE5CjG,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,SAASqtB,EAAYvoB,EAAyBU,UAEpEjG,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,GAAIC,GAAI,GACrBphB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,YAAY6gB,cAAY,GACzC1a,EAAgBV,EAAuBI,eAE1CtG,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,SACjBoiB,GACC3c,EAAuBI,aACvBwnB,EAAY5nB,EAAuBI,iBAKzCtG,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAAD,CACEsf,WAAS,EACT9e,QAAQ,WACR8gB,MAAM,wBACNwI,YAAY,yBACZ1qB,MAAOX,KAAKI,MAAM+N,YAClBqd,SAAUxrB,KAAK+4B,0BACfz4B,MAAON,KAAKI,MAAM44B,wBAClBv3B,MAAO,CAAEyuB,UAAW,OACpBgE,gBAAiB,CAAEC,QAAQ,MAI9BrL,GACCxnB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,YAAY+d,MAAM,SAAtC,6DAORxe,EAAAC,EAAAC,cAACshB,GAAAvhB,EAAD,KACED,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQ0hB,QAASgW,EAAgBnZ,MAAM,UAAUre,MAAO+f,IAAxD,mBAGAlgB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQ0hB,QAASnB,EAAShC,MAAM,WAAhC,WAGAxe,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CAAQ0hB,QAASjjB,KAAKmvB,sBAAuBrP,MAAM,WAAnD,mBAvF8Bxd,IAAM/C,WAmHlDu5B,GAAe5X,aAAe,CAC5B4H,cAAc,GC7GhB,IAAMoQ,GAAwB,wBAExBC,GAA+B,CACnC,CAAEz4B,IAAKmG,EAAyBC,GAAI0gB,iBAAiB,GACrD,CAAE9mB,IAAKmG,EAAyBE,MAAOygB,iBAAiB,GACxD,CAAE9mB,IAAKmG,EAAyBK,UAAWsgB,iBAAiB,GAC5D,CACE9mB,IAAK8G,EAAuBE,kBAC5B8f,iBAAiB,EACjB8C,aAAa,GAEf,CAAE5pB,IAAKmG,EAAyBO,OAAQogB,iBAAiB,GACzD,CAAE9mB,IAAK8G,EAAuBQ,mBAAoBwf,iBAAiB,IAG/D4R,GAA4B,CAChC,CAAE14B,IAAKmG,EAAyBC,GAAI0gB,iBAAiB,GACrD,CAAE9mB,IAAKmG,EAAyBE,MAAOygB,iBAAiB,GACxD,CAAE9mB,IAAKmG,EAAyBK,UAAWsgB,iBAAiB,GAC5D,CACE9mB,IAAK8G,EAAuBE,kBAC5B8f,iBAAiB,EACjB8C,aAAa,GAEf,CAAE5pB,IAAKmG,EAAyBO,OAAQogB,iBAAiB,GACzD,CACE3E,MAAO,QACPniB,IAAKw4B,GACL1R,iBAAiB,EACjB8C,aAAa,IAIX+O,8MAwEJ9L,0BAA4B,WAC1B,IAAM+L,EAAez5B,EAAK05B,iBACpB7L,EAAcpkB,GAAezJ,EAAKD,MAAM2J,QAC9C,OACEjI,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAACmsB,GAAApsB,EAAD,CACEqsB,SAAUF,EACVG,SAAUyL,IAAiB5L,EAC3BI,QAASxsB,EAAAC,EAAAC,cAACusB,GAAAxsB,EAAD,CAAOue,MAAM,YACtB+C,MAAM,iBACN2I,SAAU,kBAAM3rB,EAAKD,MAAMqtB,eAAerjB,SAE5CtI,EAAAC,EAAAC,cAACmsB,GAAApsB,EAAD,CACEqsB,SAAUF,EACVG,QAASyL,IAAiB5L,EAC1BI,QAASxsB,EAAAC,EAAAC,cAACusB,GAAAxsB,EAAD,CAAOue,MAAM,YACtB+C,MAAM,aACN2I,SAAU,kBAAM3rB,EAAKD,MAAMqtB,eAAetjB,aAMlDye,kBAAoB,SAACnP,EAAWtY,EAAO0M,GAAc,IAAAkT,EACsB1gB,EAAKD,MAAtEiL,EAD2C0V,EAC3C1V,WAAY2uB,EAD+BjZ,EAC/BiZ,kBAAmBprB,EADYmS,EACZnS,8BAEvC,OAAQ6K,GACN,KAAKigB,GACH,OAAO9qB,EAA8Boa,SAASnb,GAC5C/L,EAAAC,EAAAC,cAAC6iB,GAAD,CAAY1N,OAAQtP,EAAgBuB,SAAU0a,QAAS,KAEvDhiB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC4sB,GAAA7sB,EAAD,CACE0hB,QAAS,SAAAwI,GACP+N,EAAkBnsB,EAAWxC,GAC7B4gB,EAAM4C,oBAGR/sB,EAAAC,EAAAC,cAACi4B,GAAAl4B,EAAD,CAAMue,MAAM,aAIpB,QACE,OAAOqE,GAA0BlL,EAAWtY,OAIlD44B,eAAiB,WACf,OACE15B,EAAKD,MAAM2J,OAAOH,YAAcO,KAAyBP,WACzDvJ,EAAKD,MAAM2J,OAAOF,eAAiBM,KAAyBN,mGAzH1CmlB,GACpB,OACExuB,KAAKJ,MAAM4gB,YAAcgO,EAAUhO,WACnCxgB,KAAKJ,MAAMqL,wBAA0BujB,EAAUvjB,uBAC/CjL,KAAKJ,MAAMwO,gCAAkCogB,EAAUpgB,+DAIlD,IAAA8Z,EAcHloB,KAAKJ,MAZPuoB,EAFKD,EAELC,UACAmB,EAHKpB,EAGLoB,WACA9I,EAJK0H,EAIL1H,UACAvV,EALKid,EAKLjd,sBACA6d,EANKZ,EAMLY,aACAT,EAPKH,EAOLG,eACAT,EARKM,EAQLN,gBACA6B,EATKvB,EASLuB,aACAsD,EAVK7E,EAUL6E,gBACAE,EAXK/E,EAWL+E,eACApiB,EAZKqd,EAYLrd,WACAiB,EAbKoc,EAaLpc,QAEI4tB,EAAc15B,KAAKu5B,iBAEzB,OACEj4B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAACitB,GAAD,CACEhE,aAAa,cACbC,2BACGlK,GACD2H,EAAUriB,OAAS,GACM,MAAzBqiB,EAAUtd,IACVI,EAAwBkd,EAAUtd,GAAYkB,gBAEhD6b,gBAAiBA,EACjB+C,oBAAqB,SAAA+D,GAAQ,OAC3BzB,EAAehkB,GAAyBylB,EAAU9kB,QAEpDghB,oBAAqB5qB,KAAKutB,4BAE5BjsB,EAAAC,EAAAC,cAACmtB,GAAAptB,EAAD,KACED,EAAAC,EAAAC,cAACotB,GAAD,CACExH,aAAcsS,EAAcN,GAA4BD,GACxDpuB,gBAAiBe,EACjBoe,gBAAiB6C,IAGnBzrB,EAAAC,EAAAC,cAACqtB,GAAD,CACEzH,aAAcsS,EAAcN,GAA4BD,GACxDhR,UAAWA,EACXjd,gBAAiBoe,EACjBR,aAAcA,EACdtI,UAAWA,EACX3V,WAAYA,EACZud,kBAAmBpoB,KAAKooB,kBACxBR,gBAAiBA,EACjBS,eAAgBA,IAGlB/mB,EAAAC,EAAAC,cAACstB,GAAD,CACExF,WAAYA,EACZC,aAAc5mB,EACd6mB,YAAa3e,EACb4e,aAAcA,aAjEEnnB,IAAM/C,WA+HlC85B,GAAcz6B,YAAc,gBAuBb8tB,UAAuB2M,GAAe1vB,MCtL/CwmB,GAAsB,CAC1B,CAAEzvB,IAAKmG,EAAyBE,MAAO4b,SAAS,GAChD,CAAEjiB,IAAKmG,EAAyBG,YAAa2b,SAAS,GACtD,CAAEjiB,IAAKmG,EAAyBU,QAChC,CAAE7G,IAAKmG,EAAyBI,YAChC,CAAEvG,IAAK8G,EAAuBC,gBAC9B,CAAE/G,IAAK8G,EAAuBE,mBAC9B,CAAEhH,IAAKmG,EAAyBO,QAChC,CAAE1G,IAAKmG,EAAyBK,WAChC,CAAExG,IAAKmG,EAAyBS,UAChC,CAAE5G,IAAKmG,EAAyBM,iBAAkB0b,MAAO,qBACzD,CAAEniB,IAAK8G,EAAuBI,cAC9B,CAAElH,IAAK8G,EAAuBG,eAG1BgyB,eACJ,SAAAA,EAAY/5B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA25B,IACjB95B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA65B,GAAAx5B,KAAAH,KAAMJ,KAiHRg6B,kBAAoB,WAClB/5B,EAAKD,MAAMi6B,0BACXh6B,EAAKuB,SAAS,CAAE04B,mBAAmB,KApHlBj6B,EAuHnB0wB,iBAAmB,WACjB1wB,EAAKuB,SAAS,CAAEovB,kBAAkB,KArHlC3wB,EAAKO,MAAQ,CACXowB,kBAAkB,EAClBsJ,mBAAmB,EAInBlJ,wBAAyB,IATV/wB,mFAqBjBG,KAAKJ,MAAMixB,yCAAyCjqB,EAAiBL,EAAaG,yEAIlF1G,KAAKJ,MAAMkxB,wCAAwClqB,EAAiBL,EAAaG,0BACjF1G,KAAKJ,MAAMmxB,2CAGJ,IAAAC,EAAAhxB,KAAAugB,EASHvgB,KAAKJ,MAPPqf,EAFKsB,EAELtB,QACAqR,EAHK/P,EAGL+P,iBACAW,EAJK1Q,EAIL0Q,6BACAC,EALK3Q,EAKL2Q,iBACA9iB,EANKmS,EAMLnS,8BACAC,EAPKkS,EAOLlS,oBACAC,EARKiS,EAQLjS,mBARKjN,EAUkErB,KAAKI,MAAtEowB,EAVDnvB,EAUCmvB,iBAAkBsJ,EAVnBz4B,EAUmBy4B,kBAAmBlJ,EAVtCvvB,EAUsCuvB,wBAE7C,OACEtvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACF,UAAWF,EAAQG,MACjC9d,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAMke,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAAC0d,GAAA3d,EAAD,CAAM8d,WAAS,EAACC,QAAQ,UACtBhe,EAAAC,EAAAC,cAAC4vB,GAAA7vB,EAAD,CAAO4d,UAAWF,EAAQ6G,OACxBxkB,EAAAC,EAAAC,cAACu4B,GAAD,CACE5R,UAAWmI,EAAiBtlB,UAC5Bse,WAAYgH,EAAiBplB,gBAC7BsV,UAAW8P,EAAiBnlB,cAC5BF,sBAAuBqlB,EAAiBrlB,sBACxC6d,aAAcwH,EAAiBllB,uBAC/ByhB,SAAU,SAAChiB,EAAYE,EAAiBxB,GACtC0nB,EACErqB,EAAiBL,EAAaG,yBAC9BmE,EACAE,EACAxB,IAGJohB,oBAAqB,SAAAzhB,GACnBgoB,EACEhO,GAAmCtc,EAAiBL,EAAaG,0BACjEwC,IAGJswB,kBAAmB,SAACnsB,EAAWxC,GAC7BmmB,EAAK5vB,SAAS,CACZ04B,mBAAmB,EACnBlJ,wBAAyB5M,GAA6BsM,EAAkBjjB,EAAWxC,MAGvFwd,eAAgB,SAACxd,EAAYoZ,EAAU5W,GACrC2jB,EAAK5vB,SAAS,CACZovB,kBAAkB,EAClBI,wBAAyB5M,GACvBsM,EACAjjB,EACAxC,EACAoZ,MAIN7V,8BAA+BA,QAOzC9M,EAAAC,EAAAC,cAAC8vB,GAAD,CACEnP,KAAMqO,EACNzO,YAAW,uBAAA5gB,OAAyByvB,EAAwBnkB,IAC5DuF,QAAS4e,EACThP,cAAeuO,GACftO,mBAAoBsC,GACpBrC,QAAS9hB,KAAKuwB,mBAGhBjvB,EAAAC,EAAAC,cAACw4B,GAAD,CACEt5B,IAAKkwB,EAAwBnkB,GAC7B0V,KAAM2X,EACNtZ,UAAWnS,EACXya,aAAcxa,EACd8gB,YAAawB,EACbvB,OAAQ,SAAChiB,EAAWc,GAAZ,OAA4B6iB,EAAKpxB,MAAMq6B,eAAe5sB,EAAWc,IACzE2T,QAAS9hB,KAAK45B,kBACdX,eAAgB,kBAAMjI,EAAK5vB,SAAS,CAAEovB,kBAAkB,2DA9FhC5wB,EAAOQ,GACrC,OAAIR,EAAMwO,8BAA8Boa,SAASpoB,EAAMwwB,wBAAwBnkB,IACtE,CAAEqtB,mBAAmB,GACvB,YAlB6Bx3B,IAAM/C,WA6H9Co6B,GAA0B/6B,YAAc,4BAExC,IAyBeU,KACbygB,qBAAW0F,GAAX1F,CACEyR,aA3BoB,SAAApxB,GACtB,MAAO,CACLkwB,iBAAkBlwB,EAAMmR,MAAM3K,EAAiBL,EAAaG,0BAA0B+qB,aACtFrjB,8BACEhO,EAAMyR,MAAMjL,EAAiBL,EAAaG,0BAA0B0H,8BACtEC,oBAAqBjO,EAAMyR,MAAMjL,EAAiBL,EAAaG,0BAA0B2H,oBACzFC,mBAAoBlO,EAAMyR,MAAMjL,EAAiBL,EAAaG,0BAA0B4H,qBAIjE,SAAAgQ,GACzB,OAAOoT,YACL,CACET,6BAA8B/N,GAC9B2N,yCAA0C1N,GAC1C2N,wCAAyC1N,GACzC8N,iBAAkBzmB,GAClBwvB,eAAgB/rB,GAChB2rB,wBAAyB,iBAAO,CAAEn0B,KAAMmI,GAAoCI,6BAC5E8iB,QAAS,iBAAO,CAAErrB,KAAMmI,GAAoCV,YAE9DmR,IAMAkT,CAGEmI,MCrLAO,GAAuB,CAC3B,CACEC,UAAWha,GACX0C,MAAO,gBACPuX,WAAY94B,EAAAC,EAAAC,cAAC64B,GAAA94B,EAAD,MACZ+4B,eAAgB,CAAC/zB,EAAaC,WAAYD,EAAaE,wBACvD8zB,KAAM,CACJ,CACE55B,MAAO,IACPkiB,MAAO,sBACPlkB,UAAWq2B,IAEb,CACEr0B,MAAO,IACPkiB,MAAO,qBACPlkB,UAAWm4B,MAIjB,CACEqD,UAAWha,GACX0C,MAAO,yBACPuX,WAAY94B,EAAAC,EAAAC,cAACg5B,GAAAj5B,EAAD,MACZ+4B,eAAgB,CAAC/zB,EAAaE,wBAC9B8zB,KAAM,CACJ,CACE55B,MAAO,IACPkiB,MAAO,sBACPlkB,UAAW05B,IAEb,CACE13B,MAAO,IACPkiB,MAAO,qBACPlkB,UAAWi6B,MAIjB,CACEuB,UAAWha,GACX0C,MAAO,iCACPlkB,UAAWg7B,GACXS,WAAY94B,EAAAC,EAAAC,cAACi4B,GAAAl4B,EAAD,MACZ+4B,eAAgB,CAAC/zB,EAAaG,yBAC9B6zB,KAAM,IAER,CACE55B,MAAO4F,EAAaI,OACpBwzB,UAAWha,GACX0C,MAAO,UACPlkB,UAAWyxB,GACXgK,WAAY94B,EAAAC,EAAAC,cAACi5B,GAAAl5B,EAAD,MACZ+4B,eAAgB,CAAC/zB,EAAaI,QAC9B4zB,KAAM,KAIH,SAASG,GAAwBC,GAItC,IAHA,IAAMC,EAAa,SAAAC,GAAM,OAAIF,EAAUnS,SAASqS,IAE1CC,EAAW,GACjBC,EAAA,EAAAC,EAAsBd,GAAtBa,EAAAC,EAAAl1B,OAAAi1B,IAA4C,CAAvC,IAAMjhB,EAAOkhB,EAAAD,GACZjhB,EAAQwgB,eAAeW,KAAKL,IAC9BE,EAASI,KAAKphB,GAElB,OAAOghB,EAMF,SAASK,GAA2BC,GAAuB,IAAXvW,EAAWhf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACvDiU,EAAUogB,GAAqBhW,KAAK,SAAApK,GAAO,OAAIA,EAAQwgB,eAAe9R,SAAS4S,KAErF,OAAe,MAAXthB,EACF,GAAA3Y,OAAU2Y,EAAQqgB,WAAlBh5B,OAA8B2Y,EAAQygB,KAAKz0B,OAAS,EAAtB,IAAA3E,OAA8B0jB,GAAU,IAC1D,GCrFT,SAASwW,KAGd,IAFA,IACIvb,EAAQ,IACHwb,EAAI,EAAGA,EAAI,EAAGA,IACrBxb,GAHY,mBAGKyb,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAO3b,oECFH4b,8MAgBJC,aAAe,SAAAC,GAAY,IAAArb,EACO1gB,EAAKD,MAA7Bi8B,EADiBtb,EACjBsb,QAASC,EADQvb,EACRub,WACjBD,EAAQX,KAAR,GAAA/5B,OAAgB26B,EAAhB,KAAA36B,OAA8By6B,6EAjBvB,IAAA5K,EAAAhxB,KAAAkoB,EACwBloB,KAAKJ,MAA5B26B,EADDrS,EACCqS,KAAMwB,EADP7T,EACO6T,MAAO58B,EADd+oB,EACc/oB,MACrB,OACEmC,EAAAC,EAAAC,cAACw6B,GAAAz6B,EAAD,CACEZ,MAAOo7B,EAAME,OAAOL,SACpB75B,QAASm6B,uBAAY,KAAM/8B,GAAS,YAAc,aAClDg9B,cAAc,QAEb5B,EAAKhY,IAAI,SAAC6Z,EAAKvX,GACd,OAAOvjB,EAAAC,EAAAC,cAAC66B,GAAA96B,EAAD,CAAKb,IAAKmkB,EAAOlkB,MAAOy7B,EAAIz7B,MAAOkiB,MAAOuZ,EAAIvZ,MAAOI,QAAS,kBAAM+N,EAAK2K,aAAaS,EAAIz7B,oBAVnFpB,aAsBxBm8B,GAAU98B,YAAc,YAMT09B,YAAU,CAAEC,OAAO,GAAnBD,CAA2BZ,ICwBpCc,eACJ,SAAAA,EAAY58B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAw8B,IACjB38B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA08B,GAAAr8B,KAAAH,KAAMJ,KAyCR68B,iBAAmB,WAAM,IAAAlc,EACC1gB,EAAKD,MAArBsR,EADeqP,EACfrP,KAAM6qB,EADSxb,EACTwb,MAEd,OAAOrB,GAAwBxpB,EAAKtE,OAAO2V,IAAI,SAACzI,EAAS+K,GACvD,GAAI/K,EAAQygB,KAAKz0B,OAAS,EACxB,OACExE,EAAAC,EAAAC,cAACk7B,GAAA,EAAD,CACEh8B,IAAKmkB,EACL8X,KAAI,GAAAx7B,OAAK46B,EAAMa,KAAXz7B,OAAiB2Y,EAAQqgB,WAAzBh5B,OAAqCif,GAAYC,WACrDwc,OAAQ,SAAAC,GAAU,OAChBx7B,EAAAC,EAAAC,cAACu7B,GAADj9B,OAAA8gB,OAAA,GAAekc,EAAf,CAA2BhB,WAAU,GAAA36B,OAAK46B,EAAMa,KAAXz7B,OAAiB2Y,EAAQqgB,WAAaI,KAAMzgB,EAAQygB,cApDlF16B,EA4DnBm9B,mBAAqB,WACnB,OACE17B,EAAAC,EAAAC,cAACy7B,GAAA17B,EAAD,CAAQ4gB,KAAMtiB,EAAKO,MAAM88B,aAAcn7B,QAAQ,YAAY+f,QAASjiB,EAAKs9B,aACtEt9B,EAAKu9B,uBA/DOv9B,EAoEnBw9B,oBAAsB,WACpB,OACE/7B,EAAAC,EAAAC,cAACy7B,GAAA17B,EAAD,CAAQ0d,QAAS,CAAE6G,MAAOjmB,EAAKD,MAAMqf,QAAQqe,QAAUnb,MAAI,EAACpgB,QAAQ,YAAYw7B,OAAO,QACpF19B,EAAKu9B,uBAvEOv9B,EA4EnBu9B,mBAAqB,WAAM,IAAAlV,EAC4BroB,EAAKD,MAAlDqf,EADiBiJ,EACjBjJ,QAAS8c,EADQ7T,EACR6T,MAAO55B,EADC+lB,EACD/lB,SAAU+O,EADTgX,EACShX,KAAMssB,EADftV,EACesV,SACxC,OACEl8B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KAEE9gB,EAAAC,EAAAC,cAACi8B,GAAAl8B,EAAD,KACED,EAAAC,EAAAC,cAACk8B,GAAAn8B,EAAD,KACED,EAAAC,EAAAC,cAACm8B,GAAAp8B,EAAD,CAAQ4d,UAAWF,EAAQ2e,QAAS1sB,EAAKrS,KAAKg/B,OAAO,KAEvDv8B,EAAAC,EAAAC,cAACs8B,GAAAv8B,EAAD,CACEw8B,QAAS7sB,EAAKrS,KACdm/B,UACE18B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACGlR,EAAKvE,MACQ,MAAbuE,EAAKxE,MACJpL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAA,WADF,gBAEgB0P,EAAKxE,KAAK7N,UAQpCyC,EAAAC,EAAAC,cAAA,OAAKmxB,SAAU,EAAGrhB,KAAK,SAAS2R,QAASpjB,EAAKs9B,YAAac,UAAWp+B,EAAKs9B,aACzE77B,EAAAC,EAAAC,cAAC08B,GAAA38B,EAAD,CAAM4d,UAAWF,EAAQkf,aACtBzD,GAAwBxpB,EAAKtE,OAAO2V,IAAI,SAACzI,EAAS+K,GACjD,OACEvjB,EAAAC,EAAAC,cAACi8B,GAAAl8B,EAAD,CACEb,IAAKmkB,EACLuZ,QAAM,EACNrO,SAAU5tB,EAASk8B,SAASC,WAAlB,GAAAn9B,OAAgC46B,EAAMa,KAAtCz7B,OAA4C2Y,EAAQqgB,YAC9DlX,QAAS,kBACPpjB,EAAK0+B,iBACHzkB,EAAQygB,KAAKz0B,OAAS,EAAtB,GAAA3E,OACO46B,EAAMa,KADbz7B,OACmB2Y,EAAQqgB,UAD3B,KAAAh5B,OACwC2Y,EAAQygB,KAAK,GAAG55B,OADxD,GAAAQ,OAEO46B,EAAMa,KAFbz7B,OAEmB2Y,EAAQqgB,cAI/B74B,EAAAC,EAAAC,cAACk8B,GAAAn8B,EAAD,KAAeuY,EAAQsgB,YACvB94B,EAAAC,EAAAC,cAACs8B,GAAAv8B,EAAD,CAAcw8B,QAASjkB,EAAQ+I,WAIrCvhB,EAAAC,EAAAC,cAACyf,GAAA,EAAD,MAEA3f,EAAAC,EAAAC,cAACi8B,GAAAl8B,EAAD,CAAU0hB,QAASua,EAAUY,QAAM,GACjC98B,EAAAC,EAAAC,cAACk8B,GAAAn8B,EAAD,KACED,EAAAC,EAAAC,cAACg9B,GAAAj9B,EAAD,OAEFD,EAAAC,EAAAC,cAACs8B,GAAAv8B,EAAD,CAAcw8B,QAAQ,gBAhIfl+B,EAwInB4+B,WAAa,WACX5+B,EAAKuB,SAAS,CAAE87B,cAAc,KAzIbr9B,EA4InBs9B,YAAc,WACZt9B,EAAKuB,SAAS,CAAE87B,cAAc,KA7Ibr9B,EAgJnB0+B,iBAAmB,SAAA3B,GACjB/8B,EAAKD,MAAMi8B,QAAQX,KAAK0B,IA9IxB/8B,EAAKO,MAAQ,CACX88B,cAAc,GAJCr9B,wEAQV,IACCof,EAAYjf,KAAKJ,MAAjBqf,QACR,OACE3d,EAAAC,EAAAC,cAAA,OAAK2d,UAAWF,EAAQG,MACtB9d,EAAAC,EAAAC,cAACk9B,GAAAn9B,EAAD,CAAQ4d,UAAWF,EAAQ0f,OAAQ1e,SAAS,UAC1C3e,EAAAC,EAAAC,cAACqpB,GAAAtpB,EAAD,KACED,EAAAC,EAAAC,cAAC4sB,GAAA7sB,EAAD,CACE4d,UAAWF,EAAQ2f,WACnB9e,MAAM,UACNmW,aAAW,cACXhT,QAASjjB,KAAKy+B,YAEdn9B,EAAAC,EAAAC,cAACq9B,GAAAt9B,EAAD,OAEFD,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAY4d,UAAWF,EAAQwL,aAAc1oB,QAAQ,KAAK+d,MAAM,UAAUgf,QAAM,GAAhF,0BAKD9+B,KAAKy8B,oBAGRn7B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAC8lB,GAAA/lB,EAAD,CAAQw9B,MAAI,EAACC,eAAe,OACzBh/B,KAAKg9B,sBAER17B,EAAAC,EAAAC,cAAC8lB,GAAA/lB,EAAD,CAAQgmB,QAAM,EAACyX,eAAe,OAC3Bh/B,KAAKq9B,gCApCO99B,aAsJzBi9B,GAAW59B,YAAc,aAQVmhB,4BApMA,SAAA8D,GAAK,MAAK,CACvBzE,KAAM,CACJ/f,QAAS,QAEXs/B,OAAO7+B,OAAAsI,EAAA,EAAAtI,CAAA,GACJ+jB,EAAM+B,YAAYC,GAAG,MAAQ,CAC5BsG,WHhB8B,QGiB9BhtB,MAAK,eAAAgC,OHjByB,QGiBzB,OAGTm8B,OAAQ,CACNn+B,MHrBgC,SGuBlCy/B,WAAW9+B,OAAAsI,EAAA,EAAAtI,CAAA,CACT2hB,YAAa,IACZoC,EAAM+B,YAAYC,GAAG,MAAQ,CAC5BxmB,QAAS,SAGborB,aAAa3qB,OAAAsI,EAAA,EAAAtI,CAAA,GACV+jB,EAAM+B,YAAYC,GAAG,MAAQ,CAC5BsG,WAAY,KAGhByR,OAAQ,CACN5+B,QAAS,EACTigC,gBAAiB5D,MAEnB8C,YAAa,CACXh/B,MAAO,UAuKI4gB,CAAmByc,ICtL5B0C,+LAEFl/B,KAAKJ,MAAMu/B,uBAAuBn/B,KAAKJ,MAAMgG,8CAGtC,IAAA2a,EASHvgB,KAAKJ,MAPPqf,EAFKsB,EAELtB,QACArZ,EAHK2a,EAGL3a,YACAsL,EAJKqP,EAILrP,KACAkuB,EALK7e,EAKL6e,cACAh5B,EANKma,EAMLna,iBACA+4B,EAPK5e,EAOL4e,uBACGrC,EAREh9B,OAAA4gB,GAAA,EAAA5gB,CAAAygB,EAAA,8FAWP,OACEjf,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACIlR,EAAKrE,aA2BLvL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAAC69B,GAADv/B,OAAA8gB,OAAA,GAAgBkc,EAAhB,CAA4B5rB,KAAMA,EAAMssB,SAAU,kBAAM4B,EAAcx5B,OACtEtE,EAAAC,EAAAC,cAAA,QAAM2d,UAAWF,EAAQqgB,SAAUt/B,KAAKu/B,2BA5B1Cj+B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACE9gB,EAAAC,EAAAC,cAACg+B,GAAD,MACAl+B,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CACEkB,KAAMjR,EAAKpE,YACXmS,QAAS,CAAE6G,MAAO7G,EAAQwgB,aAC1Bte,sBAAoB,EACpBue,sBAAoB,GAEpBp+B,EAAAC,EAAAC,cAACyf,GAAA,EAAD,KACE3f,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAmB9B,UAAWF,EAAQ0gB,iBAAtC,kIAKFr+B,EAAAC,EAAAC,cAACyf,GAAA,EAAD,KACE3f,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAQ9B,UAAWF,EAAQ0gB,gBAAiB1c,QAAS,kBAAMkc,EAAuBv5B,KAAlF,WAGAtE,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAQ9B,UAAWF,EAAQ0gB,gBAAiB1c,QAAS,kBAAMmc,EAAcx5B,KAAzE,aAcRtE,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAQkB,KAAM/b,EAAkB+a,sBAAoB,EAACue,sBAAoB,GACvEp+B,EAAAC,EAAAC,cAACyf,GAAA,EAAD,KACE3f,EAAAC,EAAAC,cAACyf,GAAA,EAAD,qEAEF3f,EAAAC,EAAAC,cAACyf,GAAA,EAAD,KACE3f,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CACE9B,UAAWF,EAAQ2gB,aAEnB3c,QAAS,kBAAMmc,MAHjB,gFAiBe,IAAAlX,EACCloB,KAAKJ,MAArBsR,EADegX,EACfhX,KAAM6qB,EADS7T,EACT6T,MACd,OACEz6B,EAAAC,EAAAC,cAACk7B,GAAA,EAAD,KAEGhC,GAAwBxpB,EAAKtE,OAAO2V,IAAI,SAACzI,EAAS+K,GAEjD,GAAI/K,EAAQygB,KAAKz0B,OAAS,EAAG,CAC3B,IAAM+5B,EAAY/lB,EAAQygB,KAAKhY,IAAI,SAAA6Z,GAAG,OACpC96B,EAAAC,EAAAC,cAACk7B,GAAA,EAAD,CAAOC,KAAI,GAAAx7B,OAAK46B,EAAMa,KAAXz7B,OAAiB2Y,EAAQqgB,UAAzB,KAAAh5B,OAAsCi7B,EAAIz7B,OAASm/B,OAAK,EAACnhC,UAAWy9B,EAAIz9B,cAWrF,OANAkhC,EAAU3E,KACR55B,EAAAC,EAAAC,cAACk7B,GAAA,EAAD,CACEvT,KAAI,GAAAhoB,OAAK46B,EAAMa,KAAXz7B,OAAiB2Y,EAAQqgB,WAC7B/Q,GAAE,GAAAjoB,OAAK46B,EAAMa,KAAXz7B,OAAiB2Y,EAAQqgB,UAAzB,KAAAh5B,OAAsC2Y,EAAQygB,KAAK,GAAG55B,UAGrDk/B,EAGP,OAAOv+B,EAAAC,EAAAC,cAACk7B,GAAA,EAAD,CAAOh8B,IAAKmkB,EAAO8X,KAAI,GAAAx7B,OAAK46B,EAAMa,KAAXz7B,OAAiB2Y,EAAQqgB,WAAa2F,OAAK,EAACnhC,UAAWmb,EAAQnb,cAIjG2C,EAAAC,EAAAC,cAACk7B,GAAA,EAAD,CAAUtT,GAAE,GAAAjoB,OAAK46B,EAAMa,KAAXz7B,OAAiBg6B,GAA2BjqB,EAAKtE,MAAM,eApGxDrN,aA0GnB2/B,GAAKtgC,YAAc,OAEnB,IAkBemhB,wBAxJI,SAAA8D,GAAK,MAAK,CAC3BzE,KAAM,CACJ/f,QAAS,QAEXigC,QAAQx/B,OAAAsI,EAAA,EAAAtI,CAAA,GACL+jB,EAAM+B,YAAYC,GAAG,MAAQ,CAC5BsG,WAAU,QAAAhrB,OJJoB,QIIpB,KACVhC,MAAK,eAAAgC,OJLyB,QIKzB,OAGTs+B,YAAa,CACXR,gBAAiBpb,EAAMC,QAAQxjB,MAAMy/B,MAEvCJ,gBAAiB,CACf7f,MAAO,SAET8f,aAAc,CACZ9f,MAAO+D,EAAMC,QAAQia,QAAQ9X,QAuIlBlG,CACbyR,aAnBsB,SAAApxB,GACtB,MAAO,CACLwF,YAAaxF,EAAM6Q,KAAKrL,YACxBQ,iBAAkBhG,EAAM6Q,KAAK7K,iBAC7B8K,KAAM9Q,EAAM8Q,OAIW,SAAAoN,GACzB,OAAOoT,YACL,CACE0N,cAAez5B,EACfw5B,uBAAwB3yB,IAE1B8R,IAKFkT,CAGE0N,mECnHEc,eACJ,SAAAA,EAAYpgC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAggC,IACjBngC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkgC,GAAA7/B,KAAAH,KAAMJ,KA2GR+zB,eAAiB,SAAC90B,EAAM4sB,GAAU,IAAAwU,EAChCpgC,EAAKuB,UAAL6+B,EAAA,GAAAngC,OAAAsI,EAAA,EAAAtI,CAAAmgC,EACGphC,EAAO4sB,EAAM/G,OAAO/jB,OADvBb,OAAAsI,EAAA,EAAAtI,CAAAmgC,EAAA,iBAEiB,GAFjBngC,OAAAsI,EAAA,EAAAtI,CAAAmgC,EAAA,iBAGiB,GAHjBA,KA7GiBpgC,EAuHnBqgC,qBAAuB,WAAM,IAAA7+B,EACIxB,EAAKO,MAA5BoF,EADmBnE,EACnBmE,SAAUC,EADSpE,EACToE,SAEd5F,EAAKsgC,0BACPtgC,EAAKD,MAAMwgC,aAAa56B,EAAUC,IA3HnB5F,EAkInBwgC,kBAAoB,SAAA5U,GACA,UAAdA,EAAM/qB,KACRb,EAAKqgC,wBApIUrgC,EA4InBsgC,uBAAyB,WAAM,IAAApM,EACEl0B,EAAKO,MAA5BoF,EADqBuuB,EACrBvuB,SAAUC,EADWsuB,EACXtuB,SACZ66B,EAAoC,IAApB96B,EAASM,OACzBy6B,EAAoC,IAApB96B,EAASK,OAE/B,OAAIw6B,IAAiBC,IACnB1gC,EAAKuB,SAAS,CACZk/B,gBACAC,mBAEK,IAnJT1gC,EAAKO,MAAQ,CACXoF,SAAU,GACVC,SAAU,GACV66B,eAAe,EACfC,eAAe,GAPA1gC,wEAWV,IAAAmxB,EAAAhxB,KAAAugB,EACgCvgB,KAAKJ,MAApCqf,EADDsB,EACCtB,QAAS/Y,EADVqa,EACUra,kBADVs6B,EAEsDxgC,KAAKI,MAA1DoF,EAFDg7B,EAECh7B,SAAUC,EAFX+6B,EAEW/6B,SAAU66B,EAFrBE,EAEqBF,cAAeC,EAFpCC,EAEoCD,cAC3C,OACEj/B,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAM9B,UAAWF,EAAQG,KAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UACnEje,EAAAC,EAAAC,cAACi/B,GAAAl/B,EAAD,CAAM4d,UAAWF,EAAQyhB,KAAMzC,UAAWj+B,KAAKqgC,mBAC7C/+B,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAM9B,UAAWF,EAAQ0hB,SAAUthB,WAAS,EAACG,QAAS,IACpDle,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAMxB,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAM5B,WAAS,EAACC,QAAQ,SAASshB,aAAa,SAASphB,QAAS,GAC9Dle,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAMxB,MAAI,GACRne,EAAAC,EAAAC,cAAA,OAAK2d,UAAWF,EAAQS,KAAM/d,IAAKk/B,KAAUn/B,IAAI,cAEnDJ,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAMxB,MAAI,EAACgD,GAAI,GAAItD,UAAWF,EAAQ6hB,aACpCx/B,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,YAAY+d,MAAM,iBAAtC,yCAONxe,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAMxB,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACk1B,GAAAn1B,EAAD,CAAaE,MAAO,CAAEs/B,cAAe,GAAKzgC,MAAOggC,EAAezf,WAAW,GACzEvf,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAAD,CACEshB,MAAM,WACNnd,KAAK,OACL3D,QAAQ,WACRzB,MAAOggC,EACPU,WAAW,EACXrgC,MAAO6E,EACPgmB,SAAU,SAAAC,GAAK,OAAIuF,EAAK2C,eAAe,WAAYlI,MAEpD6U,GAAiBh/B,EAAAC,EAAAC,cAACy/B,GAAA1/B,EAAD,qCAItBD,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAMxB,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACk1B,GAAAn1B,EAAD,CAAajB,MAAOigC,EAAe1f,WAAW,GAC5Cvf,EAAAC,EAAAC,cAACwuB,GAAAzuB,EAAD,CACEshB,MAAM,WACNnd,KAAK,WACL3D,QAAQ,WACRzB,MAAOigC,EACP5/B,MAAO8E,EACP+lB,SAAU,SAAAC,GAAK,OAAIuF,EAAK2C,eAAe,WAAYlI,MAEpD8U,GAAiBj/B,EAAAC,EAAAC,cAACy/B,GAAA1/B,EAAD,qCAItBD,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAMxB,MAAI,EAACgD,GAAI,IACbnhB,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAM5B,WAAS,EAACC,QAAQ,WAAWshB,aAAa,UAC9Ct/B,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAMxB,MAAI,GACRne,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CACE4d,UAAWF,EAAQiiB,YACnBtT,SAAU1nB,EACV8hB,KAAK,QACLjmB,QAAQ,YACR+d,MAAM,YACNmD,QAASjjB,KAAKkgC,qBACdiB,WAAYnhC,KAAKkgC,sBAPnB,cAiBV5+B,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAMxB,MAAI,EAACgD,GAAI,GAAItD,UAAWF,EAAQmiB,QACpC9/B,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYQ,QAAQ,UAAU+d,MAAM,WAApC,gBACgB,IACdxe,EAAAC,EAAAC,cAAA,KAAG2d,UAAWF,EAAQoiB,KAAM5c,KAAK,uBAAjC,iCAEK,IAJP,8CAMEnjB,EAAAC,EAAAC,cAAA,KAAG2d,UAAWF,EAAQoiB,KAAM5c,KAAK,+BAAjC,2BANF,IAUEnjB,EAAAC,EAAAC,cAAA,WAVF,uBAWoB,IAClBF,EAAAC,EAAAC,cAAA,KAAG2d,UAAWF,EAAQoiB,KAAM5c,KAAK,2CAAjC,eAEK,IAdP,4CAlFUllB,aA8JpBygC,GAAMphC,YAAc,QAEpB,IAeemhB,wBAvNA,CACbX,KAAM,CACJY,SAAU,EACVC,SAAU,WACVC,OAAQ,QAEVwgB,KAAM,CACJ3hC,SAAU,IACVC,OAAQ,GACR0nB,SAAU,WAEZia,SAAU,CACR1hC,QAAS,IAEXiiC,YAAa,CACX/hC,MAAO,IAETiiC,OAAQ,CACNthB,MAAO,OACPwhB,UAAW,SACXC,UAAW,WACXtiC,QAAS,eAEXoiC,KAAM,CACJvhB,MAAO,WAETJ,KAAM,CACJvgB,MAAO,SAET2hC,YAAa,CACXQ,UAAW,WAyLAvhB,CACbyR,aAhBsB,SAAApxB,GACtB,MAAO,CACL8F,kBAAmB9F,EAAM6Q,KAAK/K,oBAIP,SAAAoY,GACzB,OAAOoT,YACL,CACE0O,aAAc76B,GAEhB+Y,IAKFkT,CAGEwO,KC/MEwB,GAAY,SAAA3lB,GAAA,IAAG4lB,EAAH5lB,EAAG4lB,UAAsBliC,EAAzBsc,EAAcld,UAAsB+iC,EAApC7lB,EAAoC6lB,aAAiBC,EAArD7hC,OAAA4gB,GAAA,EAAA5gB,CAAA+b,EAAA,iDAChBva,EAAAC,EAAAC,cAACk7B,GAAA,EAAD58B,OAAA8gB,OAAA,GACM+gB,EADN,CAEE9E,OAAQ,SAAAj9B,GAAK,OAAK6hC,IAAcngC,EAAAC,EAAAC,cAACjC,EAAcK,GAAY0B,EAAAC,EAAAC,cAACk7B,GAAA,EAAD,CAAUtT,GAAI,CAAEiV,SAAUqD,UAWnFE,+LAEF,IAAMC,EAAmB1tB,aAAa2tB,QAAQt/B,GACtB,MAApBq/B,EACF7hC,KAAKJ,MAAMmiC,4BAA4BF,GAEvC7hC,KAAKJ,MAAMoiC,4DAGN,IAAAzhB,EAC0DvgB,KAAKJ,MAA9DuG,EADDoa,EACCpa,kBAAmBP,EADpB2a,EACoB3a,YAAaqZ,EADjCsB,EACiCtB,QAAS/M,EAD1CqO,EAC0CrO,YACjD,OACE5Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6gB,SAAA,KACGjc,EACC7E,EAAAC,EAAAC,cAACg+B,GAAD,MAEAl+B,EAAAC,EAAAC,cAACygC,GAAA,EAAD,KACE3gC,EAAAC,EAAAC,cAACk7B,GAAA,EAAD,KACEp7B,EAAAC,EAAAC,cAAC0gC,GAAD,CACET,UAAW,kBAAqB,MAAf77B,GACjBk6B,OAAK,EACLnD,KAAMxc,GACNxhB,UAAWugC,GACXwC,aAAcvhB,KAEhB7e,EAAAC,EAAAC,cAAC0gC,GAAD,CACET,UAAW,kBAAqB,MAAf77B,GACjB+2B,KAAMxc,GACNxhB,UAAWqhC,GACX0B,aAAcvhB,KAEhB7e,EAAAC,EAAAC,cAAC0gC,GAAD,CACET,UAAW,kBAAqB,MAAf77B,GACjB+2B,KAAMxc,GACNxhB,UAAWugC,GACXwC,aAAcvhB,OAOrBjO,GACC5Q,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAQhC,QAAS,CAAE6G,MAAO7G,EAAQwgB,aAAete,sBAAoB,EAACue,sBAAoB,EAACvd,MAAI,GAC7F7gB,EAAAC,EAAAC,cAACyf,GAAA,EAAD,KACE3f,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAmB9B,UAAWF,EAAQ0gB,iBAAtC,iIAGEr+B,EAAAC,EAAAC,cAAA,WAHF,kFAOFF,EAAAC,EAAAC,cAACyf,GAAA,EAAD,KACE3f,EAAAC,EAAAC,cAACyf,GAAA,EAAD,CAAQ9B,UAAWF,EAAQ0gB,gBAAiB1c,QAAS,kBAAM/gB,OAAOC,SAASggC,WAA3E,sBArDO5iC,aAgErBqiC,GAAOhjC,YAAc,SAErB,IAkBemhB,wBA/GA,SAAA8D,GAAK,MAAK,CACvB4b,YAAa,CACXR,gBAAiBpb,EAAMC,QAAQxjB,MAAMy/B,MAEvCJ,gBAAiB,CACf7f,MAAO,WA0GIC,CACbyR,aAnBsB,SAAApxB,GACtB,MAAO,CACLwF,YAAaxF,EAAM6Q,KAAKrL,YACxBO,kBAAmB/F,EAAM6Q,KAAK9K,kBAC9B+L,YAAa9R,EAAM8R,cAII,SAAAoM,GACzB,OAAOoT,YACL,CACEqQ,4BAA6B/7B,EAC7Bg8B,yBAA0B,iBAAO,CAAEt8B,KAAMZ,EAAiBK,yBAE5DmZ,IAKFkT,CAGEoQ,KC9GJ,IAAM/d,GAAQue,yBCVL,CACLte,QAAS,CACPkI,OAAQ,CAAEC,MAAO,UAAWoW,MAAO,WACnChhB,WAAY,CAAEyE,MAAO,UAAWwc,QAAS,WACzCvE,QAAS,CACPwE,MAAO,UACPtc,KAAM,UACN8Z,KAAM,UACNyC,aAAc,WAEhBxE,UAAW,CACTuE,MAAO,UACPtc,KAAM,UACN8Z,KAAM,UACNyC,aAAc,WAEhBliC,MAAO,CACLiiC,MAAO,UACPtc,KAAM,UACN8Z,KAAM,UACNyC,aAAc,WAEhBze,SAAU,WAEZ0e,WAAY,CACVC,iBAAiB,KDVjBC,GAAgBrjC,EAAkB,WACtC,OACEgC,EAAAC,EAAAC,cAACohC,EAAA,iBAAD,CAAkB/e,MAAOA,IACvBviB,EAAAC,EAAAC,cAACqhC,EAAA,iBAAD,CACEC,SAAU,EACVC,aAAc,CACZC,SAAU,SACVC,WAAY,WAGd3hC,EAAAC,EAAAC,cAAC0hC,GAAD,KACE5hC,EAAAC,EAAAC,cAAC2hC,GAAD,WAOVC,IAASvG,OAAOv7B,EAAAC,EAAAC,cAACmhC,GAAD,MAAmBU,SAASC,eAAe","file":"static/js/main.5b6546e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sad_face_grey.391e5c2b.png\";","module.exports = __webpack_public_path__ + \"static/media/gesbank_logo.d8e4f43c.png\";","module.exports = __webpack_public_path__ + \"static/media/ibt_logo.c6af17ac.png\";","export function getReactComponentName(component) {\n  return component.displayName || component.name || '[anonymous]';\n}","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport sad_face_grey from '../../assets/sad_face_grey.png';\nimport { getReactComponentName } from '../../utils/componentUtils';\n\nconst errorBoxStyle = {\n  maxWidth: '700px',\n  margin: 'auto',\n  padding: '12vmin 16px'\n};\n\nconst errorIconStyle = {\n  width: '200px',\n  paddingBottom: '24px',\n  display: 'block',\n  margin: 'auto'\n};\n\n/**\n * Returns the name of the component at the top most position of the React stack trace\n * (which is the one that raised the error).\n * A typical React component looks like that:\n *   in COMPONENT (at file.jsx:5)\n *   in COMPONENT2 (at file2.jsx:45)\n *   etc...\n */\nfunction getTopMostStackEntryComponent(componentStack) {\n  // We start looking for the first line wrap after the first character since stack traces start with a '/n'\n  const topMostEntry = componentStack.slice(0, componentStack.indexOf('\\n', 1)).trim();\n  // At this point topMostEntry contains a string like \"in COMPONENT (at FILE:LINE)\"\n  return topMostEntry.split(' ')[1];\n}\n\n/**\n * Higher-order component which wraps a component in an error boundary in order to\n * catch exceptions during rendering and report the error to the user.\n * Docs about these topics:\n *   https://reactjs.org/docs/higher-order-components.html\n *   https://reactjs.org/docs/error-boundaries.html\n * @param {*} Component the component which must be wrapped\n */\nexport default function withErrorBoundary(Component) {\n  return class WithErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        errorReceived: false,\n        error: null,\n        faultyComponentName: '' // name of the component that raised the error\n      };\n    }\n\n    // Component name shown in DevTools and stack traces\n    static displayName = `WithErrorBoundary(${getReactComponentName(Component)})`;\n\n    static getDerivedStateFromError(error) {\n      return { errorReceived: true, error };\n    }\n\n    componentDidCatch(error, info) {\n      const faultyComponentName = getTopMostStackEntryComponent(info.componentStack);\n      console.error(\n        `${error.name} occurred during ${faultyComponentName} rendering, stack trace:`,\n        info.componentStack\n      );\n      this.setState({ faultyComponentName });\n    }\n\n    render() {\n      const { errorReceived, error, faultyComponentName } = this.state;\n      return errorReceived ? (\n        <div style={errorBoxStyle}>\n          <img alt=\"Sad face\" src={sad_face_grey} style={errorIconStyle} />\n          <Typography align=\"center\" variant=\"h2\" paragraph>\n            Oops!\n          </Typography>\n          <Typography align=\"center\" variant=\"subtitle1\" paragraph>\n            Si è verificato un errore imprevisto durante il caricamento della schermata.\n            <br />\n            Segnalaci il problema riportando le informazioni sottostanti:\n          </Typography>\n          <Typography style={{ paddingLeft: '20%' }} variant=\"body2\">\n            <b>Route corrente:</b> {window.location.hash}\n            <br />\n            <b>Componente in cui è avvenuto l'errore:</b> {faultyComponentName}\n            <br />\n            <b>Tipo dell'errore:</b> {error.name}\n            <br />\n            <b>Messaggio:</b> {error.message}\n            <br />\n            <i>(maggiori dettagli visibili nella console sviluppatore)</i>\n          </Typography>\n        </div>\n      ) : (\n        <Component {...this.props} />\n      );\n    }\n  };\n}\n","export let API_ENDPOINT_URL = 'https://aum.altervista.org/main.php';\nexport const TOKEN_LOCALSTORAGE_KEY = 'token';\n\nexport const REQUEST_TIMEOUT_MS = 8000;\nexport const LIST_AUTO_UPDATE_INTERVAL_MS = 5000;\nexport const LIST_ELEMENTS_PER_PAGE = 20;\n\nexport const SEARCH_DEBOUNCE_DELAY_MS = 250;\n\nexport const ELEMENT_TYPE = {\n  COMMITS: 'commits',\n  SEND_REQUESTS: 'sendRequests',\n  CLIENTS: 'clients',\n  BRANCHES: 'branches'\n}\n\nexport const ELEMENT_ENDPOINT_TYPE = {\n  ADD: 'add',\n  LIST: 'list',\n  SHORT_LIST: 'shortList',\n  UPDATE: 'update',\n  REMOVE: 'remove'\n}\n\nexport const REQUEST_ENDPOINT_PATH = {\n  LOGIN: 'auth/login',\n  LOGOUT: 'auth/logout',\n  VALIDATE_TOKEN: 'auth/validateToken',\n  GET_USER_INFO: 'user/info'\n};\n\nexport const API_ERROR_STRING = {\n  MISSING_TOKEN: 'ERROR_GLOBAL_MISSING_TOKEN',\n  INVALID_TOKEN: 'ERROR_GLOBAL_INVALID_TOKEN',\n  INVALID_CREDENTIALS: 'ERROR_LOGIN_INVALID_CREDENTIALS',\n  INVALID_REQUEST: 'ERROR_GLOBAL_INVALID_REQUEST',\n  REQUEST_NOT_JSON: 'ERROR_REQUEST_NOT_JSON',\n  UNAUTHORIZED: 'ERROR_GLOBAL_UNAUTHORIZED',\n  DB_ERROR: 'ERROR_GLOBAL_DB',\n  NOT_IMPLEMENTED: 'ERROR_GLOBAL_NOT_IMPLEMENTED',\n  USER_NOT_FOUND: 'ERROR_USER_NOT_FOUND',\n  INVALID_ID: 'ERROR_INVALID_ID',\n\n  LIST_INVALID_PARAMETER: 'ERROR_LIST_INVALID_PARAMETER',\n\n  REMOVE_COMMIT_ALREADY_INCLUDED: 'ERROR_REMOVE_COMMIT_ALREADY_INCLUDED',\n  REMOVE_ALREADY_APPROVED: 'ERROR_REMOVE_ALREADY_APPROVED',\n  APPROVE_ALREADY_APPROVED: 'ERROR_APPROVE_ALREADY_APPROVED',\n  SEND_NOT_APPROVED: 'ERROR_SEND_NOT_APPROVED',\n  INSTALL_NOT_SENT: 'ERROR_INSTALL_PATCH_NOT_SENT',\n\n  SERVER_IN_MAINTENANCE: 'ERROR_SRV_IN_MAINTENANCE'\n};\n\n// Used only in dev code for test purposes, should never be called in production!\nexport function changeEndpointUrl(newUrl) {\n  API_ENDPOINT_URL = newUrl;\n  console.log(`API endpoint changed to ${API_ENDPOINT_URL}`);\n  if (!API_ENDPOINT_URL.startsWith('https://'))\n    console.warn('You are not using a secure protocol for API connection. Data can be easily intercepted!');\n}\n","/**\n * @file\n * This file contains all the actions related to the authentication of the user.\n * The user when authorized has an unique access token, used to identify all the\n * requests from that specific user.\n * These actions notify success and failure for login, logout and validation of the token\n * used in the last session (when the user closes the app without logging out).\n */\n\nexport const AUTH_ACTION_TYPE = {\n  LOGIN_REQUESTED: 'LOGIN_REQUESTED',\n  LOGIN_SUCCESSFUL: 'LOGIN_SUCCESSFUL',\n  LOGIN_FAILED: 'LOGIN_FAILED',\n  LOGOUT: 'LOGOUT',\n  SESSION_EXPIRED: 'SESSION_EXPIRED',\n  LOCAL_TOKEN_NOT_FOUND: 'LOCAL_TOKEN_NOT_FOUND',\n  TOKEN_VALIDATION_REQUESTED: 'TOKEN_VALIDATION_REQUESTED',\n  TOKEN_VALIDATION_SUCCESSFUL: 'TOKEN_VALIDATION_SUCCESSFUL',\n  TOKEN_VALIDATION_FAILED: 'TOKEN_VALIDATION_FAILED'\n};\n\nexport function attemptLoginAction(username, password) {\n  return {\n    type: AUTH_ACTION_TYPE.LOGIN_REQUESTED,\n    username,\n    password\n  };\n}\n\nexport function performLogoutAction(accessToken = null) {\n  return {\n    type: AUTH_ACTION_TYPE.LOGOUT,\n    accessToken\n  };\n}\n\nexport function requestLocalTokenValidationAction(accessToken) {\n  return {\n    type: AUTH_ACTION_TYPE.TOKEN_VALIDATION_REQUESTED,\n    accessToken\n  };\n}\n","import { AUTH_ACTION_TYPE } from '../actions/auth';\n\n/**\n * @file\n * This file contains the reducer for all the authentication dispatched actions.\n * When Redux dispatches an authentication-related action, it's going to be sent to this\n * reducer which changes the state in relation to the action type and content.\n */\n\nconst initialState = {\n  accessToken: null,\n  isAttemptingLogin: false,\n  isValidatingToken: false,\n  isSessionExpired: false\n};\n\nexport function auth(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_ACTION_TYPE.LOGIN_REQUESTED:\n      return {\n        ...state,\n        isAttemptingLogin: true\n      };\n    case AUTH_ACTION_TYPE.LOGIN_SUCCESSFUL:\n      return {\n        ...state,\n        accessToken: action.accessToken,\n        isAttemptingLogin: false\n      };\n    case AUTH_ACTION_TYPE.LOGIN_FAILED:\n      return {\n        ...state,\n        isAttemptingLogin: false\n      };\n\n    case AUTH_ACTION_TYPE.LOGOUT:\n      return {\n        ...initialState\n      };\n    case AUTH_ACTION_TYPE.SESSION_EXPIRED:\n      return {\n        ...state,\n        isSessionExpired: true\n      };\n    \n    case AUTH_ACTION_TYPE.TOKEN_VALIDATION_REQUESTED:\n      return {\n        ...state,\n        isValidatingToken: true\n      };\n    case AUTH_ACTION_TYPE.TOKEN_VALIDATION_SUCCESSFUL:\n      return {\n        ...state,\n        accessToken: action.accessToken,\n        isValidatingToken: false\n      };\n    case AUTH_ACTION_TYPE.LOCAL_TOKEN_NOT_FOUND:\n    case AUTH_ACTION_TYPE.TOKEN_VALIDATION_FAILED:\n      return {\n        ...state,\n        accessToken: null,\n        isValidatingToken: false\n      };\n\n    default:\n      return state;\n  }\n}\n","export const GLOBAL_ERROR_ACTION_TYPE = {\n  SAGA_ERROR: 'SAGA_ERROR'\n};\n","import { GLOBAL_ERROR_ACTION_TYPE } from '../actions/globalError';\n\nconst initialState = null;\n\n/**\n * Reducer used to report global errors, e.g. Saga failures\n */\nexport function globalError(state = initialState, action) {\n  switch (action.type) {\n    case GLOBAL_ERROR_ACTION_TYPE.SAGA_ERROR:\n      return {\n        module: 'saga'\n      };\n    default:\n      return state;\n  }\n}\n","export const USER_TYPE_ID = {\n  PROGRAMMER: 1,\n  TECHNICAL_AREA_MANAGER: 2,\n  REVISION_OFFICE_MANAGER: 3,\n  CLIENT: 4,\n};\n\n// indexes of this array match user IDs defined above\nexport const USER_ROLE_STRING = [\n  null,\n  'programmer',\n  'technicalAreaManager',\n  'revisionOfficeManager',\n  'client'\n];\n","/**\n * List of attributes which are common between commits and send requests\n */\nexport const COMMON_ELEMENT_ATTRIBUTE = {\n  ID: 'id',\n  TITLE: 'title',\n  DESCRIPTION: 'description',\n  COMPONENTS: 'components',\n  TIMESTAMP: 'timestamp',\n  UPDATE_TIMESTAMP: 'update_timestamp',\n  AUTHOR: 'author',\n  APPROVAL_STATUS: 'approval_status',\n  APPROVER: 'approver',\n  BRANCH: 'branch'\n};\n\nexport const SEND_REQUEST_ATTRIBUTE = {\n  LINKED_COMMITS: 'commits',\n  RECIPIENT_CLIENTS: 'clients',\n  INSTALL_LINK: 'install_link',\n  INSTALL_TYPE: 'install_type',\n  INSTALL_TIMESTAMP: 'install_timestamp',\n  INSTALL_STATUS: 'install_status',\n  INSTALL_FEEDBACK: 'install_comment',\n  DELIVERY_TIMESTAMP: 'send_timestamp',\n  CLIENT_REPRESENTATIVES: 'resp'\n};\n\nexport const ATTRIBUTE_LABEL = {\n  [COMMON_ELEMENT_ATTRIBUTE.ID]: 'ID',\n  [COMMON_ELEMENT_ATTRIBUTE.TITLE]: 'Titolo',\n  [COMMON_ELEMENT_ATTRIBUTE.DESCRIPTION]: 'Descrizione',\n  [COMMON_ELEMENT_ATTRIBUTE.COMPONENTS]: 'Componenti',\n  [COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP]: 'Data creazione',\n  [COMMON_ELEMENT_ATTRIBUTE.UPDATE_TIMESTAMP]: 'Data revisione',\n  [COMMON_ELEMENT_ATTRIBUTE.AUTHOR]: 'Autore',\n  [COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS]: 'Approvato',\n  [COMMON_ELEMENT_ATTRIBUTE.APPROVER]: 'Approvato da',\n  [COMMON_ELEMENT_ATTRIBUTE.BRANCH]: 'Branch',\n  [SEND_REQUEST_ATTRIBUTE.LINKED_COMMITS]: 'Commit inclusi',\n  [SEND_REQUEST_ATTRIBUTE.RECIPIENT_CLIENTS]: 'Clienti destinatari',\n  [SEND_REQUEST_ATTRIBUTE.INSTALL_LINK]: 'Link di installazione',\n  [SEND_REQUEST_ATTRIBUTE.INSTALL_TIMESTAMP]: 'Data di installazione',\n  [SEND_REQUEST_ATTRIBUTE.INSTALL_TYPE]: 'Tipo di installazione',\n  [SEND_REQUEST_ATTRIBUTE.INSTALL_STATUS]: 'Installazione effettuata',\n  [SEND_REQUEST_ATTRIBUTE.INSTALL_FEEDBACK]: 'Feedback post-installazione',\n  [SEND_REQUEST_ATTRIBUTE.DELIVERY_TIMESTAMP]: 'Inviato il',\n  [SEND_REQUEST_ATTRIBUTE.CLIENT_REPRESENTATIVES]: 'Referenti interni'\n};\n\nexport const INSTALL_TYPE = {\n  DURING_EXECUTION: 0,\n  NEEDS_SHUTDOWN: 1\n};\n\nexport const INSTALL_TYPE_LABEL = {\n  DURING_EXECUTION: 'A caldo',\n  NEEDS_SHUTDOWN: 'A freddo'\n};\n\nexport const INSTALL_STATUS = {\n  INSTALL_FAILED: -1,\n  NOT_YET_INSTALLED: 0,\n  INSTALL_SUCCESS: 1\n}\n\nexport const APPROVAL_STATUS = {\n  DELIVERED: 2,\n  APPROVED: 1,\n  PENDING: 0,\n  REJECTED: -1\n};\n\nexport const APPROVAL_STATUS_LABEL = {\n  [APPROVAL_STATUS.DELIVERED]: 'Inviato',\n  [APPROVAL_STATUS.APPROVED]: 'Approvato',\n  [APPROVAL_STATUS.PENDING]: 'In attesa',\n  [APPROVAL_STATUS.REJECTED]: 'Rifiutato'\n}","/**\n * @file\n * Includes functions used by table components to perform their operations.\n */\n\nimport { COMMON_ELEMENT_ATTRIBUTE, APPROVAL_STATUS, SEND_REQUEST_ATTRIBUTE, INSTALL_STATUS } from '../constants/elements';\n\n/**\n * Gets the filter object corresponding to the given search term.\n * The filter logic is common so we can change the behavior globally without any inconsistencies.\n * @param {*} searchQuery the searched term\n */\nexport function getSearchFilterOrDefault(searchQuery, defaultFilter = {}) {\n  if (searchQuery != null && searchQuery !== '')\n    return {\n      attribute: COMMON_ELEMENT_ATTRIBUTE.TITLE,\n      valueMatches: searchQuery\n    };\n  else return defaultFilter;\n}\n\nexport function isSearchFilter(filter) {\n  return filter.attribute === getSearchFilterOrDefault('Test query').attribute;\n}\n\nexport function getEmptySortingCriteria() {\n  return {\n    columnKey: null,\n    direction: 'desc'\n  };\n}\n\n/**\n * Used in RevisionTable and ProgrammerTable\n */\nexport function getAlreadyReviewedFilter() {\n  return {\n    attribute: COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS,\n    valueDifferentFrom: APPROVAL_STATUS.PENDING\n  };\n}\n\nexport function getToBeReviewedFilter() {\n  return {\n    attribute: COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS,\n    valueMatches: APPROVAL_STATUS.PENDING\n  };\n}\n\n/**\n * Used in DeliveryTable\n */\nexport function getToBeDeliveredFilter() {\n  return {\n    attribute: COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS,\n    valueDifferentFrom: APPROVAL_STATUS.DELIVERED\n  };\n}\n\nexport function getAlreadyDeliveredFilter() {\n  return {\n    attribute: COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS,\n    valueMatches: APPROVAL_STATUS.DELIVERED\n  };\n}\n\n/**\n * Used in ClientTable\n */\nexport function getToBeInstalledFilter() {\n  return {\n    attribute: SEND_REQUEST_ATTRIBUTE.INSTALL_STATUS,\n    valueMatches: INSTALL_STATUS.NOT_YET_INSTALLED\n  };\n}\n\nexport function getAlreadyInstalledFilter() {\n  return {\n    attribute: SEND_REQUEST_ATTRIBUTE.INSTALL_STATUS,\n    valueDifferentFrom: INSTALL_STATUS.NOT_YET_INSTALLED\n  };\n}","import { getSearchFilterOrDefault } from '../../utils/tableUtils';\n\nexport const LIST_ACTION_TYPE = {\n  // Dispatched when a page of the list needs to be loaded\n  PAGE_REQUEST: 'PAGE_REQUEST',\n\n  // Dispatched when an error occurred during a remote request to retrieve elements\n  PAGE_RETRIEVAL_ERROR: 'PAGE_LOADING_ERROR',\n\n  // Dispatched when a list page is succesfully retrieved from the server\n  PAGE_RETRIEVED_FROM_SERVER: 'PAGE_LOADED',\n\n  // Dispatched when a list page is already present locally and up-to-date\n  // and therefore doesn't need to be retrieved from server\n  NO_RETRIEVAL_NEEDED: 'NO_RETRIEVAL_NEEDED',\n\n  // Dispatched when the server responds to an update check reporting new changes\n  UPDATE_RECEIVED: 'UPDATE_RECEIVED',\n\n  // Dispatched when a list update check fails\n  UPDATE_CHECKING_ERROR: 'UPDATE_CHECKING_ERROR',\n\n  // Dispatched when the view containing the list is loaded, so that the auto updater task can start\n  START_AUTO_CHECKING: 'START_AUTO_CHECKING',\n\n  // Dispatched when the view containing the list is unmounted: stops the auto updater task\n  STOP_AUTO_CHECKING: 'STOP_AUTO_CHECKING',\n\n  // Dispatched when the search query is changed\n  SEARCH_QUERY_CHANGED: 'SEARCH_QUERY_CHANGED',\n};\n\n/**\n * This action is dispatched only when the user edits search text field and\n * therefore a new search is requested. That's why pageNumber is always 0.\n * Takes a PAGE_REQUEST action as a parameter since most of its data are used\n * (allows for better code reuse).\n */\nexport function performNewSearchAction(pageRequestAction, searchQuery) {\n  return {\n    type: LIST_ACTION_TYPE.SEARCH_QUERY_CHANGED,\n    elementType: pageRequestAction.elementType,\n    userRoleString: pageRequestAction.userRoleString,\n    pageNumber: 0,\n    limit: pageRequestAction.limit,\n    sortingCriteria: pageRequestAction.sortingCriteria,\n    filter: getSearchFilterOrDefault(searchQuery)\n  };\n}","import { AUTH_ACTION_TYPE } from '../actions/auth';\nimport { LIST_ACTION_TYPE } from '../actions/commonList';\n\nconst initialState = {\n  /*\n    listPages will contain objects with the following shape:\n    {\n      data: [],             -- the list of elements for the page\n      sorting: {},          -- the sorting criteria of the page\n      filter: {},           -- the filtering options of the page (used to display data with certain conditions)\n      updateTimestamp: 0    -- the value of state.latestUpdateTimestamp when the page was retrieved\n    }\n  */\n  listPages: [],\n  latestUpdateTimestamp: 0, // timestamp of the most recent commit, used to check if there have been updates remotely\n  totalItemsCount: 0,\n  isLoadingList: true,\n  errorWhileFetchingData: false\n};\n\n/**\n * Reducer used for the lists present in the app, regardless of the type of their elements\n */\nexport function commonListReducer(state = initialState, action) {\n  switch (action.type) {\n    case LIST_ACTION_TYPE.SEARCH_QUERY_CHANGED:\n    case LIST_ACTION_TYPE.PAGE_REQUEST:\n      return {\n        ...state,\n        errorWhileFetchingData: false,\n        isLoadingList: true\n      };\n    case LIST_ACTION_TYPE.PAGE_RETRIEVED_FROM_SERVER:\n      const newState = {\n        ...state,\n        isLoadingList: false,\n        totalItemsCount: action.serverResponse.count_total\n      };\n      newState.listPages = [...state.listPages]; // objects are not deeply copied, that would just be too painful\n      if (newState.listPages[action.pageNumber] == null)\n        newState.listPages[action.pageNumber] = {};\n      newState.listPages[action.pageNumber].data = action.serverResponse.list;\n\n      newState.listPages[action.pageNumber].sorting = action.sortingCriteria;\n      newState.listPages[action.pageNumber].filter = action.filter;\n\n      // Here we assume that the latestUpdateTimestamp value is always correctly initialized,\n      // because update checking always happens before retrieving a page\n      newState.listPages[action.pageNumber].updateTimestamp = newState.latestUpdateTimestamp;\n      return newState;\n    case LIST_ACTION_TYPE.PAGE_RETRIEVAL_ERROR:\n      return {\n        ...state,\n        errorWhileFetchingData: true,\n        isLoadingList: false\n      };\n    case LIST_ACTION_TYPE.NO_RETRIEVAL_NEEDED:\n      return {\n        ...state,\n        isLoadingList: false\n      };\n    case LIST_ACTION_TYPE.UPDATE_RECEIVED:\n      return {\n        ...state,\n        latestUpdateTimestamp: action.latestUpdateTimestamp\n      };\n    // This assumes that table is unmounted after auto checking stops.\n    // Avoids an useless re-render when loading the view again: the populated table is rendered at first but not shown,\n    // because an update check occurs and the loading skeleton is what the user actually sees firstly\n    case LIST_ACTION_TYPE.STOP_AUTO_CHECKING:\n      return {\n        ...state,\n        isLoadingList: true\n      };\n    case AUTH_ACTION_TYPE.LOGOUT:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n}\n","import { USER_ROLE_STRING, USER_TYPE_ID } from '../../constants/user';\nimport { ELEMENT_TYPE } from '../../constants/api';\nimport { commonListReducer } from './commonList';\n\nconst stateShapes = {\n  [USER_TYPE_ID.PROGRAMMER]: {\n    [ELEMENT_TYPE.COMMITS]: undefined,\n    [ELEMENT_TYPE.SEND_REQUESTS]: undefined\n  },\n  [USER_TYPE_ID.TECHNICAL_AREA_MANAGER]: {\n    [ELEMENT_TYPE.COMMITS]: undefined,\n    [ELEMENT_TYPE.SEND_REQUESTS]: undefined\n  },\n  [USER_TYPE_ID.REVISION_OFFICE_MANAGER]: {\n    [ELEMENT_TYPE.SEND_REQUESTS]: undefined\n  },\n  [USER_TYPE_ID.CLIENT]: {\n    [ELEMENT_TYPE.SEND_REQUESTS]: undefined\n  }\n};\n\n/**\n * The slice reducer generated by this function handles list-related actions for the view of the user role specified (e.g. ProgrammerView, ClientView etc.).\n * This common reducer model is designed to work with slices of state that have one or more lists (and therefore different shapes),\n * as you can see from the definition of the state shapes above.\n */\nfunction generateViewListsReducer(userTypeId) {\n  return (state = stateShapes[userTypeId], action) => {\n    if ('userRoleString' in action) {\n      if (action.userRoleString === USER_ROLE_STRING[userTypeId]) {\n        const newState = { ...state };\n        if (action.elementType === ELEMENT_TYPE.COMMITS && ELEMENT_TYPE.COMMITS in state)\n          newState[ELEMENT_TYPE.COMMITS] = commonListReducer(state[ELEMENT_TYPE.COMMITS], action);\n        else if (action.elementType === ELEMENT_TYPE.SEND_REQUESTS && ELEMENT_TYPE.SEND_REQUESTS in state)\n          newState[ELEMENT_TYPE.SEND_REQUESTS] = commonListReducer(state[ELEMENT_TYPE.SEND_REQUESTS], action);\n        return newState;\n      }\n      return state;\n    }\n    // Actions that are not view-specific must be passed in any case to sub-reducers to allow initialization\n    else {\n      const newState = {};\n      Object.keys(stateShapes[userTypeId]).forEach(key => (newState[key] = commonListReducer(state[key], action)));\n      return newState;\n    }\n  };\n}\n\n/**\n * Generates the view reducers for the user ids passed to this function.\n * @returns an object whose keys are the names of the roles given\n */\nexport function generateViewListsReducers(userTypeIds) {\n  let reducers = {};\n  userTypeIds.forEach(id => {\n    reducers[USER_ROLE_STRING[id]] = generateViewListsReducer(id);\n  });\n  return reducers;\n}\n","/**\n * @file\n * This file contains all the action creators used to get or manipulate user data.\n */\n\nexport const USER_ACTION_TYPE = {\n  GET_CURRENT_USER_INFO_REQUEST: 'GET_CURRENT_USER_INFO_REQUEST',\n  GET_CURRENT_USER_INFO_SUCCESSFUL: 'GET_CURRENT_USER_INFO_SUCCESSFUL',\n  GET_CURRENT_USER_INFO_FAILED: 'GET_CURRENT_USER_INFO_FAILED'\n};\n\nexport function requestCurrentUserInfoAction(accessToken) {\n  return {\n    type: USER_ACTION_TYPE.GET_CURRENT_USER_INFO_REQUEST,\n    accessToken\n  };\n}\n","import { AUTH_ACTION_TYPE } from '../actions/auth';\nimport { USER_ACTION_TYPE } from '../actions/user';\n\n/**\n * @file\n * This file contains the reducer for dispatched actions related to user data.\n * When Redux dispatches an user-related action, this reducer will change the\n * state in relation to the action type and content.\n */\n\nconst initialState = {\n  id: null,\n  name: null,\n  area: null,\n  email: null,\n  roles: [],\n  infoObtained: false,\n  serverError: false\n};\n\nexport function user(state = initialState, action) {\n  switch (action.type) {\n    case USER_ACTION_TYPE.GET_CURRENT_USER_INFO_REQUEST:\n      return {\n        ...state,\n        infoObtained: false,\n        serverError: false\n      };\n    case USER_ACTION_TYPE.GET_CURRENT_USER_INFO_FAILED:\n      return {\n        ...state,\n        infoObtained: false,\n        serverError: true\n      };\n    case USER_ACTION_TYPE.GET_CURRENT_USER_INFO_SUCCESSFUL:\n      return {\n        infoObtained: true,\n        serverError: false,\n        id: action.user_id,\n        name: action.name,\n        area: action.area_id != null ? {\n          id: action.area_id,\n          name: action.area_name\n        } : null,\n        email: action.email,\n        roles: action.role\n      };\n\n    // We need to wipe all user-related data when user logs out\n    // We don't want to have old values when another user logs in\n    case AUTH_ACTION_TYPE.LOGOUT:\n      return {\n        ...initialState\n      };\n\n    default:\n      return state;\n  }\n}\n","export const TECHNICAL_AREA_MANAGER_ACTION_TYPE = {\n  REVIEW_ITEM_REQUEST: 'TECH_AREA_REVIEW_ITEM_REQUEST',\n  REVIEW_ITEM_FAILED: 'TECH_AREA_REVIEW_ITEM_FAILED',\n  REVIEW_ITEM_SUCCESSFUL: 'TECH_AREA_REVIEW_ITEM_SUCCESSFUL',\n  RESET_UI: 'TECH_AREA_RESET_UI'\n};\n\nexport function reviewItemAction(elementType, elementId, approvalStatus) {\n  return {\n    type: TECHNICAL_AREA_MANAGER_ACTION_TYPE.REVIEW_ITEM_REQUEST,\n    elementType,\n    elementId,\n    approvalStatus\n  };\n}","import { TECHNICAL_AREA_MANAGER_ACTION_TYPE } from '../../actions/views/technicalAreaManager';\nimport { ELEMENT_TYPE } from '../../../constants/api';\n\nconst initialSubState = {\n  reviewInProgress: [], // contains the IDs of the items whose review is in progress\n  /* The following objects are used as a map: the key is the element ID,\n    whereas the value is the approval flag chosen by user (approved (1) or rejected(-1)) */\n  successfullyReviewed: {},\n  reviewFailed: {}\n};\n\nconst initialViewState = {\n  [ELEMENT_TYPE.COMMITS]: { ...initialSubState },\n  [ELEMENT_TYPE.SEND_REQUESTS]: { ...initialSubState }\n};\n\n// prettier-ignore\nexport function technicalAreaManagerViewReducer(state = initialViewState, action) {\n  if (action.elementType != null)\n    return { ...state, [action.elementType]: elementsReducer(state[action.elementType], action) };\n  else if (action.type === TECHNICAL_AREA_MANAGER_ACTION_TYPE.RESET_UI)\n    return initialViewState;\n  else\n    return state;\n}\n\nfunction elementsReducer(state = initialSubState, action) {\n  switch (action.type) {\n    case TECHNICAL_AREA_MANAGER_ACTION_TYPE.REVIEW_ITEM_REQUEST:\n      const newState = {\n        ...state,\n        reviewInProgress: [...state.reviewInProgress, action.elementId],\n        reviewFailed: { ...state.reviewFailed }\n      };\n      // prettier-ignore\n      if (newState.reviewFailed[action.elementId] != null)\n        delete newState.reviewFailed[action.elementId];\n      return newState;\n    case TECHNICAL_AREA_MANAGER_ACTION_TYPE.REVIEW_ITEM_SUCCESSFUL:\n      return {\n        ...state,\n        reviewInProgress: state.reviewInProgress.filter(element => element !== action.elementId),\n        successfullyReviewed: { ...state.successfullyReviewed, [action.elementId]: action.approvalStatus }\n      };\n    case TECHNICAL_AREA_MANAGER_ACTION_TYPE.REVIEW_ITEM_FAILED:\n      return {\n        ...state,\n        reviewInProgress: state.reviewInProgress.filter(element => element !== action.elementId),\n        reviewFailed: { ...state.reviewFailed, [action.elementId]: action.approvalStatus }\n      };\n    default:\n      return state;\n  }\n}\n","export const REVISION_OFFICE_MANAGER_ACTION_TYPE = {\n  ELEMENT_DELIVERY_REQUEST: 'REV_OFFICE_ELEMENT_DELIVERY_REQUEST',\n  ELEMENT_DELIVERY_SUCCESSFUL: 'REV_OFFICE_ELEMENT_DELIVERY_SUCCESSFUL',\n  ELEMENT_DELIVERY_FAILED: 'REV_OFFICE_ELEMENT_DELIVERY_FAILED',\n  RESET_FAILED_DELIVERY_FLAG: 'REV_OFFICE_RESET_FAILED_DELIVERY_FLAG',\n  RESET_UI: 'REV_OFFICE_RESET_UI'\n};\n\nexport function deliverElementAction(elementId, installLink) {\n  return {\n    type: REVISION_OFFICE_MANAGER_ACTION_TYPE.ELEMENT_DELIVERY_REQUEST,\n    elementId,\n    installLink\n  };\n}","import { REVISION_OFFICE_MANAGER_ACTION_TYPE } from '../../actions/views/revisionOfficeManager';\n\nconst initialState = {\n  successfullyDeliveredElements: [],\n  isDeliveringElement: false,\n  lastDeliveryFailed: false\n};\n\nexport function revisionOfficeManagerViewReducer(state = initialState, action) {\n  switch (action.type) {\n    case REVISION_OFFICE_MANAGER_ACTION_TYPE.ELEMENT_DELIVERY_REQUEST:\n      return {\n        ...state,\n        isDeliveringElement: true,\n        lastDeliveryFailed: false\n      };\n    case REVISION_OFFICE_MANAGER_ACTION_TYPE.ELEMENT_DELIVERY_FAILED:\n      return {\n        ...state,\n        isDeliveringElement: false,\n        lastDeliveryFailed: true\n      };\n    case REVISION_OFFICE_MANAGER_ACTION_TYPE.ELEMENT_DELIVERY_SUCCESSFUL:\n      return {\n        ...state,\n        isDeliveringElement: false,\n        lastDeliveryFailed: false,\n        successfullyDeliveredElements: [...state.successfullyDeliveredElements, action.elementId]\n      };\n    case REVISION_OFFICE_MANAGER_ACTION_TYPE.RESET_FAILED_DELIVERY_FLAG:\n      return {\n        ...state,\n        lastDeliveryFailed: initialState.lastDeliveryFailed\n      };\n    case REVISION_OFFICE_MANAGER_ACTION_TYPE.RESET_UI:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","export const PROGRAMMER_ACTION_TYPE = {\n  ADD_ELEMENT_REQUEST: 'PROGRAMMER_ADD_ELEMENT_REQUEST',\n  ADD_ELEMENT_SUCCESSFUL: 'PROGRAMMER_ADD_ELEMENT_SUCCESSFUL',\n  ADD_ELEMENT_FAILED: 'PROGRAMMER_ADD_ELEMENT_FAILED',\n\n  REMOVE_ELEMENT_REQUEST: 'PROGRAMMER_REMOVE_ELEMENT_REQUEST',\n  REMOVE_ELEMENT_SUCCESSFUL: 'PROGRAMMER_REMOVE_ELEMENT_SUCCESSFUL',\n  REMOVE_ELEMENT_FAILED: 'PROGRAMMER_REMOVE_ELEMENT_FAILED',\n\n  GET_SHORT_LIST_REQUEST: 'PROGRAMMER_GET_SHORT_LIST_REQUEST',\n  GET_SHORT_LIST_SUCCESSFUL: 'PROGRAMMER_GET_SHORT_LIST_SUCCESSFUL',\n  GET_SHORT_LIST_FAILED: 'PROGRAMMER_GET_SHORT_LIST_FAILED',\n\n  RESET_UI_STATE: 'PROGRAMMER_RESET_UI_STATE'\n};\n\nexport function addElementAction(elementType, payload) {\n  return {\n    type: PROGRAMMER_ACTION_TYPE.ADD_ELEMENT_REQUEST,\n    elementType,\n    payload\n  };\n}\n\nexport function removeElementAction(elementType, elementId) {\n  return {\n    type: PROGRAMMER_ACTION_TYPE.REMOVE_ELEMENT_REQUEST,\n    elementType,\n    elementId\n  }\n}\n\nexport function getShortListForElementAction(elementType) {\n  return {\n    type: PROGRAMMER_ACTION_TYPE.GET_SHORT_LIST_REQUEST,\n    elementType\n  };\n}\n\nexport function resetUIStateAction() {\n  return {\n    type: PROGRAMMER_ACTION_TYPE.RESET_UI_STATE\n  };\n}\n","/* eslint-disable default-case */\nimport { PROGRAMMER_ACTION_TYPE } from '../../actions/views/programmer';\nimport { ELEMENT_TYPE } from '../../../constants/api';\n\nconst initialState = {\n  isRemovingElement: false,\n  removedElementsIds: [],\n\n  isAddingElement: false,\n  isAdditionSuccessful: false,\n  isAdditionFailed: false,\n\n  isLoadingClients: false,\n  allClients: [],\n  isLoadingBranches: false,\n  allBranches: [],\n  isLoadingCommits: false,\n  allCommits: []\n};\n\nexport function programmerViewReducer(state = initialState, action) {\n  switch (action.type) {\n    case PROGRAMMER_ACTION_TYPE.ADD_ELEMENT_REQUEST:\n      return {\n        ...state,\n        isAddingElement: true,\n        isAdditionSuccessful: false,\n        isAdditionFailed: false\n      };\n    case PROGRAMMER_ACTION_TYPE.ADD_ELEMENT_SUCCESSFUL:\n      return {\n        ...state,\n        isAddingElement: false,\n        isAdditionSuccessful: true,\n        isAdditionFailed: false\n      };\n    case PROGRAMMER_ACTION_TYPE.ADD_ELEMENT_FAILED:\n      return {\n        ...state,\n        isAddingElement: false,\n        isAdditionSuccessful: false,\n        isAdditionFailed: true\n      };\n    case PROGRAMMER_ACTION_TYPE.REMOVE_ELEMENT_REQUEST:\n      return {\n        ...state,\n        isRemovingElement: true\n      };\n    case PROGRAMMER_ACTION_TYPE.REMOVE_ELEMENT_SUCCESSFUL:\n      return {\n        ...state,\n        isRemovingElement: false,\n        removedElementsIds: [...state.removedElementsIds, action.elementId]\n      };\n    case PROGRAMMER_ACTION_TYPE.REMOVE_ELEMENT_FAILED:\n      return {\n        ...state,\n        isRemovingElement: false\n      };\n    case PROGRAMMER_ACTION_TYPE.GET_SHORT_LIST_REQUEST:\n      return handleGetShortList(state, action.elementType, true);\n    case PROGRAMMER_ACTION_TYPE.GET_SHORT_LIST_SUCCESSFUL:\n      return handleGetShortListSuccessful(state, action.elementType, action.payload);\n    case PROGRAMMER_ACTION_TYPE.GET_SHORT_LIST_FAILED:\n      return handleGetShortList(state, action.elementType, false);\n    // Currently we keep removed elements ids after reset because at the moment\n    // server-side update checking mechanism isn't smart enough to detect removed elements\n    case PROGRAMMER_ACTION_TYPE.RESET_UI_STATE:\n      return {\n        ...initialState,\n        removedElementsIds: state.removedElementsIds\n      };\n    default:\n      return state;\n  }\n}\n\nfunction handleGetShortList(state, elementType, isRequest) {\n  switch (elementType) {\n    case ELEMENT_TYPE.CLIENTS:\n      return {\n        ...state,\n        isLoadingClients: isRequest,\n        allClients: []\n      };\n    case ELEMENT_TYPE.BRANCHES:\n      return {\n        ...state,\n        isLoadingBranches: isRequest,\n        allBranches: []\n      };\n    case ELEMENT_TYPE.COMMITS:\n      return {\n        ...state,\n        isLoadingCommits: isRequest,\n        allCommits: []\n      };\n  }\n}\n\nfunction handleGetShortListSuccessful(state, elementType, payload) {\n  switch (elementType) {\n    case ELEMENT_TYPE.CLIENTS:\n      return {\n        ...state,\n        isLoadingClients: false,\n        allClients: payload\n      };\n    case ELEMENT_TYPE.BRANCHES:\n      return {\n        ...state,\n        isLoadingBranches: false,\n        allBranches: payload\n      };\n    case ELEMENT_TYPE.COMMITS:\n      return {\n        ...state,\n        isLoadingCommits: false,\n        allCommits: payload\n      };\n  }\n}\n","export const CLIENT_ACTION_TYPE = {\n  SEND_FEEDBACK_REQUEST: 'CLIENT_SEND_FEEDBACK_REQUEST',\n  SEND_FEEDBACK_SUCCESSFUL: 'CLIENT_SEND_FEEDBACK_SUCCESSFUL',\n  SEND_FEEDBACK_FAILED: 'CLIENT_SEND_FEEDBACK_FAILED',\n  RESET_FAILED_FEEDBACK_FLAG: 'CLIENT_RESET_FAILED_FEEDBACK_FLAG',\n  RESET_UI: 'CLIENT_RESET_UI'\n};\n\nexport function sendFeedbackAction(elementId, installStatus, installFeedback) {\n  return {\n    type: CLIENT_ACTION_TYPE.SEND_FEEDBACK_REQUEST,\n    elementId,\n    installStatus,\n    installFeedback\n  }\n}\n","import { CLIENT_ACTION_TYPE } from '../../actions/views/client';\n\nconst initialState = {\n  successfullySentFeedbackForElements: [],\n  isSendingFeedback: false,\n  lastFeedbackFailed: false\n};\n\nexport function clientViewReducer(state = initialState, action) {\n  switch (action.type) {\n    case CLIENT_ACTION_TYPE.SEND_FEEDBACK_REQUEST:\n      return {\n        ...state,\n        isSendingFeedback: true,\n        lastFeedbackFailed: false\n      };\n    case CLIENT_ACTION_TYPE.SEND_FEEDBACK_FAILED:\n      return {\n        ...state,\n        isSendingFeedback: false,\n        lastFeedbackFailed: true\n      };\n    case CLIENT_ACTION_TYPE.SEND_FEEDBACK_SUCCESSFUL:\n      return {\n        ...state,\n        isSendingFeedback: false,\n        lastFeedbackFailed: false,\n        successfullySentFeedbackForElements: [...state.successfullySentFeedbackForElements, action.elementId]\n      };\n    case CLIENT_ACTION_TYPE.RESET_FAILED_FEEDBACK_FLAG:\n      return {\n        ...state,\n        lastFeedbackFailed: initialState.lastFeedbackFailed\n      };\n    case CLIENT_ACTION_TYPE.RESET_UI:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { auth } from './auth';\nimport { globalError } from './globalError';\nimport { generateViewListsReducers } from './viewLists';\nimport { user } from './user';\nimport { USER_TYPE_ID, USER_ROLE_STRING } from '../../constants/user';\nimport { technicalAreaManagerViewReducer } from './views/technicalAreaManager';\nimport { revisionOfficeManagerViewReducer } from './views/revisionOfficeManager';\nimport { programmerViewReducer } from './views/programmer';\nimport { clientViewReducer } from './views/client';\n\n/**\n * @file\n * This file is the root of the reducers.\n * We need to combine all the various reducers functions into one,\n * thus having a better hierarchy of the state.\n * We can sum up the hierarchy as follows:\n * |-- auth\n * |-- user\n * |-- lists\n * |   |-- programmer\n * |   |   |-- commits\n * |   |   |-- sendRequests\n * |   |-- technicalAreaManager\n * |   |   |-- commits\n * |   |-- revisionOfficeManager\n * |   |   |-- sendRequests\n * |   |-- client\n * |       |-- sendRequests (TBD)\n * |-- views\n * |   |-- technicalAreaManager\n * |   |-- revisionOfficeManager\n * |-- globalError\n * Lists reducers are generated dynamically (see viewLists.js for details).\n */\n\nconst reducers = combineReducers({\n  auth,\n  user,\n  lists: combineReducers(\n    generateViewListsReducers([\n      USER_TYPE_ID.PROGRAMMER,\n      USER_TYPE_ID.TECHNICAL_AREA_MANAGER,\n      USER_TYPE_ID.REVISION_OFFICE_MANAGER,\n      USER_TYPE_ID.CLIENT\n    ])\n  ),\n  views: combineReducers({\n    [USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]]: programmerViewReducer,\n    [USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]]: technicalAreaManagerViewReducer,\n    [USER_ROLE_STRING[USER_TYPE_ID.REVISION_OFFICE_MANAGER]]: revisionOfficeManagerViewReducer,\n    [USER_ROLE_STRING[USER_TYPE_ID.CLIENT]]: clientViewReducer\n  }),\n  globalError\n});\n\nexport default reducers;\n","/* eslint-disable default-case */\n/**\n * @file\n * This file contains helper functions used for API requests.\n */\nimport { API_ENDPOINT_URL, TOKEN_LOCALSTORAGE_KEY, API_ERROR_STRING } from '../constants/api';\nimport 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\n\nexport function makeUnauthenticatedApiRequest(requestPath, requestData = {}, timeoutInMilliseconds = 0) {\n  return makeApiRequest(requestPath, requestData, timeoutInMilliseconds);\n}\n\nexport function makeAuthenticatedApiRequest(requestPath, accessToken, requestData = {}, timeoutInMilliseconds = 0) {\n  return makeApiRequest(requestPath, requestData, timeoutInMilliseconds, accessToken);\n}\n\nfunction makeApiRequest(requestPath, requestData, timeoutInMilliseconds, accessToken = null) {\n  const requestUrl = `${API_ENDPOINT_URL}/${requestPath}`;\n  const init = buildFetchInitParameter(requestData, accessToken);\n\n  let fetchPromise;\n  // prettier-ignore\n  if (timeoutInMilliseconds > 0)\n    fetchPromise = fetchWithTimeout(requestUrl, init, timeoutInMilliseconds);\n  else\n    fetchPromise = fetch(requestUrl, init);\n\n  return fetchPromise.catch(error => {\n    printRequestErrorMessage(error, requestPath);\n    return null;\n  });\n}\n\nfunction buildFetchInitParameter(requestData, accessToken) {\n  const headers = { 'Content-Type': 'application/json' };\n  if (accessToken != null)\n    headers['X-Auth-Header'] = accessToken;\n\n  return {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({ request_data: requestData })\n  };\n}\n\nfunction fetchWithTimeout(requestUrl, init, timeoutInMilliseconds) {\n  const abortController = new AbortController();\n  const abortSignal = abortController.signal;\n\n  setTimeout(() => abortController.abort(), timeoutInMilliseconds);\n\n  return fetch(requestUrl, { ...init, signal: abortSignal });\n}\n\n// prettier-ignore\nfunction printRequestErrorMessage(error, requestPath) {\n  if (error.name === 'AbortError')\n    console.error(`API request to ${requestPath} aborted due to timeout`);\n  else\n    console.error(error, `occurred during API request to ${requestPath}`);\n}\n\n/**\n * Gets the API relative path to make a specified operation on the list of the given type\n * @param {*} elementType One of the elements contained in ELEMENT_TYPE\n * @param {*} requestType One of the following: add, list, update, approve\n */\nexport function getRequestPath(elementType, requestType) {\n  return elementType + `/${requestType}`;\n}\n\nexport function getUIMessageForErrorString(errorString) {\n  switch (errorString) {\n    case API_ERROR_STRING.DB_ERROR:\n      return \"Errore interno del server. Contatta l'amministratore di sistema.\";\n    case API_ERROR_STRING.INVALID_REQUEST:\n      return 'Richiesta non valida. Assicurati che tutti i campi siano presenti.';\n    case API_ERROR_STRING.INVALID_CREDENTIALS:\n      return 'Credenziali non valide.';\n    case API_ERROR_STRING.UNAUTHORIZED:\n      return \"Non sei autorizzato ad effettuare l'operazione.\";\n    case API_ERROR_STRING.INVALID_ID:\n      return \"L'operazione non può essere effettuata sull'elemento specificato.\";\n    case API_ERROR_STRING.REMOVE_COMMIT_ALREADY_INCLUDED:\n      return 'Il commit è già referenziato in una richiesta di invio.';\n    case API_ERROR_STRING.APPROVE_ALREADY_APPROVED:\n    case API_ERROR_STRING.REMOVE_ALREADY_APPROVED:\n      return \"L'elemento è già stato revisionato.\";\n    case API_ERROR_STRING.SEND_NOT_APPROVED:\n      return 'La richiesta non è ancora stata approvata.';\n    case API_ERROR_STRING.INSTALL_NOT_SENT:\n      return \"L'aggiornamento non è ancora stato inviato.\";\n    case API_ERROR_STRING.LIST_INVALID_PARAMETER:\n      return 'Parametri di filtraggio della lista non validi.';\n    case API_ERROR_STRING.SERVER_IN_MAINTENANCE:\n      return 'Il server è in manutenzione. Riprova più tardi.';\n    default:\n      return errorString;\n  }\n}\n\nexport function saveAccessTokenToLocalStorage(accessToken) {\n  console.log('Saving access token to local storage');\n  try {\n    localStorage.setItem(TOKEN_LOCALSTORAGE_KEY, accessToken);\n  } catch (err) {\n    console.error(`Unable to save access token in local storage: ${err}`);\n  }\n}\n\nexport function removeAccessTokenFromLocalStorage() {\n  console.log('Removing access token from local storage');\n  try {\n    localStorage.removeItem(TOKEN_LOCALSTORAGE_KEY);\n  } catch (err) {\n    console.error(`Unable to remove access token from local storage: ${err}`);\n  }\n}\n","import { put, select } from 'redux-saga/effects';\nimport {\n  makeAuthenticatedApiRequest,\n  makeUnauthenticatedApiRequest,\n  getUIMessageForErrorString\n} from '../../utils/apiUtils';\nimport { AUTH_ACTION_TYPE } from '../actions/auth';\nimport { REQUEST_TIMEOUT_MS } from '../../constants/api';\n\n/**\n * These classes allow us to perform API requests in Saga in a much cleaner and more elegant way,\n * hiding the complexity of makeRequestAndReportErrors() (see below).\n */\n\n/* abstract */ class ApiRequest {\n  constructor(requestPath) {\n    this.requestPath = requestPath;\n  }\n\n  setRequestData(requestData) {\n    this.requestData = requestData;\n    return this;\n  }\n\n  setErrorAction(errorAction) {\n    this.errorAction = errorAction;\n    return this;\n  }\n\n  /* abstract *makeAndReportErrors(); */\n  /* abstract *makeWithTimeoutAndReportErrors(); */\n}\n\nexport class AuthenticatedApiRequest extends ApiRequest {\n  *makeAndReportErrors() {\n    const accessToken = yield getAccessTokenFromState();\n    return yield makeRequestAndReportErrors(this.requestPath, this.requestData, this.errorAction, accessToken);\n  }\n\n  *makeWithTimeoutAndReportErrors() {\n    const accessToken = yield getAccessTokenFromState();\n    return yield makeRequestAndReportErrors(\n      this.requestPath,\n      this.requestData,\n      this.errorAction,\n      accessToken,\n      REQUEST_TIMEOUT_MS\n    );\n  }\n}\n\nexport class UnauthenticatedApiRequest extends ApiRequest {\n  *makeAndReportErrors() {\n    return yield makeRequestAndReportErrors(this.requestPath, this.requestData, this.errorAction);\n  }\n\n  *makeWithTimeoutAndReportErrors() {\n    return yield makeRequestAndReportErrors(\n      this.requestPath,\n      this.requestData,\n      this.errorAction,\n      null,\n      REQUEST_TIMEOUT_MS\n    );\n  }\n}\n\nfunction* getAccessTokenFromState() {\n  const accessToken = yield select(state => state.auth.accessToken);\n  // prettier-ignore\n  if (accessToken == null)\n    throw new Error('User must be logged in to perform an authenticated request.');\n\n  return accessToken;\n}\n\n/**\n * Performs an API request to the specified path, dispatching the given Redux action in case of errors\n * with an errorMessage attribute injected in it.\n * Dispatches a SESSION_EXPIRED action when the server responds with code 401 (unauthorized)\n * to an authenticated request, which means that the token is expired.\n * Returns null if there were any errors, otherwise the parsed response data object.\n */\nfunction* makeRequestAndReportErrors(\n  requestPath,\n  requestData = null,\n  errorAction = null,\n  accessToken = null,\n  timeoutInMilliseconds = 0\n) {\n  let response;\n  // prettier-ignore\n  if (accessToken == null)\n    response = yield makeUnauthenticatedApiRequest(requestPath, requestData, timeoutInMilliseconds);\n  else\n    response = yield makeAuthenticatedApiRequest(requestPath, accessToken, requestData, timeoutInMilliseconds);\n\n  if (response == null) {\n    yield put({ ...errorAction, errorMessage: 'Richiesta al server fallita, possibile problema di connessione' });\n    return null;\n  }\n\n  const responseJson = yield parseResponseJsonAndReportError(response, errorAction);\n  // prettier-ignore\n  if (responseJson == null)\n    return null;\n\n  // prettier-ignore\n  if (!response.ok) {\n    if (accessToken != null && response.status === 401)\n      yield put({ type: AUTH_ACTION_TYPE.SESSION_EXPIRED });\n    else if (errorAction != null)\n      yield put({ ...errorAction, errorMessage: getUIMessageForErrorString(responseJson.error) });\n\n    console.error(`Server responded with ${responseJson.error} to ${requestPath} request: ${responseJson.message}`);\n    return null;\n  }\n\n  return responseJson.response_data;\n}\n\nfunction* parseResponseJsonAndReportError(response, errorAction) {\n  try {\n    const responseJson = yield response.json();\n    return responseJson;\n  } catch (err) {\n    yield put({\n      ...errorAction,\n      errorMessage:\n        \"È stata ricevuta una risposta contenente dati errati dal server. Contatta l'amministratore di sistema.\"\n    });\n    console.error('Error when parsing JSON response from server: ', err);\n    return null;\n  }\n}\n","import { fork, put, select, take } from 'redux-saga/effects';\nimport { REQUEST_ENDPOINT_PATH, REQUEST_TIMEOUT_MS } from '../../constants/api';\nimport {\n  makeAuthenticatedApiRequest,\n  removeAccessTokenFromLocalStorage,\n  saveAccessTokenToLocalStorage\n} from '../../utils/apiUtils';\nimport { AUTH_ACTION_TYPE } from '../actions/auth';\nimport { USER_ACTION_TYPE } from '../actions/user';\nimport { AuthenticatedApiRequest, UnauthenticatedApiRequest } from './api';\n\n/**\n * This function describes the order in which Saga must listen the dispatch of authentication-related\n * Redux actions and how it must behave according to them.\n * This function can be seen as a continuous background thread, which manages login/logout behavior\n * and makes API requests to the server.\n * The instruction flow may be summed up as follows:\n *   - watch for previous token validation request (only the first time)\n *   - if the token wasn't valid (the user hasn't been logged in), watch for login request\n *   - if login fails, continue watching for login requests\n *   - if login is successful, watch for current user info request\n *   - watch for logout request (whatever the result of the step above is)\n *   - when the user logs out, watch for subsequent login requests\n *   - and the loop continues...\n */\nexport function* authFlowSaga() {\n  // Application startup: request local token validation to the server if it has been found\n  const tokenAction = yield take([AUTH_ACTION_TYPE.TOKEN_VALIDATION_REQUESTED, AUTH_ACTION_TYPE.LOCAL_TOKEN_NOT_FOUND]);\n  if (tokenAction.type === AUTH_ACTION_TYPE.TOKEN_VALIDATION_REQUESTED)\n    yield requestLocalAccessTokenValidation(tokenAction);\n  // prettier-ignore\n  else\n    console.log('Previously saved access token not found');\n\n  let userLoggedIn = (yield select(state => state.auth.accessToken)) != null;\n  while (true) {\n    if (!userLoggedIn) {\n      const loginRequestAction = yield take(AUTH_ACTION_TYPE.LOGIN_REQUESTED);\n      const loginRequest = new UnauthenticatedApiRequest(REQUEST_ENDPOINT_PATH.LOGIN)\n        .setRequestData({\n          username: loginRequestAction.username,\n          password: loginRequestAction.password\n        })\n        .setErrorAction({ type: AUTH_ACTION_TYPE.LOGIN_FAILED });\n\n      const loginResponseData = yield loginRequest.makeWithTimeoutAndReportErrors();\n      if (loginResponseData != null) {\n        yield put({\n          type: AUTH_ACTION_TYPE.LOGIN_SUCCESSFUL,\n          accessToken: loginResponseData.token\n        });\n        console.log('Login successful');\n        saveAccessTokenToLocalStorage(loginResponseData.token);\n        userLoggedIn = true;\n      }\n    }\n\n    // Once the user has logged in, its information are requested to the server.\n    // If this process fails, the user can choose to retry or log out.\n    // That's why we watch for logout and user info request actions as long as the user is logged in.\n    while (userLoggedIn) {\n      const action = yield take([USER_ACTION_TYPE.GET_CURRENT_USER_INFO_REQUEST, AUTH_ACTION_TYPE.LOGOUT]);\n      if (action.type === USER_ACTION_TYPE.GET_CURRENT_USER_INFO_REQUEST) {\n        const userInfoRequest = new AuthenticatedApiRequest(REQUEST_ENDPOINT_PATH.GET_USER_INFO)\n          .setErrorAction({ type: USER_ACTION_TYPE.GET_CURRENT_USER_INFO_FAILED });\n\n        const userInfoResponseData = yield userInfoRequest.makeWithTimeoutAndReportErrors();\n        if (userInfoResponseData != null) {\n          yield put({\n            type: USER_ACTION_TYPE.GET_CURRENT_USER_INFO_SUCCESSFUL,\n            ...userInfoResponseData\n          });\n          console.log('User info retrieved successfully');\n        }\n      } else {\n        // accessToken is null in LOGOUT action when server logout notification is not needed (token already expired)\n        // prettier-ignore\n        if (action.accessToken != null)\n          yield notifyLogoutToServerAsync(action.accessToken);\n\n        removeAccessTokenFromLocalStorage();\n        userLoggedIn = false;\n      }\n    }\n  }\n}\n\n/**\n * Called when the user logs out\n * Notifies asynchronously the server that the user has logged out, so that it can invalidate the token\n */\nfunction* notifyLogoutToServerAsync(accessToken) {\n  const logoutNotificationTask = yield fork(makeAuthenticatedApiRequest, REQUEST_ENDPOINT_PATH.LOGOUT, accessToken);\n\n  // prettier-ignore\n  logoutNotificationTask.toPromise().then(response => {\n    if (response == null)\n      console.error('Error during logout notification request to server');\n    else if (response.ok)\n      console.log('Logout notification successful');\n    else\n      console.error(`Server responded with an error after logout notification: ${response.statusText}`);\n  });\n}\n\n/**\n * Executed if a token is found in localStorage\n * Asks the server if the found token is still valid\n */\nfunction* requestLocalAccessTokenValidation(action) {\n  const validationResponse = yield makeAuthenticatedApiRequest(\n    REQUEST_ENDPOINT_PATH.VALIDATE_TOKEN,\n    action.accessToken,\n    null,\n    REQUEST_TIMEOUT_MS\n  );\n\n  if (validationResponse != null && validationResponse.ok) {\n    yield put({\n      type: AUTH_ACTION_TYPE.TOKEN_VALIDATION_SUCCESSFUL,\n      accessToken: action.accessToken\n    });\n    console.log('Local access token is valid');\n  } else {\n    yield put({ type: AUTH_ACTION_TYPE.TOKEN_VALIDATION_FAILED });\n    removeAccessTokenFromLocalStorage();\n  }\n}\n","import { actionChannel, cancel, cancelled, delay, fork, put, select, take, takeLatest } from 'redux-saga/effects';\nimport {\n  LIST_AUTO_UPDATE_INTERVAL_MS,\n  LIST_ELEMENTS_PER_PAGE,\n  SEARCH_DEBOUNCE_DELAY_MS,\n  ELEMENT_ENDPOINT_TYPE\n} from '../../constants/api';\nimport { getRequestPath } from '../../utils/apiUtils';\nimport { LIST_ACTION_TYPE } from '../actions/commonList';\nimport { AuthenticatedApiRequest } from './api';\nimport { strictDebounce } from './utils';\n\n/**\n * Retrieves the list of elements for the requested page if needed\n * Before fetching, it checks for updates in order to ensure that the most recent version\n * of the page is fetched if we have an older version cached\n * @param {*} action Action of type PAGE_REQUEST\n */\nfunction* retrieveListPage(action) {\n  yield checkForListUpdates(action);\n\n  const listState = yield select(state => state.lists[action.userRoleString][action.elementType]);\n  if (pageNeedsToBeFetched(listState, action)) {\n    const pageRequest = new AuthenticatedApiRequest(getRequestPath(action.elementType, ELEMENT_ENDPOINT_TYPE.LIST))\n      .setRequestData({\n        page: action.pageNumber,\n        limit: LIST_ELEMENTS_PER_PAGE,\n        sort:\n          action.sortingCriteria.columnKey == null\n            ? {}\n            : {\n                parameter: action.sortingCriteria.columnKey,\n                order: action.sortingCriteria.direction\n              },\n        filter: [action.filter],\n\n        // this is used by server only for sendRequests list, in order to give us\n        // only the requests which must be shown in that particular view\n        role: action.userRoleString\n      })\n      .setErrorAction({\n        type: LIST_ACTION_TYPE.PAGE_RETRIEVAL_ERROR,\n        elementType: action.elementType,\n        userRoleString: action.userRoleString\n      });\n\n    const pageResponseData = yield pageRequest.makeWithTimeoutAndReportErrors();\n    if (pageResponseData != null) {\n      yield put({\n        type: LIST_ACTION_TYPE.PAGE_RETRIEVED_FROM_SERVER,\n        elementType: action.elementType,\n        userRoleString: action.userRoleString,\n        serverResponse: pageResponseData,\n        // if we asked for a non-existing page, the server gives us the last page\n        pageNumber: pageResponseData.page,\n        sortingCriteria: action.sortingCriteria,\n        filter: action.filter\n      });\n    }\n  } else {\n    yield put({\n      type: LIST_ACTION_TYPE.NO_RETRIEVAL_NEEDED,\n      elementType: action.elementType,\n      userRoleString: action.userRoleString\n    });\n  }\n}\n\nfunction pageNeedsToBeFetched(listState, action) {\n  const requestedPageAlreadyFetched = action.pageNumber in listState.listPages;\n  // prettier-ignore\n  if (!requestedPageAlreadyFetched)\n    return true;\n\n  const latestUpdateTimestamp = listState.latestUpdateTimestamp;\n  const currentPageState = listState.listPages[action.pageNumber];\n\n  const requestedPageNotUpdated = currentPageState.updateTimestamp < latestUpdateTimestamp;\n  const pageSortingCriteriaIsDifferent =\n    action.sortingCriteria.columnKey !== currentPageState.sorting.columnKey ||\n    action.sortingCriteria.direction !== currentPageState.sorting.direction;\n  const pageFilteringIsDifferent =\n    action.filter.attribute !== currentPageState.filter.attribute ||\n    action.filter.valueMatches !== currentPageState.filter.valueMatches ||\n    action.filter.valueDifferentFrom !== currentPageState.filter.valueDifferentFrom;\n\n  return requestedPageNotUpdated || pageSortingCriteriaIsDifferent || pageFilteringIsDifferent;\n}\n\n/**\n * Checks if there have been any server-side updates to the list by\n * sending the timestamp of the latest retrieved element.\n * It updates the state accordingly if the server confirms the presence of updates\n * @param {*} latestUpdateTimestamp timestamp of the latest retrieved element\n * @param {*} action Action of type START_AUTO_CHECKING or PAGE_REQUEST\n */\nexport function* checkForListUpdates(action) {\n  console.log(`Checking for ${action.userRoleString}.${action.elementType} updates...`);\n\n  const latestUpdateTimestamp = yield select(\n    state => state.lists[action.userRoleString][action.elementType].latestUpdateTimestamp\n  );\n\n  const updateRequest = new AuthenticatedApiRequest(getRequestPath(action.elementType, ELEMENT_ENDPOINT_TYPE.UPDATE))\n    .setRequestData({\n      latest_update_timestamp: latestUpdateTimestamp,\n      section: action.userRoleString\n    })\n    .setErrorAction({\n      type: LIST_ACTION_TYPE.UPDATE_CHECKING_ERROR,\n      elementType: action.elementType,\n      userRoleString: action.userRoleString\n    });\n\n  const updateResponseData = yield updateRequest.makeWithTimeoutAndReportErrors();\n  if (updateResponseData != null) {\n    if (updateResponseData.updates_found)\n      yield put({\n        type: LIST_ACTION_TYPE.UPDATE_RECEIVED,\n        userRoleString: action.userRoleString,\n        elementType: action.elementType,\n        latestUpdateTimestamp: updateResponseData.latest_update_timestamp\n      });\n    // prettier-ignore\n    else\n      console.log(`No ${action.elementType} list updates found`);\n  }\n}\n\n/**\n * Dispatches and stops update checking tasks according to the actions dispatched.\n * Uses a channel to watch for actions START_AUTO_CHECKING and STOP_AUTO_CHECKING: in this way\n * incoming actions can be enqueued in a buffer while the saga handles the current one (nullifies\n * the chance of losing an action, which is very unlikely without a buffer anyway).\n */\nfunction* manageUpdateCheckingTasks() {\n  const actionsChannel = yield actionChannel([\n    LIST_ACTION_TYPE.START_AUTO_CHECKING,\n    LIST_ACTION_TYPE.STOP_AUTO_CHECKING\n  ]);\n\n  // Contains the update checking tasks. They are uniquely identified by the name of the view\n  // (which equals to the user role) and the type of the elements (commits or send requests).\n  // This assumes that there can't be more than an update checking task for the same list in the same view\n  const updateCheckingTasks = {};\n\n  // prettier-ignore\n  while (true) {\n    const action = yield take(actionsChannel);\n    const taskKey = `${action.userRoleString}.${action.elementType}`;\n\n    if (action.type === LIST_ACTION_TYPE.START_AUTO_CHECKING) {\n      if (updateCheckingTasks[taskKey] == null)\n        updateCheckingTasks[taskKey] = yield fork(() => runListUpdateChecker(action));\n      else\n        console.error(`There is another update checking task running for ${taskKey}`);\n    }\n    else if (action.type === LIST_ACTION_TYPE.STOP_AUTO_CHECKING) {\n      if (updateCheckingTasks[taskKey] != null) {\n        yield cancel(updateCheckingTasks[taskKey]);\n        updateCheckingTasks[taskKey] = null;\n      }\n      else\n        console.error('Tried to stop an unexisting update checking task.');\n    }\n  }\n}\n\n/**\n * Performs automatic update checking for the list\n * every LIST_AUTO_UPDATE_INTERVAL_MS milliseconds\n * @param {*} action Action of type START_AUTO_CHECKING\n */\nfunction* runListUpdateChecker(action) {\n  try {\n    console.log(`Auto update checking started for ${action.userRoleString}.${action.elementType}`);\n    // prettier-ignore\n    while (true) {\n      yield delay(LIST_AUTO_UPDATE_INTERVAL_MS);\n      const listState = yield select(state => state.lists[action.userRoleString][action.elementType]);\n      if (isListStateInitialized(listState) && !isPageLoading(listState))\n        yield checkForListUpdates(action);\n    }\n  } finally {\n    if (yield cancelled())\n      console.log(`Auto update checking stopped for ${action.userRoleString}.${action.elementType}`);\n    // prettier-ignore\n    else\n      console.error(`Unexpected error during ${action.userRoleString}.${action.elementType} auto updating task`);\n  }\n}\n\nfunction isListStateInitialized(listState) {\n  return listState != null;\n}\n\nfunction isPageLoading(listState) {\n  return listState.isLoadingList;\n}\n\nexport const listSagas = [\n  manageUpdateCheckingTasks(),\n  takeLatest(LIST_ACTION_TYPE.PAGE_REQUEST, retrieveListPage),\n  strictDebounce(SEARCH_DEBOUNCE_DELAY_MS, LIST_ACTION_TYPE.SEARCH_QUERY_CHANGED, retrieveListPage)\n];\n","import { cancel, delay, fork, race, take } from 'redux-saga/effects';\n\n/**\n * A variation of Saga's debounce effect which cancels the task that has been executed\n * after the previous debounce if it's still running.\n * This can be seen as a mix between Saga's takeLatest and debounce effects.\n * Implementation based on the code found at https://redux-saga.js.org/docs/api/#debouncems-pattern-saga-args.\n */\nexport function strictDebounce(milliseconds, sagaPattern, task, ...taskArgs) {\n  return fork(function*() {\n    let lastExecutedTask;\n    while (true) {\n      let latestAction = yield take(sagaPattern);\n      if (lastExecutedTask)\n        yield cancel(lastExecutedTask);\n\n      let debounced = false;\n      while (!debounced) {\n        let latestActionIfNotDebounced;\n        [debounced, latestActionIfNotDebounced] = yield race([delay(milliseconds), take(sagaPattern)]);\n\n        if (debounced)\n          lastExecutedTask = yield fork(task, ...taskArgs, latestAction);\n        else\n          latestAction = latestActionIfNotDebounced;\n      }\n    }\n  });\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { getRequestPath } from '../../../utils/apiUtils';\nimport { TECHNICAL_AREA_MANAGER_ACTION_TYPE } from '../../actions/views/technicalAreaManager';\nimport { AuthenticatedApiRequest } from '../api';\n\n/**\n * Performs approval of rejection of the commit/send request passed through the action\n * @param {*} action action of type ELEMENT_REVIEW_REQUEST\n */\nfunction* reviewListElement(action) {\n  const request = new AuthenticatedApiRequest(getRequestPath(action.elementType, 'approve'))\n    .setRequestData({\n      id: action.elementId,\n      approve_flag: action.approvalStatus\n    })\n    .setErrorAction({\n      ...action,\n      type: TECHNICAL_AREA_MANAGER_ACTION_TYPE.REVIEW_ITEM_FAILED\n    });\n\n  const reviewResponseData = yield request.makeAndReportErrors();\n  if (reviewResponseData != null) {\n    console.log(`Element ${action.elementId} reviewed successfully`);\n    yield put({\n      ...action,\n      type: TECHNICAL_AREA_MANAGER_ACTION_TYPE.REVIEW_ITEM_SUCCESSFUL\n    });\n  }\n}\n\nexport const technicalAreaManagerSagas = [\n  takeEvery(TECHNICAL_AREA_MANAGER_ACTION_TYPE.REVIEW_ITEM_REQUEST, reviewListElement)\n];\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { ELEMENT_ENDPOINT_TYPE } from '../../../constants/api';\nimport { getRequestPath } from '../../../utils/apiUtils';\nimport { PROGRAMMER_ACTION_TYPE } from '../../actions/views/programmer';\nimport { AuthenticatedApiRequest } from '../api';\nimport { checkForListUpdates } from '../commonList';\nimport { USER_ROLE_STRING, USER_TYPE_ID } from '../../../constants/user';\n\n/**\n * Adds a new element that could be a send request or a commit. Dispatches the successful action to notify\n * the dialog that the addition has been successfully performed, otherwise it will dispatch a failed\n * action to notify the dialog of the problem that just occurred.\n * @param {*} action\n */\nfunction* addElement(action) {\n  const request = new AuthenticatedApiRequest(getRequestPath(action.elementType, ELEMENT_ENDPOINT_TYPE.ADD))\n    .setRequestData({ ...action.payload })\n    .setErrorAction({ type: PROGRAMMER_ACTION_TYPE.ADD_ELEMENT_FAILED });\n\n  const addElementResponseData = yield request.makeAndReportErrors();\n  if (addElementResponseData != null) {\n    yield put({ type: PROGRAMMER_ACTION_TYPE.ADD_ELEMENT_SUCCESSFUL });\n\n    yield checkForListUpdates({\n      elementType: action.elementType,\n      userRoleString: USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]\n    });\n  }\n}\n\nfunction* removeElement(action) {\n  const request = new AuthenticatedApiRequest(getRequestPath(action.elementType, ELEMENT_ENDPOINT_TYPE.REMOVE))\n    .setRequestData({ id: action.elementId })\n    .setErrorAction({ type: PROGRAMMER_ACTION_TYPE.REMOVE_ELEMENT_FAILED });\n\n  const addElementResponseData = yield request.makeAndReportErrors();\n  if (addElementResponseData != null) {\n    yield put({\n      type: PROGRAMMER_ACTION_TYPE.REMOVE_ELEMENT_SUCCESSFUL,\n      elementId: action.elementId\n    });\n\n    yield checkForListUpdates({\n      elementType: action.elementType,\n      userRoleString: USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]\n    });\n  }\n}\n\n/**\n * Gets the short list of the elements of a specific type (clients, branches, commits) that belong to a specific user.\n * If the request is successful we will dispatch an action to notify and send the data received to the subscribed components.\n * In this case we are going to use this data to populate the react-select textfields.\n * @param {*} action\n */\nfunction* getShortListForElement(action) {\n  const request = new AuthenticatedApiRequest(\n    getRequestPath(action.elementType, ELEMENT_ENDPOINT_TYPE.SHORT_LIST)\n  ).setErrorAction({ type: PROGRAMMER_ACTION_TYPE.GET_SHORT_LIST_FAILED });\n\n  const shortListResponseData = yield request.makeAndReportErrors();\n  if (shortListResponseData != null) {\n    console.log(action.elementType + ' short list successfully loaded');\n    yield put({\n      type: PROGRAMMER_ACTION_TYPE.GET_SHORT_LIST_SUCCESSFUL,\n      elementType: action.elementType,\n      payload: shortListResponseData\n    });\n  }\n}\n\nexport const programmerSagas = [\n  takeEvery(PROGRAMMER_ACTION_TYPE.ADD_ELEMENT_REQUEST, addElement),\n  takeEvery(PROGRAMMER_ACTION_TYPE.REMOVE_ELEMENT_REQUEST, removeElement),\n  takeEvery(PROGRAMMER_ACTION_TYPE.GET_SHORT_LIST_REQUEST, getShortListForElement)\n];\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { getRequestPath } from '../../../utils/apiUtils';\nimport { AuthenticatedApiRequest } from '../api';\nimport { REVISION_OFFICE_MANAGER_ACTION_TYPE } from '../../actions/views/revisionOfficeManager';\nimport { ELEMENT_TYPE } from '../../../constants/api';\n\n/**\n * Performs an API request to deliver the specified send request to its recipient clients\n * @param {*} action action of type REV_OFFICE_ELEMENT_DELIVERY_REQUEST\n */\nfunction* deliverSendRequest(action) {\n  const request = new AuthenticatedApiRequest(getRequestPath(ELEMENT_TYPE.SEND_REQUESTS, 'send'))\n    .setRequestData({\n      id: action.elementId,\n      install_link: action.installLink\n    })\n    .setErrorAction({\n      type: REVISION_OFFICE_MANAGER_ACTION_TYPE.ELEMENT_DELIVERY_FAILED,\n      elementId: action.elementId\n    });\n\n  const responseData = yield request.makeAndReportErrors();\n  if (responseData != null) {\n    yield put({\n      type: REVISION_OFFICE_MANAGER_ACTION_TYPE.ELEMENT_DELIVERY_SUCCESSFUL,\n      elementId: action.elementId\n    });\n  }\n}\n\nexport const revisionOfficeManagerSagas = [\n  takeEvery(REVISION_OFFICE_MANAGER_ACTION_TYPE.ELEMENT_DELIVERY_REQUEST, deliverSendRequest)\n];\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { getRequestPath } from '../../../utils/apiUtils';\nimport { AuthenticatedApiRequest } from '../api';\nimport { CLIENT_ACTION_TYPE } from '../../actions/views/client';\nimport { ELEMENT_TYPE } from '../../../constants/api';\n\nfunction* sendInstallFeedback(action) {\n  const request = new AuthenticatedApiRequest(getRequestPath(ELEMENT_TYPE.SEND_REQUESTS, 'install'))\n    .setRequestData({\n      id: action.elementId,\n      install_status: action.installStatus,\n      feedback: action.installFeedback\n    })\n    .setErrorAction({\n      type: CLIENT_ACTION_TYPE.SEND_FEEDBACK_FAILED,\n      elementId: action.elementId\n    });\n\n  const responseData = yield request.makeAndReportErrors();\n  if (responseData != null) {\n    yield put({\n      type: CLIENT_ACTION_TYPE.SEND_FEEDBACK_SUCCESSFUL,\n      elementId: action.elementId\n    });\n  }\n}\n\nexport const clientSagas = [takeEvery(CLIENT_ACTION_TYPE.SEND_FEEDBACK_REQUEST, sendInstallFeedback)];\n","import { all, put } from 'redux-saga/effects';\nimport { GLOBAL_ERROR_ACTION_TYPE } from '../actions/globalError';\nimport { authFlowSaga } from './auth';\nimport { listSagas } from './commonList';\nimport { technicalAreaManagerSagas } from './views/technicalAreaManager';\nimport { programmerSagas } from './views/programmer';\nimport { revisionOfficeManagerSagas } from './views/revisionOfficeManager';\nimport { clientSagas } from './views/client';\n\n/**\n * @file\n * This file is the root of the Saga implementation in the app.\n * Saga allows us to perform side-effects asynchronously in response to\n * the dispatch of a Redux action.\n * Here we combine all the sagas related to a specific app part,\n * following the same hierarchy as the actions and reducers.\n */\n\nexport default function* rootSaga() {\n  try {\n    yield all([\n      authFlowSaga(),\n      ...listSagas,\n      ...programmerSagas,\n      ...technicalAreaManagerSagas,\n      ...revisionOfficeManagerSagas,\n      ...clientSagas\n    ]);\n  } finally {\n    // Since some of the functions passed to all() method never end (endless loop),\n    // this finally block is reached only when there's an uncaught exception in a saga\n    // (since all() is aborted when one of the passed functions/effects fails)\n    yield put({ type: GLOBAL_ERROR_ACTION_TYPE.SAGA_ERROR });\n  }\n}\n","import React from 'react';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';  \nimport reducers from './reducers';\nimport rootSaga from './sagas';\nimport { withSnackbar } from 'notistack';\nimport { Provider } from 'react-redux';\nimport { createNotistackMiddleware } from './notistackMiddleware';\n\n/**\n * @file\n * This file contains helper methods to create the Redux store.\n * We bind together reducers, state and all the needed middlewares.\n */\n\nfunction configureStore(notistackCallback) {\n  const composeWithDevToolsIfPresent = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const saga = createSagaMiddleware();\n  const notistack = createNotistackMiddleware(notistackCallback);\n  const store = createStore(\n    reducers,\n    composeWithDevToolsIfPresent(applyMiddleware(saga, notistack))\n  );\n  saga.run(rootSaga);\n\n  return store;\n}\n\n/**\n * This component wraps the Redux store provider in a withSnackbar() HOC so that the configureStore\n * function can get notistack's enqueueSnackbar function (needed for our custom middleware).\n */\nfunction EnhancedStoreProvider(props) {\n  return (\n    <Provider store={configureStore(props.enqueueSnackbar)}>\n      {props.children}\n    </Provider>\n  )\n}\n\nexport default withSnackbar(EnhancedStoreProvider);","/* eslint-disable default-case */\nimport { LIST_ACTION_TYPE } from './actions/commonList';\nimport { ELEMENT_TYPE } from '../constants/api';\nimport { AUTH_ACTION_TYPE } from './actions/auth';\nimport { PROGRAMMER_ACTION_TYPE } from './actions/views/programmer';\nimport { TECHNICAL_AREA_MANAGER_ACTION_TYPE } from './actions/views/technicalAreaManager';\n\n/**\n * Returns the middleware function created using the given notistack's enqueueSnackbar function.\n * This Redux middleware displays snackbars according to the dispatched action. Then forwards\n * the action to the reducer.\n * To learn more about how middlewares work head to https://redux.js.org/advanced/middleware\n */\nexport function createNotistackMiddleware(enqueueSnackbar) {\n  return ({ getState, dispatch }) => next => action => {\n    switch (action.type) {\n      case LIST_ACTION_TYPE.UPDATE_CHECKING_ERROR:\n        enqueueSnackbar(\n          'Impossibile controllare gli aggiornamenti per la lista. Controlla la tua connessione.',\n          { variant: 'error', autoHideDuration: 4000, preventDuplicate: true }\n        );\n        break;\n      case TECHNICAL_AREA_MANAGER_ACTION_TYPE.REVIEW_ITEM_FAILED:\n        enqueueSnackbar(\n          `Revisione del${\n            action.elementType === ELEMENT_TYPE.COMMITS ? ' commit' : 'la richiesta di invio'\n          } #${action.elementId} fallita: ${action.errorMessage}.`,\n          { variant: 'error', autoHideDuration: 4000 }\n        );\n        break;\n      case AUTH_ACTION_TYPE.LOGIN_FAILED:\n        enqueueSnackbar(\"Impossibile effettuare l'accesso: \" + action.errorMessage, {\n          variant: 'error',\n          autoHideDuration: 5000\n        });\n        break;\n      case LIST_ACTION_TYPE.PAGE_RETRIEVAL_ERROR:\n        enqueueSnackbar('Impossibile caricare la pagina: ' + action.errorMessage, {\n          variant: 'error',\n          autoHideDuration: 5000\n        });\n        break;\n      case PROGRAMMER_ACTION_TYPE.ADD_ELEMENT_SUCCESSFUL:\n        enqueueSnackbar('La richiesta è stata aggiunta correttamente.', {\n          autoHideDuration: 5000\n        });\n        break;\n      case PROGRAMMER_ACTION_TYPE.REMOVE_ELEMENT_SUCCESSFUL:\n        enqueueSnackbar('La richiesta è stata rimossa con successo.', {\n          autoHideDuration: 5000\n        });\n        break;\n      case PROGRAMMER_ACTION_TYPE.REMOVE_ELEMENT_FAILED:\n        enqueueSnackbar('Errore nella rimozione della richiesta: ' + action.errorMessage, {\n          variant: 'error',\n          autoHideDuration: 5000\n        });\n        break;\n    }\n    next(action);\n  };\n}\n","import { withStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport gesbank_logo from '../../assets/gesbank_logo.png';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    position: 'absolute',\n    height: '100%'\n  },\n  logo: {\n    maxWidth: '100%',\n    width: 'auto',\n    height: 'auto'\n  }\n};\n\n/**\n * @class\n * This class is resposible of displaying a circular\n * progress bar when the webapp is loading some content.\n */\nclass LogoLoader extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid\n        className={classes.root}\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={16}\n      >\n        <Grid item>\n          <img className={classes.logo} src={gesbank_logo} alt=\"Gesbank Evolution\" />\n        </Grid>\n        <Grid item>\n          <CircularProgress className={classes.progress} color=\"secondary\" />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nLogoLoader.displayName = 'LogoLoader';\nLogoLoader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LogoLoader);\n","export const ROUTE = {\n  ROOT: '/',\n  LOGIN: '/login',\n  HOME: '/home',\n  PROGRAMMER: '/programmer',\n  REVISION_OFFICE_MANAGER: '/revoffice',\n  TECHNICAL_AREA_MANAGER: '/techarea',\n  CLIENT: '/client'\n};\n\nexport const ROUTE_PARAM = {\n  TAB_VALUE: '/:tabValue'\n};\n","import { CircularProgress, withStyles } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst styles = {\n  opaque: {\n    zIndex: 10,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    background: 'rgba(255, 255, 255, 0.7)'\n  }\n};\n\n/**\n * Dialog that resizes dynamically to fit screen size up to medium breakpoint (960px).\n * On mobile screens it becomes fullscreen.\n * Any given props will be passed down to the Dialog MaterialUI component.\n */\nclass ResponsiveDialog extends React.Component {\n  render() {\n    const { isLoading, classes, children, ...otherProps } = this.props;\n\n    return (\n      <Dialog fullWidth {...otherProps}>\n        {isLoading && this.showLoader(classes)}\n        {children}\n      </Dialog>\n    );\n  }\n\n  showLoader(jssClasses) {\n    return (\n      <Grid className={jssClasses.opaque} container alignItems=\"center\" justify=\"center\">\n        <Grid item>\n          <CircularProgress />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nResponsiveDialog.defaultProps = {\n  isLoading: false,\n  maxWidth: 'md',\n  disableBackdropClick: true\n}\n\nResponsiveDialog.displayName = 'ResponsiveDialog';\nResponsiveDialog.propTypes = {\n  isLoading: PropTypes.bool\n};\n\nexport default withStyles(styles)(withMobileDialog({ breakpoint: 'xs' })(ResponsiveDialog));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport ResponsiveDialog from '../../components/ResponsiveDialog';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ATTRIBUTE_LABEL } from '../../constants/elements';\n\nconst buttonToTheLeftStyle = {\n  marginRight: 'auto'\n};\n\nconst correctedActionsMargin = {\n  margin: '8px 16px'\n};\n\n/**\n * @class\n * Dialog component that is used to display the details about a particular element (an object passed via props).\n * You must specify the fields of that element via the elementFields array.\n * Fields definitions are objects structured as follows:\n *   { key: '[the field accessor]', label: '[the printable name of the field]', fullRow: bool }\n * The function renderFieldContent is responsible for providing a printable representation of the\n * field content (which can be a string or a JSX snippet).\n */\nexport default class ElementDetailsDialog extends React.Component {\n  render() {\n    const {\n      element,\n      elementFields,\n      renderFieldContent,\n      onClose,\n      dialogTitle,\n      renderExtraActions,\n      backButtonToTheLeft,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <ResponsiveDialog {...otherProps}>\n        {otherProps.open && (\n          <>\n            <DialogTitle>{dialogTitle}</DialogTitle>\n            <DialogContent>\n              <Grid container spacing={16}>\n                {elementFields.map(field => (\n                  <Grid item xs={12} md={field.fullRow ? 12 : 6} key={field.key}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                      {field.label || ATTRIBUTE_LABEL[field.key]}\n                    </Typography>\n                    <Typography variant=\"body1\">{renderFieldContent(field.key, element[field.key])}</Typography>\n                  </Grid>\n                ))}\n              </Grid>\n            </DialogContent>\n            <DialogActions disableActionSpacing style={correctedActionsMargin}>\n              <Button onClick={onClose} color=\"primary\" style={backButtonToTheLeft ? buttonToTheLeftStyle : undefined}>\n                Indietro\n              </Button>\n              {renderExtraActions != null ? renderExtraActions() : null}\n            </DialogActions>\n          </>\n        )}\n      </ResponsiveDialog>\n    );\n  }\n}\n\nElementDetailsDialog.defaultProps = {\n  backButtonToTheLeft: false\n};\n\nElementDetailsDialog.propTypes = {\n  dialogTitle: PropTypes.string.isRequired,\n  element: PropTypes.object.isRequired,\n  elementFields: PropTypes.array.isRequired,\n  renderFieldContent: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  backButtonToTheLeft: PropTypes.bool,\n  renderExtraActions: PropTypes.func\n};\n","import { LIST_ELEMENTS_PER_PAGE, ELEMENT_TYPE } from '../../constants/api';\nimport { LIST_ACTION_TYPE } from './commonList';\n\nexport function retrieveSendRequestsListPageAction(\n  userRoleString,\n  pageNumber = 0,\n  sortingCriteria = { columnKey: null, direction: 'desc' },\n  filter = {}\n) {\n  return {\n    type: LIST_ACTION_TYPE.PAGE_REQUEST,\n    elementType: ELEMENT_TYPE.SEND_REQUESTS,\n    userRoleString,\n    pageNumber,\n    limit: LIST_ELEMENTS_PER_PAGE,\n    sortingCriteria,\n    filter\n  };\n}\n\nexport function startSendRequestsListUpdatesAutoCheckingAction(userRoleString) {\n  return {\n    type: LIST_ACTION_TYPE.START_AUTO_CHECKING,\n    elementType: ELEMENT_TYPE.SEND_REQUESTS,\n    userRoleString\n  };\n}\n\nexport function stopSendRequestsListUpdatesAutoCheckingAction(userRoleString) {\n  return {\n    type: LIST_ACTION_TYPE.STOP_AUTO_CHECKING,\n    elementType: ELEMENT_TYPE.SEND_REQUESTS,\n    userRoleString\n  };\n}\n","import { withStyles } from '@material-ui/core';\nimport CheckCircleOutline from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOff from '@material-ui/icons/HighlightOff';\nimport Schedule from '@material-ui/icons/Schedule';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst approvedIconStyle = theme => ({\n  icon: { color: theme.palette.approved }\n});\n\n/**\n * Used to display icons according to the values of INSTALL_STATUS and APPROVAL_STATUS enums.\n * A status of 0 means \"pending\", otherwise \"successful\" or \"approved\" if higher than 0 and\n * \"failed\" or \"rejected\" if less than 0.\n */\nclass StatusIcon extends React.PureComponent {\n  render() {\n    const { classes, status, opacity } = this.props;\n    const opacityStyle = opacity != null ? { filter: `opacity(${opacity}%)` } : undefined;\n\n    // prettier-ignore\n    if (status < 0)\n      return <HighlightOff color=\"error\" style={opacityStyle} />;\n    else if (status === 0)\n      return <Schedule color=\"action\" style={opacityStyle} />;\n    else\n      return <CheckCircleOutline className={classes.icon} style={opacityStyle} />;\n  }\n}\n\nStatusIcon.displayName = 'StatusIcon';\nStatusIcon.propTypes = {\n  status: PropTypes.number.isRequired,\n  opacity: PropTypes.number\n};\n\nexport default withStyles(approvedIconStyle)(StatusIcon);\n","/**\n * @file\n * Includes functions used in several views and sometimes in their child components (like tables, dialogs etc.).\n */\n\nimport React from 'react';\nimport StatusIcon from '../components/StatusIcon';\nimport { COMMON_ELEMENT_ATTRIBUTE, SEND_REQUEST_ATTRIBUTE, INSTALL_TYPE, APPROVAL_STATUS } from '../constants/elements';\nimport Link from '@material-ui/core/Link';\nimport { INSTALL_TYPE_LABEL, APPROVAL_STATUS_LABEL } from '../constants/elements';\n\nexport function retrieveElementFromListState(state, elementId, pageNumber, rowIndex = null) {\n  if (pageNumber != null && rowIndex != null) {\n    const element = state.listPages[pageNumber].data[rowIndex];\n    return { ...element };\n  } else if (pageNumber != null && elementId != null) {\n    const element = state.listPages[pageNumber].data.find(element => element.id === elementId);\n    return { ...element };\n  }\n  console.error(\"Couldn't retrieve element.\");\n  return null;\n}\n\n/**\n * Returns the printable representation of the value of the given element attribute.\n * Needed for those attributes which aren't strings or need some formatting\n */\nexport function renderElementFieldContent(attributeKey, value) {\n  const PLACEHOLDER_CHARACTER = '—';\n  if (value == null)\n    return PLACEHOLDER_CHARACTER;\n\n  switch (attributeKey) {\n    case COMMON_ELEMENT_ATTRIBUTE.APPROVER:\n    case COMMON_ELEMENT_ATTRIBUTE.AUTHOR:\n      return value.name;\n    case COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS:\n    case SEND_REQUEST_ATTRIBUTE.INSTALL_STATUS:\n      return <StatusIcon status={+value} />;\n    case COMMON_ELEMENT_ATTRIBUTE.UPDATE_TIMESTAMP:\n    case COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP:\n    case SEND_REQUEST_ATTRIBUTE.DELIVERY_TIMESTAMP:\n      return new Date(value * 1000).toLocaleString('it-it');\n    case SEND_REQUEST_ATTRIBUTE.INSTALL_TYPE:\n      return INSTALL_TYPE.DURING_EXECUTION ? INSTALL_TYPE_LABEL.DURING_EXECUTION : INSTALL_TYPE_LABEL.NEEDS_SHUTDOWN;\n    case SEND_REQUEST_ATTRIBUTE.INSTALL_LINK:\n      return <Link href={value} target=\"_blank\" rel=\"noopener\">{value}</Link>\n    // prettier-ignore\n    case SEND_REQUEST_ATTRIBUTE.LINKED_COMMITS:\n      if (value.length === 0)\n        return PLACEHOLDER_CHARACTER;\n      else {\n        let commits = '';\n        value.forEach((element, index) => {\n          commits += `${element[COMMON_ELEMENT_ATTRIBUTE.TITLE]} (#${element[COMMON_ELEMENT_ATTRIBUTE.ID]})`\n          if (index < value.length-1)\n            commits += ', ';\n        });\n        return commits;\n      }\n    // prettier-ignore\n    case SEND_REQUEST_ATTRIBUTE.RECIPIENT_CLIENTS:\n      if (value.length === 0)\n        return PLACEHOLDER_CHARACTER;\n      else {\n        let clients = '';\n        value.forEach((element, index) => {\n          clients += element.name;\n          if (index < value.length-1)\n            clients += ', ';\n        });\n        return clients;\n      }\n      // prettier-ignore\n    case SEND_REQUEST_ATTRIBUTE.CLIENT_REPRESENTATIVES:\n      if (value.length === 0)\n        return PLACEHOLDER_CHARACTER;\n      else {\n        let representatives = '';\n        value.forEach((element, index) => {\n          representatives += element;\n          if (index < value.length-1)\n            representatives += ', ';\n        });\n        return representatives;\n      }\n    default:\n      return value;\n  }\n}\n\n// Variation of the method above that renders approval status as text instead of the icon\n// Used in element details dialogs\nexport function renderElementFieldContentAsText(attributeKey, value) {\n  switch (attributeKey) {\n    case COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS:\n      return APPROVAL_STATUS_LABEL[value];\n    default:\n      return renderElementFieldContent(attributeKey, value);\n  }\n}\n\nexport function canElementBeRemoved(element, currentUser) {\n  // eslint-disable-next-line eqeqeq\n  const isNotReviewed = element[COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS] == APPROVAL_STATUS.PENDING;\n  const createdByCurrentUser = element[COMMON_ELEMENT_ATTRIBUTE.AUTHOR].id === currentUser.id;\n  return isNotReviewed && createdByCurrentUser;\n}\n","/**\n * @file\n * This file holds JSS styles used in all views\n */\n\nconst programmerViewStyles = {\n  fab: {\n    right: 16,\n    bottom: 16,\n    position: 'fixed'\n  }\n}\n\nexport const viewStyles = theme => ({\n  root: {\n    width: '100%',\n    paddingTop: 0,\n    paddingBottom: 79,\n    paddingLeft: 0,\n    paddingRight: 0,\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 16,\n      paddingBottom: 79,\n      paddingLeft: 16,\n      paddingRight: 16\n    }\n  },\n  paper: {\n    flexGrow: 1,\n    width: '100%',\n    overflowX: 'auto'\n  },\n  errorColor: {\n    color: theme.palette.error.main\n  },\n  approvedColor: {\n    color: theme.palette.approved\n  },\n  ...programmerViewStyles\n});\n\nexport const selectDialogStyles = theme => ({\n  dialogContent: {\n    overflowY: 'visible'\n  },\n  input: {\n    display: 'flex'\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n  }\n});","import Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport ErrorOutline from '@material-ui/icons/ErrorOutline';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { LIST_ELEMENTS_PER_PAGE } from '../../../constants/api';\n\nconst styles = {\n  handCursor: {\n    cursor: 'pointer'\n  },\n  verticallyAlignedContent: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n};\n\nconst disabledEntryRowStyle = {\n  filter: 'opacity(0.65)'\n};\n\nconst PLACEHOLDER_VALUE = '—';\n\n/**\n * @class\n * The body of the tables present in the different views. Data is rendered according to the given columns array,\n * which specifies the key to access data of the specific columns and whether they should be shown on mobile.\n * Columns are objects with the following shape: { label: string, key: string, displayOnMobile: bool, alignOption?: string }.\n * This component accepts also a function (renderCellContent) which defines how the values of the specific columns\n * must be rendered. Typically is a switch-case which always return a JSX snippet (in other words a component).\n */\nclass TableDynamicBody extends React.Component {\n  render() {\n    const { tableColumns, displayError, totalItemsCount, isLoading } = this.props;\n\n    return (\n      <TableBody>\n        {isLoading ? (\n          this.renderSkeleton()\n        ) : displayError ? (\n          this.renderErrorMessageWithRetryButton()\n        ) : totalItemsCount === 0 ? (\n          <TableRow>\n            <TableCell colSpan={tableColumns.length}>Nessun dato presente.</TableCell>\n          </TableRow>\n        ) : (\n          this.renderContent()\n        )}\n      </TableBody>\n    );\n  }\n\n  renderSkeleton = () => {\n    return React.Children.map(Array(LIST_ELEMENTS_PER_PAGE), () => {\n      return (\n        <TableRow>\n          {this.props.tableColumns.map((column, index) => (\n            <Hidden key={index} smDown={!column.displayOnMobile}>\n              <TableCell align={column.alignOption != null ? column.alignOption : undefined} padding=\"dense\">\n                {PLACEHOLDER_VALUE}\n              </TableCell>\n            </Hidden>\n          ))}\n        </TableRow>\n      );\n    });\n  };\n\n  renderErrorMessageWithRetryButton = () => {\n    const { tableColumns, loadCurrentPage, classes } = this.props;\n    return (\n      <TableRow>\n        <TableCell colSpan={tableColumns.length}>\n          <div className={classes.verticallyAlignedContent}>\n            <ErrorOutline color=\"action\" /> &ensp; Impossibile ottenere i dati.&ensp;\n            <Button size=\"small\" onClick={loadCurrentPage} color=\"primary\">\n              Riprova\n            </Button>\n          </div>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  renderContent = () => {\n    const {\n      tableData,\n      tableColumns,\n      pageNumber,\n      renderCellContent,\n      onElementClick,\n      disabledEntries,\n      classes\n    } = this.props;\n\n    return tableData[pageNumber].data.map((element, rowIndex) => {\n      const isEntryDisabled = disabledEntries.includes(element.id);\n      const hasRowOnClickHandler = !isEntryDisabled && onElementClick != null;\n\n      return (\n        <TableRow\n          className={hasRowOnClickHandler ? classes.handCursor : undefined}\n          hover={hasRowOnClickHandler}\n          onClick={hasRowOnClickHandler ? () => onElementClick(pageNumber, rowIndex, element.id) : undefined}\n          key={element.id}\n          style={isEntryDisabled ? disabledEntryRowStyle : undefined}\n        >\n          {tableColumns.map((column, columnIndex) => (\n            <Hidden key={columnIndex} smDown={!column.displayOnMobile}>\n              <TableCell align={column.alignOption || undefined} padding=\"dense\">\n                {renderCellContent(column.key, element[column.key], element.id)}\n              </TableCell>\n            </Hidden>\n          ))}\n        </TableRow>\n      );\n    });\n  };\n}\n\nTableDynamicBody.displayName = 'TableDynamicBody';\nTableDynamicBody.defaultProps = {\n  disabledEntries: []\n};\nTableDynamicBody.propTypes = {\n  tableColumns: PropTypes.array.isRequired,\n  tableData: PropTypes.array.isRequired,\n  totalItemsCount: PropTypes.number.isRequired,\n  displayError: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  pageNumber: PropTypes.number.isRequired,\n  renderCellContent: PropTypes.func.isRequired,\n  loadCurrentPage: PropTypes.func.isRequired,\n  disabledEntries: PropTypes.array,\n  onElementClick: PropTypes.func\n};\n\nexport default withStyles(styles)(TableDynamicBody);\n","import TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\n/**\n * @class\n * Table footer which contains pagination controls.\n */\nexport default class TablePaginationFooter extends React.PureComponent {\n  render() {\n    const { itemsCount, itemsPerPage, currentPage, onPageChange } = this.props;\n    return (\n      <TableFooter>\n        <TableRow>\n          <TablePagination\n            count={itemsCount}\n            rowsPerPage={itemsPerPage}\n            page={currentPage}\n            rowsPerPageOptions={[itemsPerPage]}\n            labelDisplayedRows={this.displayedRowsLabel}\n            onChangePage={(_, pageNumber) => onPageChange(pageNumber)}\n          />\n        </TableRow>\n      </TableFooter>\n    );\n  }\n\n  displayedRowsLabel = ({ from, to, count }) => `${from}-${to} di ${count} elementi totali`;\n}\n\nTablePaginationFooter.displayName = 'TablePaginationFooter';\nTablePaginationFooter.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  itemsPerPage: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n","import Hidden from '@material-ui/core/Hidden';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ATTRIBUTE_LABEL } from '../../../constants/elements';\n\n/**\n * @class\n * Displays the header for the specified table columns, which can be clicked to trigger sorting.\n * A table column is described with an object that includes the key of the attribute, whether the\n * column should be displayed on mobile devices and optionally: a custom label in case default one\n * shouldn't be used, whether the column shouldn't be sortable and its alignment.\n */\nexport default class TableSortableHeader extends React.PureComponent {\n  render() {\n    const { tableColumns, sortingCriteria, onSortingUpdate } = this.props;\n    return (\n      <TableHead>\n        <TableRow>\n          {tableColumns.map(column => (\n            <Hidden key={column.key} smDown={!column.displayOnMobile}>\n              <TableCell align={column.alignOption != null ? column.alignOption : undefined} padding=\"dense\">\n                <TableSortLabel\n                  active={sortingCriteria.columnKey === column.key}\n                  direction={sortingCriteria.direction}\n                  onClick={\n                    column.notSortable\n                      ? undefined\n                      : () => {\n                          const updatedSorting = {\n                            columnKey: column.key,\n                            direction: sortingCriteria.direction === 'asc' ? 'desc' : 'asc'\n                          };\n                          onSortingUpdate(updatedSorting);\n                        }\n                  }\n                >\n                  {column.label || ATTRIBUTE_LABEL[column.key]}\n                </TableSortLabel>\n              </TableCell>\n            </Hidden>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nTableSortableHeader.displayName = 'TableSortableHeader';\nTableSortableHeader.propTypes = {\n  tableColumns: PropTypes.array.isRequired,\n  sortingCriteria: PropTypes.object.isRequired,\n  onSortingUpdate: PropTypes.func.isRequired\n};\n","import Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst toolbarStyles = theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderColor: fade(theme.palette.common.black, 0.05),\n    '&:hover': {\n      borderColor: fade(theme.palette.common.black, 0.1)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 128,\n      '&:focus': {\n        width: 256\n      }\n    }\n  },\n  toolbarContainer: {\n    margin: '0 -8px'\n  }\n});\n\n/**\n * @class\n * Toolbar to be used on top of tables, which contains title label, 'available updates' button (which appears when\n * new updates are found) and the search field.\n * Can optionally receive a function to display custom components between the updates button and the search field.\n * Debouncing for search text input is handled by the middleware that receives the action (in our case Saga).\n */\nclass TableToolbar extends React.Component {\n  render() {\n    const {\n      classes,\n      toolbarTitle,\n      showAvailableUpdatesBadge,\n      loadCurrentPage,\n      onSearchQueryChange,\n      renderCustomContent\n    } = this.props;\n\n    return (\n      <Toolbar>\n        <Grid\n          className={classes.toolbarContainer}\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n          spacing={16}\n        >\n          <Grid item>\n            <Typography variant=\"h5\">{toolbarTitle}</Typography>\n          </Grid>\n\n          {/* Display badge when new updates have been found */}\n          <Grid item>\n            {showAvailableUpdatesBadge && (\n              <Badge color=\"secondary\">\n                <Button variant=\"outlined\" color=\"primary\" onClick={loadCurrentPage}>\n                  Aggiornamenti disponibili\n                  <RefreshIcon />\n                </Button>\n              </Badge>\n            )}\n          </Grid>\n\n          {/* Search bar */}\n          <Grid item>\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                {/* Render custom supplied content inside a grid item */}\n                {renderCustomContent != null && <Grid item>{renderCustomContent()}</Grid>}\n              </Grid>\n              <Grid item>\n                <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                  </div>\n                  <InputBase\n                    placeholder=\"Cerca...\"\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput\n                    }}\n                    onChange={event => onSearchQueryChange(event.target.value)}\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    );\n  }\n}\n\nTableToolbar.displayName = 'TableToolbar';\nTableToolbar.propTypes = {\n  toolbarTitle: PropTypes.string.isRequired,\n  showAvailableUpdatesBadge: PropTypes.bool.isRequired,\n  loadCurrentPage: PropTypes.func.isRequired,\n  onSearchQueryChange: PropTypes.func.isRequired,\n  renderCustomContent: PropTypes.func\n};\n\nexport default withStyles(toolbarStyles)(TableToolbar);\n","import React from 'react';\nimport { isSearchFilter, getEmptySortingCriteria } from '../../../utils/tableUtils';\nimport { getReactComponentName } from '../../../utils/componentUtils';\n\n/**\n * Higher order component that allows us to reuse common table stateful logic\n * (pagination, filtering and sorting) between different types of tables.\n */\nexport default function withTableFunctionality(TableComponent, defaultFilter = {}) {\n  return class WithTableFunctionality extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        pageNumber: 0,\n        sorting: getEmptySortingCriteria(),\n        filter: defaultFilter\n      };\n    }\n\n    static displayName = `WithTableFunctionality(${getReactComponentName(TableComponent)})`;\n\n    // Load the first page when table is created\n    componentDidMount() {\n      this.props.loadPage(0, this.state.sorting, this.state.filter);\n    }\n\n    render() {\n      const { pageNumber, sorting, filter } = this.state;\n\n      return (\n        <TableComponent\n          pageNumber={pageNumber}\n          sorting={sorting}\n          filter={filter}\n\n          loadCurrentPage={this.loadCurrentPage}\n          onPageChange={this.onPageChange}\n          onSortingChange={this.onSortingChange}\n          onFilterChange={this.onFilterChange}\n          {...this.props}\n        />\n      );\n    }\n\n    loadCurrentPage = () => {\n      this.props.loadPage(this.state.pageNumber, this.state.sorting, this.state.filter);\n    };\n\n    onPageChange = nextPage => {\n      this.setState({ pageNumber: nextPage });\n      this.props.loadPage(nextPage, this.state.sorting, this.state.filter);\n    };\n\n    onSortingChange = nextSorting => {\n      this.setState({ sorting: nextSorting });\n      this.props.loadPage(this.state.pageNumber, nextSorting, this.state.filter);\n    };\n\n    // prettier-ignore\n    onFilterChange = nextFilter => {\n      this.setState({ filter: nextFilter, pageNumber: 0 });\n      if (isSearchFilter(nextFilter))\n        this.props.onSearchQueryChange(nextFilter.valueMatches);\n      else\n        this.props.loadPage(0, this.state.sorting, nextFilter);\n    };\n  };\n}","/* eslint-disable array-callback-return */\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Table from '@material-ui/core/Table';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport DoneIcon from '@material-ui/icons/Done';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { LIST_ELEMENTS_PER_PAGE } from '../../constants/api';\nimport { COMMON_ELEMENT_ATTRIBUTE, SEND_REQUEST_ATTRIBUTE } from '../../constants/elements';\nimport {\n  getAlreadyInstalledFilter,\n  getSearchFilterOrDefault,\n  getToBeInstalledFilter,\n  isSearchFilter\n} from '../../utils/tableUtils';\nimport { renderElementFieldContent } from '../../utils/viewUtils';\nimport TableDynamicBody from '../Table/TableDynamicBody';\nimport TablePaginationFooter from '../Table/TablePaginationFooter';\nimport TableSortableHeader from '../Table/TableSortableHeader';\nimport TableToolbar from '../Table/TableToolbar';\nimport withTableFunctionality from '../Table/WithTableFunctionality';\n\nconst ACTIONS_COLUMN = 'ACTIONS_COLUMN';\n\nconst alreadyInstalledTableColumns = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, displayOnMobile: true },\n  { key: SEND_REQUEST_ATTRIBUTE.DELIVERY_TIMESTAMP, displayOnMobile: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVER, label: 'Referente interno', displayOnMobile: false },\n  { key: SEND_REQUEST_ATTRIBUTE.INSTALL_TYPE, displayOnMobile: false },\n  { key: SEND_REQUEST_ATTRIBUTE.INSTALL_STATUS, displayOnMobile: true }\n];\n\nconst toBeInstalledTableColumns = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, displayOnMobile: true },\n  { key: SEND_REQUEST_ATTRIBUTE.DELIVERY_TIMESTAMP, displayOnMobile: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVER, label: 'Referente interno', displayOnMobile: false },\n  { key: SEND_REQUEST_ATTRIBUTE.INSTALL_TYPE, displayOnMobile: false },\n  {\n    label: 'Azioni',\n    key: ACTIONS_COLUMN,\n    displayOnMobile: true,\n    notSortable: true,\n    alignOption: 'center'\n  }\n];\n\nclass ClientTable extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return (\n      this.props.isLoading !== nextProps.isLoading ||\n      this.props.latestUpdateTimestamp !== nextProps.latestUpdateTimestamp ||\n      this.props.feedbackSentForElements !== nextProps.feedbackSentForElements\n    );\n  }\n\n  render() {\n    const {\n      tableData,\n      itemsCount,\n      isLoading,\n      latestUpdateTimestamp,\n      displayError,\n      onElementClick,\n      loadCurrentPage,\n      onPageChange,\n      onSortingChange,\n      onFilterChange,\n      pageNumber,\n      sorting\n    } = this.props;\n    const showingUpdatesToBeInstalled = this.isShowingUpdatesToBeInstalled();\n\n    return (\n      <>\n        <TableToolbar\n          toolbarTitle=\"Download aggiornamenti\"\n          showAvailableUpdatesBadge={\n            !isLoading &&\n            tableData.length > 0 &&\n            tableData[pageNumber] != null &&\n            latestUpdateTimestamp > tableData[pageNumber].updateTimestamp\n          }\n          loadCurrentPage={loadCurrentPage}\n          onSearchQueryChange={newQuery =>\n            onFilterChange(getSearchFilterOrDefault(newQuery, getAlreadyInstalledFilter()))\n          }\n          renderCustomContent={this.renderToolbarRadioButtons}\n        />\n        <Table>\n          <TableSortableHeader\n            tableColumns={showingUpdatesToBeInstalled ? toBeInstalledTableColumns : alreadyInstalledTableColumns}\n            sortingCriteria={sorting}\n            onSortingUpdate={onSortingChange}\n          />\n\n          <TableDynamicBody\n            tableColumns={showingUpdatesToBeInstalled ? toBeInstalledTableColumns : alreadyInstalledTableColumns}\n            tableData={tableData}\n            totalItemsCount={itemsCount}\n            displayError={displayError}\n            isLoading={isLoading}\n            pageNumber={pageNumber}\n            renderCellContent={this.renderCellContent}\n            loadCurrentPage={loadCurrentPage}\n            onElementClick={onElementClick}\n          />\n\n          <TablePaginationFooter\n            itemsCount={itemsCount}\n            itemsPerPage={LIST_ELEMENTS_PER_PAGE}\n            currentPage={pageNumber}\n            onPageChange={onPageChange}\n          />\n        </Table>\n      </>\n    );\n  }\n\n  renderToolbarRadioButtons = () => {\n    const showingUpdatesToBeInstalled = this.isShowingUpdatesToBeInstalled();\n    const isSearching = isSearchFilter(this.props.filter);\n    return (\n      <>\n        <FormControlLabel\n          disabled={isSearching}\n          checked={!showingUpdatesToBeInstalled && !isSearching}\n          control={<Radio color=\"primary\" />}\n          label=\"Già installati\"\n          onChange={() => this.props.onFilterChange(getAlreadyInstalledFilter())}\n        />\n        <FormControlLabel\n          disabled={isSearching}\n          checked={showingUpdatesToBeInstalled && !isSearching}\n          control={<Radio color=\"primary\" />}\n          label=\"Da installare\"\n          onChange={() => this.props.onFilterChange(getToBeInstalledFilter())}\n        />\n      </>\n    );\n  };\n\n  renderCellContent = (columnKey, value, elementId) => {\n    const { onElementDownload, onElementFeedback, pageNumber, feedbackSentForElements } = this.props;\n\n    switch (columnKey) {\n      case ACTIONS_COLUMN:\n        return feedbackSentForElements.includes(elementId) ? (\n          <DoneIcon color=\"action\" />\n        ) : (\n          <>\n            <IconButton\n              onClick={event => {\n                onElementDownload(elementId, pageNumber);\n                event.stopPropagation();\n              }}\n            >\n              <GetAppIcon color=\"action\" />\n            </IconButton>\n            <IconButton\n              onClick={event => {\n                onElementFeedback(elementId, pageNumber);\n                event.stopPropagation();\n              }}\n            >\n              <FeedbackIcon color=\"action\" />\n            </IconButton>\n          </>\n        );\n      default:\n        return renderElementFieldContent(columnKey, value);\n    }\n  };\n\n  isShowingUpdatesToBeInstalled = () => {\n    return (\n      this.props.filter.attribute === getToBeInstalledFilter().attribute &&\n      this.props.filter.valueMatches === getToBeInstalledFilter().valueMatches\n    );\n  };\n}\n\nClientTable.displayName = 'ClientTable';\nClientTable.propTypes = {\n  tableData: PropTypes.array.isRequired,\n  itemsCount: PropTypes.number.isRequired,\n  loadPage: PropTypes.func.isRequired,\n  onSearchQueryChange: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  latestUpdateTimestamp: PropTypes.number.isRequired,\n  displayError: PropTypes.bool.isRequired,\n  onElementClick: PropTypes.func.isRequired,\n  onElementDownload: PropTypes.func.isRequired,\n  onElementFeedback: PropTypes.func.isRequired,\n  feedbackSentForElements: PropTypes.array.isRequired,\n\n  // injected by withTableFunctionality\n  pageNumber: PropTypes.number.isRequired,\n  sorting: PropTypes.object.isRequired,\n  filter: PropTypes.object.isRequired,\n  loadCurrentPage: PropTypes.func.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  onSortingChange: PropTypes.func.isRequired,\n  onFilterChange: PropTypes.func.isRequired\n};\n\nexport default withTableFunctionality(ClientTable, getToBeInstalledFilter());\n","import Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ResponsiveDialog from '../../components/ResponsiveDialog';\nimport { COMMON_ELEMENT_ATTRIBUTE, INSTALL_STATUS, SEND_REQUEST_ATTRIBUTE } from '../../constants/elements';\n\nexport default class InstallFeedbackDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      installStatus: '',\n      installFeedback: '',\n      displayMissingInstallStatusError: false\n    };\n  }\n\n  render() {\n    const { sendRequest, onSend, onClose, isSending, displaySendError, ...otherProps } = this.props;\n\n    return (\n      <ResponsiveDialog isLoading={isSending} {...otherProps}>\n        {otherProps.open && (\n          <>\n            <DialogTitle>\n              {`Invia feedback per la patch del ${new Date(\n                sendRequest[SEND_REQUEST_ATTRIBUTE.DELIVERY_TIMESTAMP] * 1000\n              ).toLocaleDateString('it-it')}: ${sendRequest[COMMON_ELEMENT_ATTRIBUTE.TITLE]}`}\n            </DialogTitle>\n            <DialogContent>\n              <Grid container alignItems=\"center\" spacing={16}>\n                <Grid item xs={12} sm={9}>\n                  <Typography variant=\"body1\">L'installazione è andata a buon fine?</Typography>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <Select\n                    fullWidth\n                    onChange={this.handleSelectChange}\n                    value={this.state.installStatus}\n                    displayEmpty\n                    input={<OutlinedInput labelWidth={0} />}\n                    error={this.state.displayMissingInstallStatusError}\n                  >\n                    <MenuItem value=\"\" disabled selected>\n                      Seleziona\n                    </MenuItem>\n                    <MenuItem value={INSTALL_STATUS.INSTALL_SUCCESS}>Sì</MenuItem>\n                    <MenuItem value={INSTALL_STATUS.INSTALL_FAILED}>No</MenuItem>\n                  </Select>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Fornisci un feedback (opzionale)\n                  </Typography>\n                  <TextField\n                    fullWidth\n                    multiline\n                    variant=\"outlined\"\n                    value={this.state.installFeedback}\n                    onChange={this.handleFeedbackTextChange}\n                    style={{ marginTop: '8px' }}\n                  />\n                </Grid>\n\n                {displaySendError && (\n                  <Grid item xs={12}>\n                    <Typography variant=\"subtitle1\" color=\"error\">\n                      Si è verificato un errore durante l'invio. Riprova.\n                    </Typography>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={onClose} color=\"primary\">\n                Annulla\n              </Button>\n              <Button onClick={this.handleSendButtonClick} color=\"primary\">\n                Invia\n              </Button>\n            </DialogActions>\n          </>\n        )}\n      </ResponsiveDialog>\n    );\n  }\n\n  handleSelectChange = event => {\n    this.setState({\n      displayMissingInstallStatusError: false,\n      installStatus: event.target.value\n    });\n  };\n\n  handleFeedbackTextChange = event => {\n    this.setState({ installFeedback: event.target.value });\n  };\n\n  handleSendButtonClick = () => {\n    const { sendRequest, onSend } = this.props;\n\n    // prettier-ignore\n    if (this.state.installStatus === '')\n      this.setState({ displayMissingInstallStatusError: true });\n    else\n      onSend(sendRequest.id, this.state.installStatus, this.state.installFeedback.trim());\n  };\n}\n\nInstallFeedbackDialog.displayName = 'InstallFeedbackDialog';\n\nInstallFeedbackDialog.propTypes = {\n  sendRequest: PropTypes.object.isRequired,\n  onSend: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  isSending: PropTypes.bool,\n  displaySendError: PropTypes.bool\n};\n","import React from 'react';\nimport withErrorBoundary from '../../components/WithErrorBoundary';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ElementDetailsDialog from '../../components/ElementDetailsDialog';\nimport { COMMON_ELEMENT_ATTRIBUTE, SEND_REQUEST_ATTRIBUTE } from '../../constants/elements';\nimport { USER_ROLE_STRING, USER_TYPE_ID } from '../../constants/user';\nimport { performNewSearchAction } from '../../redux/actions/commonList';\nimport {\n  retrieveSendRequestsListPageAction,\n  startSendRequestsListUpdatesAutoCheckingAction,\n  stopSendRequestsListUpdatesAutoCheckingAction\n} from '../../redux/actions/sendRequests';\nimport { renderElementFieldContent, retrieveElementFromListState } from '../../utils/viewUtils';\nimport { viewStyles } from '../styles';\nimport ClientTable from '../../components/ClientTable';\nimport InstallFeedbackDialog from '../../components/InstallFeedbackDialog/InstallFeedbackDialog';\nimport { CLIENT_ACTION_TYPE, sendFeedbackAction } from '../../redux/actions/views/client';\n\nconst detailsDialogFields = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE },\n  { key: SEND_REQUEST_ATTRIBUTE.DELIVERY_TIMESTAMP },\n  { key: COMMON_ELEMENT_ATTRIBUTE.DESCRIPTION },\n  { key: COMMON_ELEMENT_ATTRIBUTE.COMPONENTS },\n  { key: SEND_REQUEST_ATTRIBUTE.CLIENT_REPRESENTATIVES },\n  { key: SEND_REQUEST_ATTRIBUTE.INSTALL_TYPE },\n  { key: SEND_REQUEST_ATTRIBUTE.INSTALL_LINK },\n  { key: SEND_REQUEST_ATTRIBUTE.INSTALL_FEEDBACK }\n];\n\nclass ClientView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      detailsModalOpen: false,\n      feedbackModalOpen: false,\n\n      // must be set to an object when empty, otherwise render()\n      // would throw an error (the id field is accessed in any case, see below)\n      currentlyShowingElement: {}\n    };\n  }\n\n  // Close feedback modal when it has been sent successfully\n  static getDerivedStateFromProps(props, state) {\n    if (props.successfullySentFeedbackForElements.includes(state.currentlyShowingElement.id))\n      return { feedbackModalOpen: false };\n    return null;\n  }\n\n  componentDidMount() {\n    this.props.startSendRequestsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.CLIENT]);\n  }\n\n  componentWillUnmount() {\n    this.props.stopSendRequestsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.CLIENT]);\n    this.props.resetUI();\n  }\n\n  render() {\n    const {\n      classes,\n      sendRequestsData,\n      retrieveSendRequestsListPage,\n      performNewSearch,\n      sendFeedback,\n      successfullySentFeedbackForElements,\n      isSendingFeedback,\n      lastFeedbackFailed\n    } = this.props;\n    const { detailsModalOpen, feedbackModalOpen, currentlyShowingElement } = this.state;\n\n    return (\n      <>\n        <Grid container className={classes.root}>\n          <Grid item xs={12}>\n            <Grid container justify=\"center\">\n              <Paper className={classes.paper}>\n                <ClientTable\n                  tableData={sendRequestsData.listPages}\n                  itemsCount={sendRequestsData.totalItemsCount}\n                  isLoading={sendRequestsData.isLoadingList}\n                  latestUpdateTimestamp={sendRequestsData.latestUpdateTimestamp}\n                  displayError={sendRequestsData.errorWhileFetchingData}\n                  loadPage={(pageNumber, sortingCriteria, filter) => {\n                    retrieveSendRequestsListPage(\n                      USER_ROLE_STRING[USER_TYPE_ID.CLIENT],\n                      pageNumber,\n                      sortingCriteria,\n                      filter\n                    );\n                  }}\n                  onSearchQueryChange={searchQuery => {\n                    performNewSearch(\n                      retrieveSendRequestsListPageAction(USER_ROLE_STRING[USER_TYPE_ID.CLIENT]),\n                      searchQuery\n                    );\n                  }}\n                  onElementDownload={this.downloadPatchFileInNewTab}\n                  onElementFeedback={(elementId, pageNumber) => {\n                    this.setState({\n                      feedbackModalOpen: true,\n                      currentlyShowingElement: retrieveElementFromListState(sendRequestsData, elementId, pageNumber)\n                    });\n                  }}\n                  onElementClick={(pageNumber, rowIndex, elementId) => {\n                    this.setState({\n                      detailsModalOpen: true,\n                      currentlyShowingElement: retrieveElementFromListState(\n                        sendRequestsData,\n                        elementId,\n                        pageNumber,\n                        rowIndex\n                      )\n                    });\n                  }}\n                  feedbackSentForElements={successfullySentFeedbackForElements}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <ElementDetailsDialog\n          open={detailsModalOpen}\n          dialogTitle={`Aggiornamento del ${new Date(\n            currentlyShowingElement[SEND_REQUEST_ATTRIBUTE.DELIVERY_TIMESTAMP] * 1000\n          ).toLocaleDateString('it-it')}: ${currentlyShowingElement[COMMON_ELEMENT_ATTRIBUTE.TITLE]}`}\n          element={currentlyShowingElement}\n          elementFields={detailsDialogFields}\n          renderFieldContent={renderElementFieldContent}\n          onClose={this.hideDetailsModal}\n        />\n\n        <InstallFeedbackDialog\n          key={currentlyShowingElement.id}\n          open={feedbackModalOpen}\n          isLoading={isSendingFeedback}\n          displaySendError={lastFeedbackFailed}\n          sendRequest={currentlyShowingElement}\n          onSend={(elementId, installStatus, installFeedback) =>\n            sendFeedback(elementId, installStatus, installFeedback)\n          }\n          onClose={this.hideFeedbackModal}\n        />\n      </>\n    );\n  }\n\n  downloadPatchFileInNewTab = (elementId, pageNumber) => {\n    const sendRequest = retrieveElementFromListState(this.props.sendRequestsData, elementId, pageNumber);\n    const installLink = sendRequest[SEND_REQUEST_ATTRIBUTE.INSTALL_LINK];\n    // prettier-ignore\n    if (installLink != null)\n      window.open(installLink, '_blank', 'noopener');\n  };\n\n  hideDetailsModal = () => {\n    this.setState({ detailsModalOpen: false });\n  };\n\n  hideFeedbackModal = () => {\n    this.props.resetFailedFeedbackFlag();\n    this.setState({ feedbackModalOpen: false });\n  };\n}\n\nClientView.displayName = 'ClientView';\n\nconst mapStateToProps = state => {\n  return {\n    sendRequestsData: state.lists[USER_ROLE_STRING[USER_TYPE_ID.CLIENT]].sendRequests,\n    successfullySentFeedbackForElements:\n      state.views[USER_ROLE_STRING[USER_TYPE_ID.CLIENT]].successfullySentFeedbackForElements,\n    isSendingFeedback: state.views[USER_ROLE_STRING[USER_TYPE_ID.CLIENT]].isSendingFeedback,\n    lastFeedbackFailed: state.views[USER_ROLE_STRING[USER_TYPE_ID.CLIENT]].lastFeedbackFailed\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      retrieveSendRequestsListPage: retrieveSendRequestsListPageAction,\n      startSendRequestsListUpdatesAutoChecking: startSendRequestsListUpdatesAutoCheckingAction,\n      stopSendRequestsListUpdatesAutoChecking: stopSendRequestsListUpdatesAutoCheckingAction,\n      performNewSearch: performNewSearchAction,\n      sendFeedback: sendFeedbackAction,\n      resetFailedFeedbackFlag: () => ({ type: CLIENT_ACTION_TYPE.RESET_FAILED_FEEDBACK_FLAG }),\n      resetUI: () => ({ type: CLIENT_ACTION_TYPE.RESET_UI })\n    },\n    dispatch\n  );\n};\n\nexport default withErrorBoundary(\n  withStyles(viewStyles)(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(ClientView)\n  )\n);\n","import Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport React from 'react';\n\n/**\n * @file\n * These components are used in selects powered by react-select inside dialogs to customize their appearance.\n */\n\nconst fontStyle = {\n  fontFamily: 'Roboto',\n  color: 'hsl(0,0%,20%)'\n};\n\nexport function NoOptionsMessage(props) {\n  return (\n    <Typography color=\"textSecondary\" className={props.selectProps.classes.noOptionsMessage} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nexport function Control(props) {\n  return (\n    <TextField\n      fullWidth\n      margin=\"normal\"\n      variant=\"outlined\"\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nexport function ValueContainer(props) {\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nexport function MultiValue(props) {\n  console.log(props);\n\n  return (\n    <Chip\n      className={props.selectProps.classes.chip}\n      tabIndex={-1}\n      label={props.data.label}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nexport function Menu(props) {\n  return (\n    <Paper square style={fontStyle} {...props.innerProps}>\n      {props.children}\n    </Paper>\n  );\n}\n","import { DialogTitle, withStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport ResponsiveDialog from '../../components/ResponsiveDialog';\nimport { Control, Menu, MultiValue, NoOptionsMessage, ValueContainer } from '../Select';\nimport { selectDialogStyles } from '../../views/styles';\n\nconst selectComponents = {\n  NoOptionsMessage,\n  Control,\n  ValueContainer,\n  MultiValue,\n  Menu\n};\n\nconst initialDialogState = {\n  title: '',\n  description: '',\n  branch: '',\n  components: ''\n};\n\nclass NewCommitDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialDialogState;\n  }\n\n  render() {\n    const { classes, isLoadingBranches, allBranches, isLoading, isFailed, isSuccessful, ...otherProps } = this.props;\n    const { title, description, branch, components } = this.state;\n\n    if (!isLoading && !isFailed && isSuccessful) this.onDialogClose();\n\n    return (\n      <ResponsiveDialog {...otherProps} isLoading={isLoading && !isFailed} scroll=\"body\">\n        <DialogTitle>Inserisci un nuovo commit</DialogTitle>\n        <DialogContent classes={{ root: classes.dialogContent }}>\n          <Grid container spacing={16}>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Titolo\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                value={title}\n                onChange={event => this.onInputChanged('title', event)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Descrizione\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                value={description}\n                onChange={event => this.onInputChanged('description', event)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Select\n                classes={classes}\n                textFieldProps={{\n                  label: 'Branch',\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }}\n                options={allBranches}\n                components={selectComponents}\n                value={branch}\n                onChange={this.onSelectInputChanged('branch')}\n                placeholder=\"Seleziona un branch\"\n                isClearable\n                isLoading={isLoadingBranches}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Componenti\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                value={components}\n                onChange={event => this.onInputChanged('components', event)}\n              />\n            </Grid>\n            {isFailed && (\n              <Grid item xs={12}>\n                <Typography variant=\"subtitle1\" color=\"error\" gutterBottom>\n                  Errore durante l'aggiunta di un nuovo commit, riprova.\n                </Typography>\n              </Grid>\n            )}\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={this.onDialogClose}>\n            Annulla\n          </Button>\n          <Button color=\"primary\" onClick={this.onDialogSend}>\n            Invia\n          </Button>\n        </DialogActions>\n      </ResponsiveDialog>\n    );\n  }\n\n  onDialogClose = () => {\n    const { onDialogClose } = this.props;\n\n    this.setState(initialDialogState);\n\n    onDialogClose();\n  };\n\n  onDialogSend = () => {\n    const { onDialogSend } = this.props;\n    const { title, description, branch, components } = this.state;\n\n    onDialogSend({\n      title,\n      description,\n      branch: branch.value,\n      components\n    });\n  };\n\n  onInputChanged = (name, event) => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  onSelectInputChanged = name => value => {\n    this.setState({\n      [name]: value\n    });\n  };\n}\n\nNewCommitDialog.displayName = 'NewCommitDialog';\nNewCommitDialog.propTypes = {\n  isLoadingBranches: PropTypes.bool.isRequired,\n  allBranches: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  isSuccessful: PropTypes.bool.isRequired,\n  isFailed: PropTypes.bool.isRequired,\n  onDialogClose: PropTypes.func.isRequired,\n  onDialogSend: PropTypes.func.isRequired\n};\n\nexport default withStyles(selectDialogStyles)(NewCommitDialog);\n","/* eslint-disable array-callback-return */\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Table from '@material-ui/core/Table';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { LIST_ELEMENTS_PER_PAGE } from '../../constants/api';\nimport { COMMON_ELEMENT_ATTRIBUTE } from '../../constants/elements';\nimport {\n  getAlreadyReviewedFilter,\n  getSearchFilterOrDefault,\n  getToBeReviewedFilter,\n  isSearchFilter\n} from '../../utils/tableUtils';\nimport { renderElementFieldContent } from '../../utils/viewUtils';\nimport TableDynamicBody from '../Table/TableDynamicBody';\nimport TablePaginationFooter from '../Table/TablePaginationFooter';\nimport TableSortableHeader from '../Table/TableSortableHeader';\nimport TableToolbar from '../Table/TableToolbar';\nimport withTableFunctionality from '../Table/WithTableFunctionality';\n\nconst toBeReviewedTableColumns = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.ID, displayOnMobile: false },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, displayOnMobile: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP, displayOnMobile: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.AUTHOR, displayOnMobile: false }\n];\n\nconst alreadyReviewedTableColumns = [\n  ...toBeReviewedTableColumns,\n  { key: COMMON_ELEMENT_ATTRIBUTE.UPDATE_TIMESTAMP, displayOnMobile: false },\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS, displayOnMobile: true }\n];\n\nclass ProgrammerTable extends Component {\n  \n  shouldComponentUpdate(nextProps) {\n    return (\n      this.props.isLoading !== nextProps.isLoading ||\n      this.props.latestUpdateTimestamp !== nextProps.latestUpdateTimestamp ||\n      this.props.disabledEntries !== nextProps.disabledEntries\n    );\n  }\n\n  render() {\n    const {\n      isLoading,\n      tableToolbarTitle,\n      tableData,\n      latestUpdateTimestamp,\n      itemsCount,\n      displayError,\n      onElementClick,\n      loadCurrentPage,\n      onPageChange,\n      onSortingChange,\n      onFilterChange,\n      pageNumber,\n      sorting,\n      disabledEntries\n    } = this.props;\n    const isDisplayingNotReviewedItems = this.isDisplayingToBeReviewedItems();\n\n    return (\n      <>\n        <TableToolbar\n          toolbarTitle={tableToolbarTitle}\n          showAvailableUpdatesBadge={\n            !isLoading &&\n            tableData.length > 0 &&\n            tableData[pageNumber] != null &&\n            latestUpdateTimestamp > tableData[pageNumber].updateTimestamp\n          }\n          loadCurrentPage={loadCurrentPage}\n          onSearchQueryChange={newQuery => onFilterChange(getSearchFilterOrDefault(newQuery, getToBeReviewedFilter()))}\n          renderCustomContent={this.renderToolbarRadioButtons}\n        />\n        <Table>\n          <TableSortableHeader\n            tableColumns={isDisplayingNotReviewedItems ? toBeReviewedTableColumns : alreadyReviewedTableColumns}\n            sortingCriteria={sorting}\n            onSortingUpdate={onSortingChange}\n          />\n\n          <TableDynamicBody\n            tableColumns={isDisplayingNotReviewedItems ? toBeReviewedTableColumns : alreadyReviewedTableColumns}\n            tableData={tableData}\n            totalItemsCount={itemsCount}\n            displayError={displayError}\n            isLoading={isLoading}\n            pageNumber={pageNumber}\n            renderCellContent={renderElementFieldContent}\n            loadCurrentPage={loadCurrentPage}\n            onElementClick={onElementClick}\n            disabledEntries={disabledEntries}\n          />\n\n          <TablePaginationFooter\n            itemsCount={itemsCount}\n            itemsPerPage={LIST_ELEMENTS_PER_PAGE}\n            currentPage={pageNumber}\n            onPageChange={onPageChange}\n          />\n        </Table>\n      </>\n    );\n  }\n\n  renderToolbarRadioButtons = () => {\n    const isDisplayingNotReviewedItems = this.isDisplayingToBeReviewedItems();\n    const isSearching = isSearchFilter(this.props.filter);\n    return (\n      <>\n        <FormControlLabel\n          disabled={isSearching}\n          checked={!isDisplayingNotReviewedItems && !isSearching}\n          control={<Radio color=\"primary\" />}\n          label=\"Già revisionati\"\n          onChange={() => this.props.onFilterChange(getAlreadyReviewedFilter())}\n        />\n        <FormControlLabel\n          disabled={isSearching}\n          checked={isDisplayingNotReviewedItems && !isSearching}\n          control={<Radio color=\"primary\" />}\n          label=\"In attesa di revisione\"\n          onChange={() => this.props.onFilterChange(getToBeReviewedFilter())}\n        />\n      </>\n    );\n  };\n\n  // Used to determine if review buttons should be displayed\n  isDisplayingToBeReviewedItems = () => {\n    return (\n      this.props.filter.attribute === getToBeReviewedFilter().attribute &&\n      this.props.filter.valueMatches === getToBeReviewedFilter().valueMatches\n    );\n  };\n}\n\nProgrammerTable.displayName = 'ProgrammerTable';\nProgrammerTable.propTypes = {\n  tableToolbarTitle: PropTypes.string.isRequired,\n  tableData: PropTypes.array.isRequired,\n  itemsCount: PropTypes.number.isRequired,\n  loadPage: PropTypes.func.isRequired,\n  onSearchQueryChange: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  latestUpdateTimestamp: PropTypes.number.isRequired,\n  displayError: PropTypes.bool.isRequired,\n  onElementClick: PropTypes.func.isRequired,\n  disabledEntries: PropTypes.array.isRequired,\n\n  // injected by withTableFunctionality\n  pageNumber: PropTypes.number.isRequired,\n  sorting: PropTypes.object.isRequired,\n  filter: PropTypes.object.isRequired,\n  loadCurrentPage: PropTypes.func.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  onSortingChange: PropTypes.func.isRequired,\n  onFilterChange: PropTypes.func.isRequired\n};\n\nexport default withTableFunctionality(ProgrammerTable, getToBeReviewedFilter());\n","import { LIST_ELEMENTS_PER_PAGE, ELEMENT_TYPE } from '../../constants/api';\nimport { LIST_ACTION_TYPE } from './commonList';\n\nexport function retrieveCommitsListPageAction(\n  userRoleString,\n  pageNumber = 0,\n  sortingCriteria = { columnKey: null, direction: 'desc' },\n  filter = {}\n) {\n  return {\n    type: LIST_ACTION_TYPE.PAGE_REQUEST,\n    elementType: ELEMENT_TYPE.COMMITS,\n    userRoleString,\n    pageNumber,\n    limit: LIST_ELEMENTS_PER_PAGE,\n    sortingCriteria,\n    filter\n  };\n}\n\nexport function startCommitsListUpdatesAutoCheckingAction(userRoleString) {\n  return {\n    type: LIST_ACTION_TYPE.START_AUTO_CHECKING,\n    elementType: ELEMENT_TYPE.COMMITS,\n    userRoleString\n  };\n}\n\nexport function stopCommitsListUpdatesAutoCheckingAction(userRoleString) {\n  return {\n    type: LIST_ACTION_TYPE.STOP_AUTO_CHECKING,\n    elementType: ELEMENT_TYPE.COMMITS,\n    userRoleString\n  };\n}\n","import Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ElementDetailsDialog from '../../components/ElementDetailsDialog';\nimport NewCommitDialog from '../../components/NewCommitDialog/NewCommitDialog';\nimport ProgrammerTable from '../../components/ProgrammerTable';\nimport withErrorBoundary from '../../components/WithErrorBoundary';\nimport { ELEMENT_TYPE } from '../../constants/api';\nimport { COMMON_ELEMENT_ATTRIBUTE } from '../../constants/elements';\nimport { USER_ROLE_STRING, USER_TYPE_ID } from '../../constants/user';\nimport {\n  retrieveCommitsListPageAction,\n  startCommitsListUpdatesAutoCheckingAction,\n  stopCommitsListUpdatesAutoCheckingAction\n} from '../../redux/actions/commits';\nimport { performNewSearchAction } from '../../redux/actions/commonList';\nimport {\n  addElementAction,\n  getShortListForElementAction,\n  resetUIStateAction,\n  removeElementAction\n} from '../../redux/actions/views/programmer';\nimport { renderElementFieldContentAsText, retrieveElementFromListState, canElementBeRemoved } from '../../utils/viewUtils';\nimport { viewStyles } from '../styles';\n\nconst commitDetailsDialogFields = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.DESCRIPTION, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.BRANCH },\n  { key: COMMON_ELEMENT_ATTRIBUTE.COMPONENTS },\n  { key: COMMON_ELEMENT_ATTRIBUTE.AUTHOR },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP },\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS, label: 'Stato revisione' },\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVER, label: 'Revisionato da' }\n];\n\n/**\n * @class\n * This is the UI of programmer commits section.\n */\nclass CommitsCreationView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isShowingCommitDetails: false,\n      isShowingNewCommitDialog: false,\n      currentlyShowingCommit: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.startCommitsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]);\n  }\n\n  componentWillUnmount() {\n    this.props.stopCommitsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]);\n    this.props.resetUIState();\n  }\n\n  // Close details modal when removal is successful\n  static getDerivedStateFromProps(props, state) {\n    if (state.isShowingCommitDetails && props.removedElementsIds.includes(state.currentlyShowingCommit.id))\n      return { isShowingCommitDetails: false };\n    return null;\n  }\n\n  render() {\n    const {\n      classes,\n      commitsData,\n      retrieveCommitsListPage,\n      performNewSearch,\n      isLoadingBranches,\n      allBranches,\n      isAddingElement,\n      isAdditionSuccessful,\n      isAdditionFailed,\n      isRemovingElement,\n      removedElementsIds\n    } = this.props;\n    const { isShowingCommitDetails, isShowingNewCommitDialog, currentlyShowingCommit } = this.state;\n\n    return (\n      <>\n        <Grid container className={classes.root}>\n          <Grid item xs={12}>\n            <Grid container justify=\"center\">\n              <Paper className={classes.paper}>\n                <ProgrammerTable\n                  tableToolbarTitle=\"Lista richieste di commit\"\n                  tableData={commitsData.listPages}\n                  elementType={ELEMENT_TYPE.COMMITS}\n                  itemsCount={commitsData.totalItemsCount}\n                  loadPage={(pageNumber, sortingCriteria, filter) => {\n                    retrieveCommitsListPage(\n                      USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER],\n                      pageNumber,\n                      sortingCriteria,\n                      filter\n                    );\n                  }}\n                  onSearchQueryChange={searchQuery => {\n                    performNewSearch(\n                      retrieveCommitsListPageAction(USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]),\n                      searchQuery\n                    );\n                  }}\n                  isLoading={commitsData.isLoadingList}\n                  latestUpdateTimestamp={commitsData.latestUpdateTimestamp}\n                  displayError={commitsData.errorWhileFetchingData}\n                  onElementClick={(pageNumber, rowIndex, elementId) => {\n                    this.setState({\n                      isShowingCommitDetails: true,\n                      currentlyShowingCommit: retrieveElementFromListState(commitsData, elementId, pageNumber, rowIndex)\n                    });\n                  }}\n                  disabledEntries={removedElementsIds}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Fab\n          color=\"secondary\"\n          variant=\"extended\"\n          aria-label=\"Aggiungi\"\n          className={classes.fab}\n          onClick={this.onFabClick}\n        >\n          <AddIcon />\n          Nuovo commit\n        </Fab>\n\n        <NewCommitDialog\n          open={isShowingNewCommitDialog}\n          isLoadingBranches={isLoadingBranches}\n          allBranches={allBranches.map(branch => ({\n            value: branch.id,\n            label: branch.name\n          }))}\n          isLoading={isAddingElement}\n          isSuccessful={isAdditionSuccessful}\n          isFailed={isAdditionFailed}\n          onDialogClose={this.onCloseClicked}\n          onDialogSend={this.onSendClicked}\n        />\n\n        <ElementDetailsDialog\n          open={isShowingCommitDetails}\n          isLoading={isRemovingElement}\n          dialogTitle={`Richiesta di commit #${currentlyShowingCommit.id}`}\n          element={currentlyShowingCommit}\n          elementFields={commitDetailsDialogFields}\n          renderFieldContent={renderElementFieldContentAsText}\n          renderExtraActions={this.renderRemoveDialogButtonIfNeeded}\n          onClose={() => this.setState({ isShowingCommitDetails: false })}\n        />\n      </>\n    );\n  }\n\n  renderRemoveDialogButtonIfNeeded = () => {\n    const { currentlyShowingCommit } = this.state;\n    const { classes, removeElement, currentUser } = this.props;\n\n    if (canElementBeRemoved(currentlyShowingCommit, currentUser))\n      return (\n        <Button\n          classes={{ root: classes.errorColor }}\n          onClick={() => removeElement(ELEMENT_TYPE.COMMITS, currentlyShowingCommit.id)}\n        >\n          Rimuovi\n        </Button>\n      );\n  };\n\n  onCloseClicked = () => {\n    this.props.resetUIState();\n    this.showAddDialog(false);\n  };\n\n  onSendClicked = payload => {\n    this.props.addElement(ELEMENT_TYPE.COMMITS, payload);\n  };\n\n  showAddDialog = show => {\n    this.setState({\n      isShowingNewCommitDialog: show\n    });\n  };\n\n  onFabClick = () => {\n    this.props.getShortListForElement(ELEMENT_TYPE.BRANCHES);\n    this.showAddDialog(true);\n  };\n}\n\nCommitsCreationView.displayName = 'CommitsCreationView';\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user,\n\n    commitsData: state.lists[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].commits,\n    isLoadingBranches: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isLoadingBranches,\n    allBranches: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].allBranches,\n\n    isAddingElement: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isAddingElement,\n    isAdditionSuccessful: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isAdditionSuccessful,\n    isAdditionFailed: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isAdditionFailed,\n\n    isRemovingElement: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isRemovingElement,\n    removedElementsIds: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].removedElementsIds\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      retrieveCommitsListPage: retrieveCommitsListPageAction,\n      startCommitsListUpdatesAutoChecking: startCommitsListUpdatesAutoCheckingAction,\n      stopCommitsListUpdatesAutoChecking: stopCommitsListUpdatesAutoCheckingAction,\n      performNewSearch: performNewSearchAction,\n      getShortListForElement: getShortListForElementAction,\n      addElement: addElementAction,\n      removeElement: removeElementAction,\n      resetUIState: resetUIStateAction\n    },\n    dispatch\n  );\n};\n\nexport default withErrorBoundary(\n  withStyles(viewStyles)(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(CommitsCreationView)\n  )\n);\n","import { DialogTitle, withStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport SelectField from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport ResponsiveDialog from '../../components/ResponsiveDialog';\nimport { INSTALL_TYPE, INSTALL_TYPE_LABEL } from '../../constants/elements';\nimport { Control, Menu, MultiValue, NoOptionsMessage, ValueContainer } from '../Select';\nimport { selectDialogStyles } from '../../views/styles';\n\nconst selectComponents = {\n  NoOptionsMessage,\n  Control,\n  ValueContainer,\n  MultiValue,\n  Menu\n};\n\nconst initialDialogState = {\n  title: '',\n  description: '',\n  installationType: '',\n  destClients: [],\n  branch: '',\n  commits: [],\n  components: ''\n};\n\nclass NewSendRequestDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialDialogState;\n  }\n\n  render() {\n    const {\n      classes,\n      isLoadingClients,\n      allClients,\n      isLoadingBranches,\n      allBranches,\n      isLoadingCommits,\n      allCommits,\n      isLoading,\n      isFailed,\n      isSuccessful,\n      ...otherProps\n    } = this.props;\n    const { title, description, installationType, destClients, branch, commits, components } = this.state;\n\n    if (!isLoading && !isFailed && isSuccessful) this.onDialogClose();\n\n    return (\n      <ResponsiveDialog {...otherProps} isLoading={isLoading && !isFailed} scroll=\"body\">\n        <DialogTitle>Inserisci una nuova richiesta di invio</DialogTitle>\n        <DialogContent classes={{ root: classes.dialogContent }}>\n          <Grid container spacing={16}>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Titolo\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                value={title}\n                onChange={event => this.onInputChanged('title', event)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Descrizione\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                value={description}\n                onChange={event => this.onInputChanged('description', event)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Select\n                classes={classes}\n                textFieldProps={{\n                  label: 'Cliente/i',\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }}\n                components={selectComponents}\n                options={allClients}\n                placeholder=\"Seleziona uno o più clienti\"\n                value={destClients}\n                onChange={this.onSelectInputChanged('destClients')}\n                isMulti\n                isLoading={isLoadingClients}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Select\n                classes={classes}\n                textFieldProps={{\n                  label: 'Branch',\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }}\n                options={allBranches}\n                components={selectComponents}\n                value={branch}\n                onChange={this.onSelectInputChanged('branch')}\n                placeholder=\"Seleziona un branch\"\n                isClearable\n                isLoading={isLoadingBranches}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Select\n                classes={classes}\n                textFieldProps={{\n                  label: 'Commits',\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }}\n                components={selectComponents}\n                options={allCommits}\n                placeholder=\"Seleziona uno o più commit\"\n                value={commits}\n                onChange={this.onSelectInputChanged('commits')}\n                isMulti\n                isLoading={isLoadingCommits}\n              />\n            </Grid>\n            <Grid item xs={12} md={9}>\n              <TextField\n                label=\"Componenti\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                value={components}\n                onChange={event => this.onInputChanged('components', event)}\n              />\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <FormControl variant=\"outlined\" fullWidth style={{ marginTop: 16 }}>\n                <InputLabel htmlFor=\"installationType\">Tipo installazione</InputLabel>\n                <SelectField\n                  value={installationType}\n                  onChange={event => this.onInputChanged('installationType', event)}\n                  input={<OutlinedInput id=\"installationType\" labelWidth={128 /* Hardcoded value */} />}\n                >\n                  {/* Here we will make a server call to get all the installtion types */}\n                  <MenuItem value={INSTALL_TYPE.DURING_EXECUTION}>{INSTALL_TYPE_LABEL.DURING_EXECUTION}</MenuItem>\n                  <MenuItem value={INSTALL_TYPE.NEEDS_SHUTDOWN}>{INSTALL_TYPE_LABEL.NEEDS_SHUTDOWN}</MenuItem>\n                </SelectField>\n              </FormControl>\n            </Grid>\n            {isFailed && (\n              <Grid item xs={12}>\n                <Typography variant=\"subtitle1\" color=\"error\" gutterBottom>\n                  Errore durante l'aggiunta di una nuova richiesta di invio, riprova.\n                </Typography>\n              </Grid>\n            )}\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={this.onDialogClose}>\n            Annulla\n          </Button>\n          <Button color=\"primary\" onClick={this.onDialogSend}>\n            Invia\n          </Button>\n        </DialogActions>\n      </ResponsiveDialog>\n    );\n  }\n\n  onDialogClose = () => {\n    const { onDialogClose } = this.props;\n\n    this.setState(initialDialogState);\n\n    onDialogClose();\n  };\n\n  onDialogSend = () => {\n    const { onDialogSend } = this.props;\n    const { title, description, installationType, destClients, branch, commits, components } = this.state;\n\n    onDialogSend({\n      title,\n      description,\n      install_type: installationType,\n      dest_clients: destClients.map(element => element.value),\n      branch: branch.value,\n      commits: commits.map(element => element.value),\n      components\n    });\n  };\n\n  onInputChanged = (name, event) => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  onSelectInputChanged = name => value => {\n    this.setState({\n      [name]: value\n    });\n  };\n}\n\nNewSendRequestDialog.displayName = 'NewSendRequestDialog';\nNewSendRequestDialog.propTypes = {\n  isLoadingClients: PropTypes.bool.isRequired,\n  allClients: PropTypes.array.isRequired,\n  isLoadingBranches: PropTypes.bool.isRequired,\n  allBranches: PropTypes.array.isRequired,\n  isLoadingCommits: PropTypes.bool.isRequired,\n  allCommits: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  isSuccessful: PropTypes.bool.isRequired,\n  isFailed: PropTypes.bool.isRequired,\n  onDialogClose: PropTypes.func.isRequired,\n  onDialogSend: PropTypes.func.isRequired\n};\n\nexport default withStyles(selectDialogStyles)(NewSendRequestDialog);\n","import Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ElementDetailsDialog from '../../components/ElementDetailsDialog';\nimport NewSendRequestDialog from '../../components/NewSendRequestDialog';\nimport ProgrammerTable from '../../components/ProgrammerTable';\nimport withErrorBoundary from '../../components/WithErrorBoundary';\nimport { ELEMENT_TYPE } from '../../constants/api';\nimport { COMMON_ELEMENT_ATTRIBUTE, SEND_REQUEST_ATTRIBUTE } from '../../constants/elements';\nimport { USER_ROLE_STRING, USER_TYPE_ID } from '../../constants/user';\nimport { performNewSearchAction } from '../../redux/actions/commonList';\nimport {\n  retrieveSendRequestsListPageAction,\n  startSendRequestsListUpdatesAutoCheckingAction,\n  stopSendRequestsListUpdatesAutoCheckingAction\n} from '../../redux/actions/sendRequests';\nimport {\n  addElementAction,\n  getShortListForElementAction,\n  resetUIStateAction,\n  removeElementAction\n} from '../../redux/actions/views/programmer';\nimport { renderElementFieldContentAsText, retrieveElementFromListState, canElementBeRemoved } from '../../utils/viewUtils';\nimport { viewStyles } from '../styles';\n\nconst sendRequestDetailsDialogFields = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.DESCRIPTION, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.COMPONENTS, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.BRANCH },\n  { key: SEND_REQUEST_ATTRIBUTE.INSTALL_TYPE },\n  { key: SEND_REQUEST_ATTRIBUTE.LINKED_COMMITS },\n  { key: SEND_REQUEST_ATTRIBUTE.RECIPIENT_CLIENTS },\n  { key: COMMON_ELEMENT_ATTRIBUTE.AUTHOR },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP },\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS, label: 'Stato revisione' },\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVER, label: 'Revisionato da' }\n];\n\n/**\n * @class\n * This is the UI of programmer send requests section.\n */\nclass SendRequestsCreationView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isShowingSendRequestDetails: false,\n      isShowingNewSendRequestDialog: false,\n      currentlyShowingSendRequest: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.startSendRequestsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]);\n  }\n\n  componentWillUnmount() {\n    this.props.stopSendRequestsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]);\n    this.props.resetUIState();\n  }\n\n  // Close details modal when removal is successful\n  static getDerivedStateFromProps(props, state) {\n    if (state.isShowingSendRequestDetails && props.removedElementsIds.includes(state.currentlyShowingSendRequest.id))\n      return { isShowingSendRequestDetails: false };\n    return null;\n  }\n\n  render() {\n    const {\n      classes,\n      sendRequestsData,\n      retrieveSendRequestsListPage,\n      performNewSearch,\n      isLoadingClients,\n      allClients,\n      isLoadingBranches,\n      allBranches,\n      isLoadingCommits,\n      allCommits,\n      isAddingElement,\n      isAdditionSuccessful,\n      isAdditionFailed,\n      isRemovingElement,\n      removedElementsIds\n    } = this.props;\n    const { isShowingSendRequestDetails, isShowingNewSendRequestDialog, currentlyShowingSendRequest } = this.state;\n\n    return (\n      <>\n        <Grid container className={classes.root}>\n          <Grid item xs={12}>\n            <Grid container justify=\"center\">\n              <Paper className={classes.paper}>\n                <ProgrammerTable\n                  tableToolbarTitle=\"Lista richieste di invio\"\n                  tableData={sendRequestsData.listPages}\n                  elementType={ELEMENT_TYPE.SEND_REQUESTS}\n                  itemsCount={sendRequestsData.totalItemsCount}\n                  loadPage={(pageNumber, sortingCriteria, filter) => {\n                    retrieveSendRequestsListPage(\n                      USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER],\n                      pageNumber,\n                      sortingCriteria,\n                      filter\n                    );\n                  }}\n                  isLoading={sendRequestsData.isLoadingList}\n                  onSearchQueryChange={searchQuery => {\n                    performNewSearch(\n                      retrieveSendRequestsListPageAction(USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]),\n                      searchQuery\n                    );\n                  }}\n                  latestUpdateTimestamp={sendRequestsData.latestUpdateTimestamp}\n                  displayError={sendRequestsData.errorWhileFetchingData}\n                  onElementClick={(pageNumber, rowIndex, elementId) => {\n                    this.setState({\n                      isShowingSendRequestDetails: true,\n                      currentlyShowingSendRequest: retrieveElementFromListState(\n                        sendRequestsData,\n                        elementId,\n                        pageNumber,\n                        rowIndex\n                      )\n                    });\n                  }}\n                  disabledEntries={removedElementsIds}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Fab\n          color=\"secondary\"\n          variant=\"extended\"\n          aria-label=\"Aggiungi\"\n          className={classes.fab}\n          onClick={this.onFabClick}\n        >\n          <AddIcon />\n          Nuova richiesta di invio\n        </Fab>\n\n        <NewSendRequestDialog\n          open={isShowingNewSendRequestDialog}\n          isLoadingClients={isLoadingClients}\n          allClients={allClients.map(client => ({\n            value: client.user_id,\n            label: client.name\n          }))}\n          isLoadingBranches={isLoadingBranches}\n          allBranches={allBranches.map(branch => ({\n            value: branch.id,\n            label: branch.name\n          }))}\n          isLoadingCommits={isLoadingCommits}\n          allCommits={allCommits.map(commit => ({\n            value: commit.commit_id,\n            label: `[${commit.commit_id}] ${commit.title}`\n          }))}\n          isLoading={isAddingElement}\n          isSuccessful={isAdditionSuccessful}\n          isFailed={isAdditionFailed}\n          onDialogClose={this.onCloseClicked}\n          onDialogSend={this.onSendClicked}\n        />\n\n        <ElementDetailsDialog\n          open={isShowingSendRequestDetails}\n          isLoading={isRemovingElement}\n          dialogTitle={`Richiesta di invio #${currentlyShowingSendRequest.id}`}\n          element={currentlyShowingSendRequest}\n          elementFields={sendRequestDetailsDialogFields}\n          renderFieldContent={renderElementFieldContentAsText}\n          renderExtraActions={this.renderRemoveDialogButtonIfNeeded}\n          onClose={() => this.setState({ isShowingSendRequestDetails: false })}\n        />\n      </>\n    );\n  }\n\n  renderRemoveDialogButtonIfNeeded = () => {\n    const { currentlyShowingSendRequest } = this.state;\n    const { classes, removeElement, currentUser } = this.props;\n\n    if (canElementBeRemoved(currentlyShowingSendRequest, currentUser))\n      return (\n        <Button\n          classes={{ root: classes.errorColor }}\n          onClick={() => removeElement(ELEMENT_TYPE.SEND_REQUESTS, currentlyShowingSendRequest.id)}\n        >\n          Rimuovi\n        </Button>\n      );\n  };\n\n  onCloseClicked = () => {\n    this.props.resetUIState();\n    this.showAddDialog(false);\n  };\n\n  onSendClicked = payload => {\n    this.props.addElement(ELEMENT_TYPE.SEND_REQUESTS, payload);\n  };\n\n  showAddDialog = show => {\n    this.setState({\n      isShowingNewSendRequestDialog: show\n    });\n  };\n\n  onFabClick = () => {\n    const { getShortListForElement } = this.props;\n\n    getShortListForElement(ELEMENT_TYPE.CLIENTS);\n    getShortListForElement(ELEMENT_TYPE.BRANCHES);\n    getShortListForElement(ELEMENT_TYPE.COMMITS);\n\n    this.showAddDialog(true);\n  };\n\n  onInputChanged = (name, event) => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n}\n\nSendRequestsCreationView.displayName = 'SendRequestsCreationView';\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user,\n\n    sendRequestsData: state.lists[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].sendRequests,\n    isLoadingClients: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isLoadingClients,\n    allClients: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].allClients,\n    isLoadingBranches: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isLoadingBranches,\n    allBranches: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].allBranches,\n    isLoadingCommits: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isLoadingCommits,\n    allCommits: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].allCommits,\n\n    isAddingElement: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isAddingElement,\n    isAdditionSuccessful: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isAdditionSuccessful,\n    isAdditionFailed: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isAdditionFailed,\n\n    isRemovingElement: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].isRemovingElement,\n    removedElementsIds: state.views[USER_ROLE_STRING[USER_TYPE_ID.PROGRAMMER]].removedElementsIds\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      retrieveSendRequestsListPage: retrieveSendRequestsListPageAction,\n      startSendRequestsListUpdatesAutoChecking: startSendRequestsListUpdatesAutoCheckingAction,\n      stopSendRequestsListUpdatesAutoChecking: stopSendRequestsListUpdatesAutoCheckingAction,\n      performNewSearch: performNewSearchAction,\n      getShortListForElement: getShortListForElementAction,\n      addElement: addElementAction,\n      removeElement: removeElementAction,\n      resetUIState: resetUIStateAction\n    },\n    dispatch\n  );\n};\n\nexport default withErrorBoundary(\n  withStyles(viewStyles)(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(SendRequestsCreationView)\n  )\n);\n","/* eslint-disable array-callback-return */\nimport Badge from '@material-ui/core/Badge';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { LIST_ELEMENTS_PER_PAGE, ELEMENT_TYPE } from '../../constants/api';\nimport { APPROVAL_STATUS, COMMON_ELEMENT_ATTRIBUTE } from '../../constants/elements';\nimport {\n  getAlreadyReviewedFilter,\n  getSearchFilterOrDefault,\n  getToBeReviewedFilter,\n  isSearchFilter\n} from '../../utils/tableUtils';\nimport { renderElementFieldContent } from '../../utils/viewUtils';\nimport StatusIcon from '../StatusIcon';\nimport TableDynamicBody from '../Table/TableDynamicBody';\nimport TableSortableHeader from '../Table/TableSortableHeader';\nimport TablePaginationFooter from '../Table/TablePaginationFooter';\nimport TableToolbar from '../Table/TableToolbar';\nimport withTableFunctionality from '../Table/WithTableFunctionality';\n\nconst tableStyles = {\n  errorBadge: {\n    width: '16px',\n    height: '16px'\n  }\n};\n\nconst REVIEW_BUTTONS_COLUMN = 'REVIEW_BUTTONS_COLUMN';\n\nconst historyTableColumns = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.ID, displayOnMobile: false },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, displayOnMobile: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP, displayOnMobile: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.AUTHOR, displayOnMobile: false },\n  { key: COMMON_ELEMENT_ATTRIBUTE.UPDATE_TIMESTAMP, displayOnMobile: false },\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS, displayOnMobile: true }\n];\n\nconst reviewTableColumns = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.ID, displayOnMobile: false },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, displayOnMobile: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP, displayOnMobile: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.AUTHOR, displayOnMobile: false },\n  {\n    label: 'Azioni',\n    key: REVIEW_BUTTONS_COLUMN,\n    displayOnMobile: true,\n    notSortable: true,\n    alignOption: 'center'\n  }\n];\n\n/**\n * @class\n * Table which allows the user to show previously reviewed commits/send requests and to approve\n * or reject them.\n * Through radio buttons on the toolbar, the user can switch between the two functionalities. In\n * the code, the first is called \"history mode\", while the second \"review mode\".\n * Search functionality acts regardless of the selected mode (in fact, radio buttons are disabled during search).\n */\nclass RevisionTable extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return (\n      this.props.isLoading !== nextProps.isLoading ||\n      this.props.latestUpdateTimestamp !== nextProps.latestUpdateTimestamp ||\n      this.props.reviewInProgressItems !== nextProps.reviewInProgressItems ||\n      this.props.successfullyReviewedItems !== nextProps.successfullyReviewedItems ||\n      this.props.failedReviewItems !== nextProps.failedReviewItems\n    );\n  }\n\n  render() {\n    const {\n      tableData,\n      elementType,\n      itemsCount,\n      isLoading,\n      latestUpdateTimestamp,\n      displayError,\n      loadCurrentPage,\n      onPageChange,\n      onSortingChange,\n      onFilterChange,\n      pageNumber,\n      sorting,\n      successfullyReviewedItems\n    } = this.props;\n    const reviewMode = this.isReviewMode();\n\n    return (\n      <>\n        <TableToolbar\n          toolbarTitle={\n            elementType === ELEMENT_TYPE.COMMITS ? 'Revisione commit' : 'Revisione richieste di invio'\n          }\n          showAvailableUpdatesBadge={\n            !isLoading &&\n            tableData.length > 0 &&\n            tableData[pageNumber] != null &&\n            latestUpdateTimestamp > tableData[pageNumber].updateTimestamp\n          }\n          loadCurrentPage={loadCurrentPage}\n          onSearchQueryChange={newQuery =>\n            onFilterChange(getSearchFilterOrDefault(newQuery, getAlreadyReviewedFilter()))\n          }\n          renderCustomContent={this.renderToolbarRadioButtons}\n        />\n        <Table>\n          <TableSortableHeader\n            tableColumns={reviewMode ? reviewTableColumns : historyTableColumns}\n            sortingCriteria={sorting}\n            onSortingUpdate={onSortingChange}\n          />\n\n          <TableDynamicBody\n            tableColumns={reviewMode ? reviewTableColumns : historyTableColumns}\n            tableData={tableData}\n            totalItemsCount={itemsCount}\n            displayError={displayError}\n            isLoading={isLoading}\n            pageNumber={pageNumber}\n            renderCellContent={this.renderCellContent}\n            loadCurrentPage={loadCurrentPage}\n            onElementClick={this.onElementClick}\n            disabledEntries={Object.keys(successfullyReviewedItems).map(key => parseInt(key))}\n          />\n\n          <TablePaginationFooter\n            itemsCount={itemsCount}\n            itemsPerPage={LIST_ELEMENTS_PER_PAGE}\n            currentPage={pageNumber}\n            onPageChange={onPageChange}\n          />\n        </Table>\n      </>\n    );\n  }\n\n  renderToolbarRadioButtons = () => {\n    const reviewMode = this.isReviewMode();\n    const isSearching = isSearchFilter(this.props.filter);\n    return (\n      <>\n        <FormControlLabel\n          disabled={isSearching}\n          checked={!reviewMode && !isSearching}\n          control={<Radio color=\"primary\" />}\n          label=\"Già revisionati\"\n          onChange={() => this.props.onFilterChange(getAlreadyReviewedFilter())}\n        />\n        <FormControlLabel\n          disabled={isSearching}\n          checked={reviewMode && !isSearching}\n          control={<Radio color=\"primary\" />}\n          label=\"Da revisionare\"\n          onChange={() => this.props.onFilterChange(getToBeReviewedFilter())}\n        />\n      </>\n    );\n  };\n\n  renderCellContent = (columnKey, value, elementId) => {\n    const { classes, onItemReview, successfullyReviewedItems, reviewInProgressItems, failedReviewItems } = this.props;\n\n    switch (columnKey) {\n      case REVIEW_BUTTONS_COLUMN:\n        return (\n          <>\n            {successfullyReviewedItems[elementId] != null ? (\n              <StatusIcon status={successfullyReviewedItems[elementId]} />\n            ) : failedReviewItems[elementId] != null ? (\n              <IconButton\n                onClick={event => {\n                  onItemReview(elementId, this.props.failedReviewItems[elementId]);\n                  event.stopPropagation();\n                }}\n              >\n                <Badge classes={{ badge: classes.errorBadge }} badgeContent=\"!\" color=\"error\">\n                  <RefreshIcon color=\"action\" />\n                </Badge>\n              </IconButton>\n            ) : reviewInProgressItems.includes(elementId) ? (\n              <CircularProgress size={24} />\n            ) : (\n              <>\n                <IconButton\n                  onClick={event => {\n                    onItemReview(elementId, APPROVAL_STATUS.REJECTED);\n                    event.stopPropagation();\n                  }}\n                >\n                  <StatusIcon status={APPROVAL_STATUS.REJECTED} />\n                </IconButton>\n                <IconButton\n                  onClick={event => {\n                    onItemReview(elementId, APPROVAL_STATUS.APPROVED);\n                    event.stopPropagation();\n                  }}\n                >\n                  <StatusIcon status={APPROVAL_STATUS.APPROVED} />\n                </IconButton>\n              </>\n            )}\n          </>\n        );\n      default:\n        return renderElementFieldContent(columnKey, value, elementId);\n    }\n  };\n\n  // Commits- and SendRequestsRevisionView need to know whether an element is clicked\n  // while reviewing to display a slightly different modal\n  onElementClick = (pageNumber, rowIndex, elementId) => {\n    this.props.onElementClick(pageNumber, rowIndex, elementId, this.isReviewMode());\n  };\n\n  // Used to determine if review buttons should be displayed\n  isReviewMode = () => {\n    return (\n      this.props.filter.attribute === getToBeReviewedFilter().attribute &&\n      this.props.filter.valueMatches === getToBeReviewedFilter().valueMatches\n    );\n  };\n}\n\nRevisionTable.displayName = 'RevisionTable';\nRevisionTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  tableData: PropTypes.array.isRequired,\n  elementType: PropTypes.oneOf([ELEMENT_TYPE.COMMITS, ELEMENT_TYPE.SEND_REQUESTS]).isRequired,\n  itemsCount: PropTypes.number.isRequired,\n  loadPage: PropTypes.func.isRequired,\n  onSearchQueryChange: PropTypes.func.isRequired,\n  onItemReview: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  latestUpdateTimestamp: PropTypes.number.isRequired,\n  displayError: PropTypes.bool.isRequired,\n  onElementClick: PropTypes.func.isRequired,\n\n  reviewInProgressItems: PropTypes.array.isRequired,\n  successfullyReviewedItems: PropTypes.object.isRequired,\n  failedReviewItems: PropTypes.object.isRequired,\n\n  // injected by withTableFunctionality\n  pageNumber: PropTypes.number.isRequired,\n  sorting: PropTypes.object.isRequired,\n  filter: PropTypes.object.isRequired,\n  loadCurrentPage: PropTypes.func.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  onSortingChange: PropTypes.func.isRequired,\n  onFilterChange: PropTypes.func.isRequired\n};\n\nexport default withTableFunctionality(withStyles(tableStyles)(RevisionTable), getToBeReviewedFilter());\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ElementDetailsDialog from '../../components/ElementDetailsDialog';\nimport RevisionTable from '../../components/RevisionTable';\nimport withErrorBoundary from '../../components/WithErrorBoundary';\nimport { ELEMENT_TYPE } from '../../constants/api';\nimport { APPROVAL_STATUS, COMMON_ELEMENT_ATTRIBUTE } from '../../constants/elements';\nimport { USER_ROLE_STRING, USER_TYPE_ID } from '../../constants/user';\nimport {\n  retrieveCommitsListPageAction,\n  startCommitsListUpdatesAutoCheckingAction,\n  stopCommitsListUpdatesAutoCheckingAction\n} from '../../redux/actions/commits';\nimport { performNewSearchAction } from '../../redux/actions/commonList';\nimport { reviewItemAction, TECHNICAL_AREA_MANAGER_ACTION_TYPE } from '../../redux/actions/views/technicalAreaManager';\nimport { renderElementFieldContentAsText, retrieveElementFromListState } from '../../utils/viewUtils';\nimport { viewStyles } from '../styles';\n\nconst commitDetailsDialogFieldsForReview = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.DESCRIPTION, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.BRANCH },\n  { key: COMMON_ELEMENT_ATTRIBUTE.COMPONENTS },\n  { key: COMMON_ELEMENT_ATTRIBUTE.AUTHOR },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP }\n];\n\nconst commitDetailsDialogFields = [\n  ...commitDetailsDialogFieldsForReview,\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS, label: 'Stato revisione' },\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVER, label: 'Revisionato da' }\n];\n\nclass CommitsRevisionView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // its first value doesn't matter since it's updated when an element is clicked\n      // it is used to determine whether to display approve/reject buttons in details dialog\n      isReviewingCommits: true,\n\n      isShowingCommitDetails: false,\n      currentlyShowingCommit: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.startCommitsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]);\n  }\n\n  componentWillUnmount() {\n    this.props.stopCommitsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]);\n    this.props.resetUI();\n  }\n\n  // Close details modal when review is successful\n  static getDerivedStateFromProps(props, state) {\n    if (state.isReviewingCommits && state.currentlyShowingCommit.id in props.successfullyReviewedItems)\n      return { isShowingCommitDetails: false };\n    return null;\n  }\n\n  render() {\n    const {\n      classes,\n      commitsData,\n      retrieveCommitsListPage,\n      performNewSearch,\n      reviewItem,\n      reviewInProgressItems,\n      successfullyReviewedItems,\n      failedReviewItems\n    } = this.props;\n    const { isShowingCommitDetails, isReviewingCommits, currentlyShowingCommit } = this.state;\n\n    return (\n      <>\n        <Grid container className={classes.root}>\n          <Grid item xs={12}>\n            <Grid container justify=\"center\">\n              <Paper className={classes.paper}>\n                <RevisionTable\n                  tableData={commitsData.listPages}\n                  elementType={ELEMENT_TYPE.COMMITS}\n                  itemsCount={commitsData.totalItemsCount}\n                  isLoading={commitsData.isLoadingList}\n                  latestUpdateTimestamp={commitsData.latestUpdateTimestamp}\n                  displayError={commitsData.errorWhileFetchingData}\n                  loadPage={(pageNumber, sortingCriteria, filter) => {\n                    retrieveCommitsListPage(\n                      USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER],\n                      pageNumber,\n                      sortingCriteria,\n                      filter\n                    );\n                  }}\n                  onSearchQueryChange={searchQuery => {\n                    performNewSearch(\n                      retrieveCommitsListPageAction(USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]),\n                      searchQuery\n                    );\n                  }}\n                  onItemReview={(elementId, approvalStatus) =>\n                    reviewItem(ELEMENT_TYPE.COMMITS, elementId, approvalStatus)\n                  }\n                  onElementClick={(pageNumber, rowIndex, elementId, isReviewing) => {\n                    this.setState({\n                      isReviewingCommits: isReviewing,\n                      isShowingCommitDetails: true,\n                      currentlyShowingCommit: retrieveElementFromListState(commitsData, elementId, pageNumber, rowIndex)\n                    });\n                  }}\n                  reviewInProgressItems={reviewInProgressItems}\n                  successfullyReviewedItems={successfullyReviewedItems}\n                  failedReviewItems={failedReviewItems}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <ElementDetailsDialog\n          open={isShowingCommitDetails}\n          isLoading={reviewInProgressItems.includes(currentlyShowingCommit.id)}\n          dialogTitle={`Richiesta di commit #${currentlyShowingCommit.id}`}\n          element={currentlyShowingCommit}\n          elementFields={isReviewingCommits ? commitDetailsDialogFieldsForReview : commitDetailsDialogFields}\n          renderFieldContent={renderElementFieldContentAsText}\n          onClose={this.hideDetailsModal}\n          backButtonToTheLeft={isReviewingCommits}\n          renderExtraActions={isReviewingCommits ? this.renderApproveRejectModalActions : undefined}\n        />\n      </>\n    );\n  }\n\n  renderApproveRejectModalActions = () => {\n    const { classes, reviewItem } = this.props;\n    const { currentlyShowingCommit } = this.state;\n\n    return (\n      <>\n        <Button\n          classes={{ root: classes.errorColor }}\n          onClick={() => reviewItem(ELEMENT_TYPE.COMMITS, currentlyShowingCommit.id, APPROVAL_STATUS.REJECTED)}\n        >\n          Rifiuta\n        </Button>\n        <Button\n          classes={{ root: classes.approvedColor }}\n          onClick={() => reviewItem(ELEMENT_TYPE.COMMITS, currentlyShowingCommit.id, APPROVAL_STATUS.APPROVED)}\n        >\n          Approva\n        </Button>\n      </>\n    );\n  };\n\n  hideDetailsModal = () => {\n    this.setState({ isShowingCommitDetails: false });\n  };\n}\n\nCommitsRevisionView.displayName = 'CommitsRevisionView';\n\nconst mapStateToProps = state => {\n  return {\n    commitsData: state.lists[USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]].commits,\n    reviewInProgressItems: state.views[USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]].commits.reviewInProgress,\n    successfullyReviewedItems:\n      state.views[USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]].commits.successfullyReviewed,\n    failedReviewItems: state.views[USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]].commits.reviewFailed\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      retrieveCommitsListPage: retrieveCommitsListPageAction,\n      startCommitsListUpdatesAutoChecking: startCommitsListUpdatesAutoCheckingAction,\n      stopCommitsListUpdatesAutoChecking: stopCommitsListUpdatesAutoCheckingAction,\n      performNewSearch: performNewSearchAction,\n      reviewItem: reviewItemAction,\n      resetUI: () => ({ type: TECHNICAL_AREA_MANAGER_ACTION_TYPE.RESET_UI })\n    },\n    dispatch\n  );\n};\n\nexport default withErrorBoundary(\n  withStyles(viewStyles)(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(CommitsRevisionView)\n  )\n);\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ElementDetailsDialog from '../../components/ElementDetailsDialog';\nimport RevisionTable from '../../components/RevisionTable';\nimport withErrorBoundary from '../../components/WithErrorBoundary';\nimport { ELEMENT_TYPE } from '../../constants/api';\nimport { APPROVAL_STATUS, COMMON_ELEMENT_ATTRIBUTE, SEND_REQUEST_ATTRIBUTE } from '../../constants/elements';\nimport { USER_ROLE_STRING, USER_TYPE_ID } from '../../constants/user';\nimport { performNewSearchAction } from '../../redux/actions/commonList';\nimport {\n  retrieveSendRequestsListPageAction,\n  startSendRequestsListUpdatesAutoCheckingAction,\n  stopSendRequestsListUpdatesAutoCheckingAction\n} from '../../redux/actions/sendRequests';\nimport { reviewItemAction, TECHNICAL_AREA_MANAGER_ACTION_TYPE } from '../../redux/actions/views/technicalAreaManager';\nimport { renderElementFieldContentAsText, retrieveElementFromListState } from '../../utils/viewUtils';\nimport { viewStyles } from '../styles';\n\nconst sendRequestDetailsDialogFieldsForReview = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.DESCRIPTION, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.COMPONENTS, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.BRANCH },\n  { key: SEND_REQUEST_ATTRIBUTE.INSTALL_TYPE },\n  { key: SEND_REQUEST_ATTRIBUTE.LINKED_COMMITS },\n  { key: SEND_REQUEST_ATTRIBUTE.RECIPIENT_CLIENTS },\n  { key: COMMON_ELEMENT_ATTRIBUTE.AUTHOR },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP }\n];\n\nconst sendRequestDetailsDialogFields = [\n  ...sendRequestDetailsDialogFieldsForReview,\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVAL_STATUS, label: 'Stato revisione' },\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVER, label: 'Revisionato da' }\n];\n\nclass SendRequestsRevisionView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // its first value doesn't matter since it's updated when an element is clicked\n      // it is used to determine whether to display approve/reject buttons in details dialog\n      isReviewingSendRequests: true,\n\n      isShowingSendRequestDetails: false,\n      currentlyShowingSendRequest: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.startSendRequestsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]);\n  }\n\n  componentWillUnmount() {\n    this.props.stopSendRequestsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]);\n    this.props.resetUI();\n  }\n\n  // Close details modal when review is successful\n  static getDerivedStateFromProps(props, state) {\n    if (state.isReviewingSendRequests && state.currentlyShowingSendRequest.id in props.successfullyReviewedItems)\n      return { isShowingSendRequestDetails: false };\n    return null;\n  }\n\n  render() {\n    const {\n      classes,\n      sendRequestsData,\n      retrieveSendRequestsListPage,\n      performNewSearch,\n      reviewItem,\n      reviewInProgressItems,\n      successfullyReviewedItems,\n      failedReviewItems\n    } = this.props;\n    const { isReviewingSendRequests, isShowingSendRequestDetails, currentlyShowingSendRequest } = this.state;\n\n    return (\n      <>\n        <Grid container className={classes.root}>\n          <Grid item xs={12}>\n            <Grid container justify=\"center\">\n              <Paper className={classes.paper}>\n                <RevisionTable\n                  tableData={sendRequestsData.listPages}\n                  elementType={ELEMENT_TYPE.SEND_REQUESTS}\n                  itemsCount={sendRequestsData.totalItemsCount}\n                  isLoading={sendRequestsData.isLoadingList}\n                  latestUpdateTimestamp={sendRequestsData.latestUpdateTimestamp}\n                  displayError={sendRequestsData.errorWhileFetchingData}\n                  loadPage={(pageNumber, sortingCriteria, filter) => {\n                    retrieveSendRequestsListPage(\n                      USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER],\n                      pageNumber,\n                      sortingCriteria,\n                      filter\n                    );\n                  }}\n                  onSearchQueryChange={searchQuery => {\n                    performNewSearch(\n                      retrieveSendRequestsListPageAction(USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]),\n                      searchQuery\n                    );\n                  }}\n                  onItemReview={(elementId, approvalStatus) =>\n                    reviewItem(ELEMENT_TYPE.SEND_REQUESTS, elementId, approvalStatus)\n                  }\n                  onElementClick={(pageNumber, rowIndex, elementId, isReviewing) => {\n                    this.setState({\n                      isReviewingSendRequests: isReviewing,\n                      isShowingSendRequestDetails: true,\n                      currentlyShowingSendRequest: retrieveElementFromListState(\n                        sendRequestsData,\n                        elementId,\n                        pageNumber,\n                        rowIndex\n                      )\n                    });\n                  }}\n                  reviewInProgressItems={reviewInProgressItems}\n                  successfullyReviewedItems={successfullyReviewedItems}\n                  failedReviewItems={failedReviewItems}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <ElementDetailsDialog\n          open={isShowingSendRequestDetails}\n          isLoading={reviewInProgressItems.includes(currentlyShowingSendRequest.id)}\n          dialogTitle={`Richiesta di invio #${currentlyShowingSendRequest.id}`}\n          element={currentlyShowingSendRequest}\n          elementFields={\n            isReviewingSendRequests ? sendRequestDetailsDialogFieldsForReview : sendRequestDetailsDialogFields\n          }\n          renderFieldContent={renderElementFieldContentAsText}\n          onClose={this.hideDetailsModal}\n          backButtonToTheLeft={isReviewingSendRequests}\n          renderExtraActions={isReviewingSendRequests ? this.renderApproveRejectModalActions : undefined}\n        />\n      </>\n    );\n  }\n\n  renderApproveRejectModalActions = () => {\n    const { classes, reviewItem } = this.props;\n    const { currentlyShowingSendRequest } = this.state;\n\n    return (\n      <>\n        <Button\n          classes={{ root: classes.errorColor }}\n          onClick={() =>\n            reviewItem(ELEMENT_TYPE.SEND_REQUESTS, currentlyShowingSendRequest.id, APPROVAL_STATUS.REJECTED)\n          }\n        >\n          Rifiuta\n        </Button>\n        <Button\n          classes={{ root: classes.approvedColor }}\n          onClick={() =>\n            reviewItem(ELEMENT_TYPE.SEND_REQUESTS, currentlyShowingSendRequest.id, APPROVAL_STATUS.APPROVED)\n          }\n        >\n          Approva\n        </Button>\n      </>\n    );\n  };\n\n  hideDetailsModal = () => {\n    this.setState({ isShowingSendRequestDetails: false });\n  };\n}\n\nSendRequestsRevisionView.displayName = 'SendRequestsRevisionView';\n\nconst mapStateToProps = state => {\n  return {\n    sendRequestsData: state.lists[USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]].sendRequests,\n    reviewInProgressItems:\n      state.views[USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]].sendRequests.reviewInProgress,\n    successfullyReviewedItems:\n      state.views[USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]].sendRequests.successfullyReviewed,\n    failedReviewItems: state.views[USER_ROLE_STRING[USER_TYPE_ID.TECHNICAL_AREA_MANAGER]].sendRequests.reviewFailed\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      retrieveSendRequestsListPage: retrieveSendRequestsListPageAction,\n      startSendRequestsListUpdatesAutoChecking: startSendRequestsListUpdatesAutoCheckingAction,\n      stopSendRequestsListUpdatesAutoChecking: stopSendRequestsListUpdatesAutoCheckingAction,\n      performNewSearch: performNewSearchAction,\n      reviewItem: reviewItemAction,\n      resetUI: () => ({ type: TECHNICAL_AREA_MANAGER_ACTION_TYPE.RESET_UI })\n    },\n    dispatch\n  );\n};\n\nexport default withErrorBoundary(\n  withStyles(viewStyles)(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(SendRequestsRevisionView)\n  )\n);\n","import Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ResponsiveDialog from '../../components/ResponsiveDialog';\nimport { COMMON_ELEMENT_ATTRIBUTE, SEND_REQUEST_ATTRIBUTE, ATTRIBUTE_LABEL } from '../../constants/elements';\nimport { renderElementFieldContent } from '../../utils/viewUtils';\n\nconst buttonToTheLeftStyle = {\n  marginRight: 'auto'\n};\n\nexport default class DeliveryDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      installLink: '',\n      displayMissingLinkError: false\n    };\n  }\n\n  render() {\n    const { sendRequest, onSend, onClose, onDetailsClick, displayError, ...otherProps } = this.props;\n\n    return (\n      <ResponsiveDialog {...otherProps}>\n        {otherProps.open && (\n          <>\n            <DialogTitle>\n              {`Invia patch #${sendRequest.id}: ${sendRequest[COMMON_ELEMENT_ATTRIBUTE.TITLE]}`}\n            </DialogTitle>\n            <DialogContent>\n              <Grid container spacing={16}>\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {ATTRIBUTE_LABEL[COMMON_ELEMENT_ATTRIBUTE.DESCRIPTION]}\n                  </Typography>\n                  <Typography variant=\"body1\">{sendRequest[COMMON_ELEMENT_ATTRIBUTE.DESCRIPTION]}</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {ATTRIBUTE_LABEL[SEND_REQUEST_ATTRIBUTE.RECIPIENT_CLIENTS]}\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {renderElementFieldContent(\n                      SEND_REQUEST_ATTRIBUTE.RECIPIENT_CLIENTS,\n                      sendRequest[SEND_REQUEST_ATTRIBUTE.RECIPIENT_CLIENTS]\n                    )}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {ATTRIBUTE_LABEL[COMMON_ELEMENT_ATTRIBUTE.BRANCH]}\n                  </Typography>\n                  <Typography variant=\"body1\">{sendRequest[COMMON_ELEMENT_ATTRIBUTE.BRANCH]}</Typography>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {ATTRIBUTE_LABEL[SEND_REQUEST_ATTRIBUTE.INSTALL_TYPE]}\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {renderElementFieldContent(\n                      SEND_REQUEST_ATTRIBUTE.INSTALL_TYPE,\n                      sendRequest[SEND_REQUEST_ATTRIBUTE.INSTALL_TYPE]\n                    )}\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    label=\"Link di installazione\"\n                    placeholder=\"Specifica un indirizzo\"\n                    value={this.state.installLink}\n                    onChange={this.handleLinkTextFieldChange}\n                    error={this.state.displayMissingLinkError}\n                    style={{ marginTop: '8px' }}\n                    InputLabelProps={{ shrink: true }}\n                  />\n                </Grid>\n\n                {displayError && (\n                  <Grid item xs={12}>\n                    <Typography variant=\"subtitle1\" color=\"error\">\n                      Si è verificato un errore durante l'invio. Riprova.\n                    </Typography>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={onDetailsClick} color=\"primary\" style={buttonToTheLeftStyle}>\n                Più dettagli\n              </Button>\n              <Button onClick={onClose} color=\"primary\">\n                Annulla\n              </Button>\n              <Button onClick={this.handleSendButtonClick} color=\"primary\">\n                Invia\n              </Button>\n            </DialogActions>\n          </>\n        )}\n      </ResponsiveDialog>\n    );\n  }\n\n  handleLinkTextFieldChange = event => {\n    this.setState({\n      displayMissingLinkError: false,\n      installLink: event.target.value\n    });\n  };\n\n  // prettier-ignore\n  handleSendButtonClick = () => {\n    const { sendRequest, onSend } = this.props;\n\n    if (this.state.installLink.trim() === '')\n      this.setState({ displayMissingLinkError: true });\n    else\n      onSend(sendRequest.id, this.state.installLink);\n  };\n}\n\nDeliveryDialog.defaultProps = {\n  displayError: false\n};\n\nDeliveryDialog.propTypes = {\n  sendRequest: PropTypes.object.isRequired,\n  onSend: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onDetailsClick: PropTypes.func.isRequired,\n  displayError: PropTypes.bool\n};\n","/* eslint-disable array-callback-return */\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Table from '@material-ui/core/Table';\nimport Send from '@material-ui/icons/Send';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { LIST_ELEMENTS_PER_PAGE } from '../../constants/api';\nimport { APPROVAL_STATUS, COMMON_ELEMENT_ATTRIBUTE, SEND_REQUEST_ATTRIBUTE } from '../../constants/elements';\nimport {\n  getToBeDeliveredFilter,\n  getSearchFilterOrDefault,\n  getAlreadyDeliveredFilter,\n  isSearchFilter\n} from '../../utils/tableUtils';\nimport { renderElementFieldContent } from '../../utils/viewUtils';\nimport StatusIcon from '../StatusIcon';\nimport TableDynamicBody from '../Table/TableDynamicBody';\nimport TableSortableHeader from '../Table/TableSortableHeader';\nimport TablePaginationFooter from '../Table/TablePaginationFooter';\nimport TableToolbar from '../Table/TableToolbar';\nimport withTableFunctionality from '../Table/WithTableFunctionality';\n\nconst DELIVER_BUTTON_COLUMN = 'DELIVER_BUTTON_COLUMN';\n\nconst alreadyDeliveredTableColumns = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.ID, displayOnMobile: false },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, displayOnMobile: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP, displayOnMobile: true },\n  {\n    key: SEND_REQUEST_ATTRIBUTE.RECIPIENT_CLIENTS,\n    displayOnMobile: false,\n    notSortable: true\n  },\n  { key: COMMON_ELEMENT_ATTRIBUTE.AUTHOR, displayOnMobile: false },\n  { key: SEND_REQUEST_ATTRIBUTE.DELIVERY_TIMESTAMP, displayOnMobile: true }\n];\n\nconst toBeDeliveredTableColumns = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.ID, displayOnMobile: false },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, displayOnMobile: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP, displayOnMobile: true },\n  {\n    key: SEND_REQUEST_ATTRIBUTE.RECIPIENT_CLIENTS,\n    displayOnMobile: false,\n    notSortable: true\n  },\n  { key: COMMON_ELEMENT_ATTRIBUTE.AUTHOR, displayOnMobile: false },\n  {\n    label: 'Invia',\n    key: DELIVER_BUTTON_COLUMN,\n    displayOnMobile: true,\n    notSortable: true\n  }\n];\n\nclass DeliveryTable extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return (\n      this.props.isLoading !== nextProps.isLoading ||\n      this.props.latestUpdateTimestamp !== nextProps.latestUpdateTimestamp ||\n      this.props.successfullyDeliveredElements !== nextProps.successfullyDeliveredElements\n    );\n  }\n\n  render() {\n    const {\n      tableData,\n      itemsCount,\n      isLoading,\n      latestUpdateTimestamp,\n      displayError,\n      onElementClick,\n      loadCurrentPage,\n      onPageChange,\n      onSortingChange,\n      onFilterChange,\n      pageNumber,\n      sorting\n    } = this.props;\n    const deliverMode = this.isDeliveryMode();\n\n    return (\n      <>\n        <TableToolbar\n          toolbarTitle=\"Invio patch\"\n          showAvailableUpdatesBadge={\n            !isLoading &&\n            tableData.length > 0 &&\n            tableData[pageNumber] != null &&\n            latestUpdateTimestamp > tableData[pageNumber].updateTimestamp\n          }\n          loadCurrentPage={loadCurrentPage}\n          onSearchQueryChange={newQuery =>\n            onFilterChange(getSearchFilterOrDefault(newQuery, getAlreadyDeliveredFilter()))\n          }\n          renderCustomContent={this.renderToolbarRadioButtons}\n        />\n        <Table>\n          <TableSortableHeader\n            tableColumns={deliverMode ? toBeDeliveredTableColumns : alreadyDeliveredTableColumns}\n            sortingCriteria={sorting}\n            onSortingUpdate={onSortingChange}\n          />\n\n          <TableDynamicBody\n            tableColumns={deliverMode ? toBeDeliveredTableColumns : alreadyDeliveredTableColumns}\n            tableData={tableData}\n            totalItemsCount={itemsCount}\n            displayError={displayError}\n            isLoading={isLoading}\n            pageNumber={pageNumber}\n            renderCellContent={this.renderCellContent}\n            loadCurrentPage={loadCurrentPage}\n            onElementClick={onElementClick}\n          />\n\n          <TablePaginationFooter\n            itemsCount={itemsCount}\n            itemsPerPage={LIST_ELEMENTS_PER_PAGE}\n            currentPage={pageNumber}\n            onPageChange={onPageChange}\n          />\n        </Table>\n      </>\n    );\n  }\n\n  renderToolbarRadioButtons = () => {\n    const deliveryMode = this.isDeliveryMode();\n    const isSearching = isSearchFilter(this.props.filter);\n    return (\n      <>\n        <FormControlLabel\n          disabled={isSearching}\n          checked={!deliveryMode && !isSearching}\n          control={<Radio color=\"primary\" />}\n          label=\"Già inviate\"\n          onChange={() => this.props.onFilterChange(getAlreadyDeliveredFilter())}\n        />\n        <FormControlLabel\n          disabled={isSearching}\n          checked={deliveryMode && !isSearching}\n          control={<Radio color=\"primary\" />}\n          label=\"Da inviare\"\n          onChange={() => this.props.onFilterChange(getToBeDeliveredFilter())}\n        />\n      </>\n    );\n  };\n\n  renderCellContent = (columnKey, value, elementId) => {\n    const { pageNumber, onElementDelivery, successfullyDeliveredElements } = this.props;\n\n    switch (columnKey) {\n      case DELIVER_BUTTON_COLUMN:\n        return successfullyDeliveredElements.includes(elementId) ? (\n          <StatusIcon status={APPROVAL_STATUS.APPROVED} opacity={60} />\n        ) : (\n          <>\n            <IconButton\n              onClick={event => {\n                onElementDelivery(elementId, pageNumber);\n                event.stopPropagation();\n              }}\n            >\n              <Send color=\"action\" />\n            </IconButton>\n          </>\n        );\n      default:\n        return renderElementFieldContent(columnKey, value);\n    }\n  };\n\n  isDeliveryMode = () => {\n    return (\n      this.props.filter.attribute === getToBeDeliveredFilter().attribute &&\n      this.props.filter.valueMatches === getToBeDeliveredFilter().valueMatches\n    );\n  };\n}\n\nDeliveryTable.displayName = 'DeliveryTable';\nDeliveryTable.propTypes = {\n  tableData: PropTypes.array.isRequired,\n  itemsCount: PropTypes.number.isRequired,\n  loadPage: PropTypes.func.isRequired,\n  onSearchQueryChange: PropTypes.func.isRequired,\n  onElementDelivery: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  latestUpdateTimestamp: PropTypes.number.isRequired,\n  displayError: PropTypes.bool.isRequired,\n  onElementClick: PropTypes.func.isRequired,\n  successfullyDeliveredElements: PropTypes.array.isRequired,\n\n  // injected by withTableFunctionality\n  pageNumber: PropTypes.number.isRequired,\n  sorting: PropTypes.object.isRequired,\n  filter: PropTypes.object.isRequired,\n  loadCurrentPage: PropTypes.func.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  onSortingChange: PropTypes.func.isRequired,\n  onFilterChange: PropTypes.func.isRequired\n};\n\nexport default withTableFunctionality(DeliveryTable, getToBeDeliveredFilter());\n","import Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DeliveryDialog from '../../components/DeliveryDialog';\nimport DeliveryTable from '../../components/DeliveryTable/DeliveryTable';\nimport ElementDetailsDialog from '../../components/ElementDetailsDialog';\nimport withErrorBoundary from '../../components/WithErrorBoundary';\nimport { COMMON_ELEMENT_ATTRIBUTE, SEND_REQUEST_ATTRIBUTE } from '../../constants/elements';\nimport { USER_ROLE_STRING, USER_TYPE_ID } from '../../constants/user';\nimport { performNewSearchAction } from '../../redux/actions/commonList';\nimport {\n  retrieveSendRequestsListPageAction,\n  startSendRequestsListUpdatesAutoCheckingAction,\n  stopSendRequestsListUpdatesAutoCheckingAction\n} from '../../redux/actions/sendRequests';\nimport {\n  REVISION_OFFICE_MANAGER_ACTION_TYPE,\n  deliverElementAction\n} from '../../redux/actions/views/revisionOfficeManager';\nimport { renderElementFieldContent, retrieveElementFromListState } from '../../utils/viewUtils';\nimport { viewStyles } from '../styles';\n\nconst detailsDialogFields = [\n  { key: COMMON_ELEMENT_ATTRIBUTE.TITLE, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.DESCRIPTION, fullRow: true },\n  { key: COMMON_ELEMENT_ATTRIBUTE.BRANCH },\n  { key: COMMON_ELEMENT_ATTRIBUTE.COMPONENTS },\n  { key: SEND_REQUEST_ATTRIBUTE.LINKED_COMMITS },\n  { key: SEND_REQUEST_ATTRIBUTE.RECIPIENT_CLIENTS },\n  { key: COMMON_ELEMENT_ATTRIBUTE.AUTHOR },\n  { key: COMMON_ELEMENT_ATTRIBUTE.TIMESTAMP },\n  { key: COMMON_ELEMENT_ATTRIBUTE.APPROVER },\n  { key: COMMON_ELEMENT_ATTRIBUTE.UPDATE_TIMESTAMP, label: 'Data approvazione' },\n  { key: SEND_REQUEST_ATTRIBUTE.INSTALL_TYPE },\n  { key: SEND_REQUEST_ATTRIBUTE.INSTALL_LINK }\n];\n\nclass RevisionOfficeManagerView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      detailsModalOpen: false,\n      deliveryModalOpen: false,\n\n      // must be set to an object when empty, otherwise render()\n      // would throw an error (the id field is accessed in any case, see below)\n      currentlyShowingElement: {}\n    };\n  }\n\n  // Close delivery modal when delivery has been completed\n  static getDerivedStateFromProps(props, state) {\n    if (props.successfullyDeliveredElements.includes(state.currentlyShowingElement.id))\n      return { deliveryModalOpen: false };\n    return null;\n  }\n\n  componentDidMount() {\n    this.props.startSendRequestsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.REVISION_OFFICE_MANAGER]);\n  }\n\n  componentWillUnmount() {\n    this.props.stopSendRequestsListUpdatesAutoChecking(USER_ROLE_STRING[USER_TYPE_ID.REVISION_OFFICE_MANAGER]);\n    this.props.resetUI();\n  }\n\n  render() {\n    const {\n      classes,\n      sendRequestsData,\n      retrieveSendRequestsListPage,\n      performNewSearch,\n      successfullyDeliveredElements,\n      isDeliveringElement,\n      lastDeliveryFailed\n    } = this.props;\n    const { detailsModalOpen, deliveryModalOpen, currentlyShowingElement } = this.state;\n\n    return (\n      <>\n        <Grid container className={classes.root}>\n          <Grid item xs={12}>\n            <Grid container justify=\"center\">\n              <Paper className={classes.paper}>\n                <DeliveryTable\n                  tableData={sendRequestsData.listPages}\n                  itemsCount={sendRequestsData.totalItemsCount}\n                  isLoading={sendRequestsData.isLoadingList}\n                  latestUpdateTimestamp={sendRequestsData.latestUpdateTimestamp}\n                  displayError={sendRequestsData.errorWhileFetchingData}\n                  loadPage={(pageNumber, sortingCriteria, filter) => {\n                    retrieveSendRequestsListPage(\n                      USER_ROLE_STRING[USER_TYPE_ID.REVISION_OFFICE_MANAGER],\n                      pageNumber,\n                      sortingCriteria,\n                      filter\n                    );\n                  }}\n                  onSearchQueryChange={searchQuery => {\n                    performNewSearch(\n                      retrieveSendRequestsListPageAction(USER_ROLE_STRING[USER_TYPE_ID.REVISION_OFFICE_MANAGER]),\n                      searchQuery\n                    );\n                  }}\n                  onElementDelivery={(elementId, pageNumber) => {\n                    this.setState({\n                      deliveryModalOpen: true,\n                      currentlyShowingElement: retrieveElementFromListState(sendRequestsData, elementId, pageNumber)\n                    });\n                  }}\n                  onElementClick={(pageNumber, rowIndex, elementId) => {\n                    this.setState({\n                      detailsModalOpen: true,\n                      currentlyShowingElement: retrieveElementFromListState(\n                        sendRequestsData,\n                        elementId,\n                        pageNumber,\n                        rowIndex\n                      )\n                    });\n                  }}\n                  successfullyDeliveredElements={successfullyDeliveredElements}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <ElementDetailsDialog\n          open={detailsModalOpen}\n          dialogTitle={`Richiesta di invio #${currentlyShowingElement.id}`}\n          element={currentlyShowingElement}\n          elementFields={detailsDialogFields}\n          renderFieldContent={renderElementFieldContent}\n          onClose={this.hideDetailsModal}\n        />\n\n        <DeliveryDialog\n          key={currentlyShowingElement.id}\n          open={deliveryModalOpen}\n          isLoading={isDeliveringElement}\n          displayError={lastDeliveryFailed}\n          sendRequest={currentlyShowingElement}\n          onSend={(elementId, installLink) => this.props.deliverElement(elementId, installLink)}\n          onClose={this.hideDeliveryModal}\n          onDetailsClick={() => this.setState({ detailsModalOpen: true })}\n        />\n      </>\n    );\n  }\n\n  hideDeliveryModal = () => {\n    this.props.resetDeliveryFailedFlag();\n    this.setState({ deliveryModalOpen: false });\n  };\n\n  hideDetailsModal = () => {\n    this.setState({ detailsModalOpen: false });\n  };\n}\n\nRevisionOfficeManagerView.displayName = 'RevisionOfficeManagerView';\n\nconst mapStateToProps = state => {\n  return {\n    sendRequestsData: state.lists[USER_ROLE_STRING[USER_TYPE_ID.REVISION_OFFICE_MANAGER]].sendRequests,\n    successfullyDeliveredElements:\n      state.views[USER_ROLE_STRING[USER_TYPE_ID.REVISION_OFFICE_MANAGER]].successfullyDeliveredElements,\n    isDeliveringElement: state.views[USER_ROLE_STRING[USER_TYPE_ID.REVISION_OFFICE_MANAGER]].isDeliveringElement,\n    lastDeliveryFailed: state.views[USER_ROLE_STRING[USER_TYPE_ID.REVISION_OFFICE_MANAGER]].lastDeliveryFailed\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      retrieveSendRequestsListPage: retrieveSendRequestsListPageAction,\n      startSendRequestsListUpdatesAutoChecking: startSendRequestsListUpdatesAutoCheckingAction,\n      stopSendRequestsListUpdatesAutoChecking: stopSendRequestsListUpdatesAutoCheckingAction,\n      performNewSearch: performNewSearchAction,\n      deliverElement: deliverElementAction,\n      resetDeliveryFailedFlag: () => ({ type: REVISION_OFFICE_MANAGER_ACTION_TYPE.RESET_FAILED_DELIVERY_FLAG }),\n      resetUI: () => ({ type: REVISION_OFFICE_MANAGER_ACTION_TYPE.RESET_UI })\n    },\n    dispatch\n  );\n};\n\nexport default withErrorBoundary(\n  withStyles(viewStyles)(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(RevisionOfficeManagerView)\n  )\n);\n","import CodeIcon from '@material-ui/icons/Code';\nimport FaceIcon from '@material-ui/icons/Face';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport SendIcon from '@material-ui/icons/Send';\nimport React from 'react';\nimport ClientView from '../views/ClientView';\nimport CommitsCreationView from '../views/CommitsCreationView';\nimport SendRequestsCreationView from '../views/SendRequestsCreationView';\nimport CommitsRevisionView from '../views/CommitsRevisionView';\nimport SendRequestsRevisionView from '../views/SendRequestsRevisionView';\nimport RevisionOfficeManagerView from '../views/RevisionOfficeManagerView';\nimport { ROUTE } from './routes';\nimport { USER_TYPE_ID } from './user';\n\nexport const DESKTOP_DRAWER_WIDTH = '300px';\n\nconst NAVIGATION_HIERARCHY = [\n  {\n    routePath: ROUTE.PROGRAMMER,\n    label: 'Programmatore',\n    drawerIcon: <CodeIcon />,\n    visibleToRoles: [USER_TYPE_ID.PROGRAMMER, USER_TYPE_ID.TECHNICAL_AREA_MANAGER],\n    tabs: [\n      {\n        value: '0',\n        label: 'Richieste di commit',\n        component: CommitsCreationView\n      },\n      {\n        value: '1',\n        label: 'Richieste di invio',\n        component: SendRequestsCreationView\n      }\n    ]\n  },\n  {\n    routePath: ROUTE.TECHNICAL_AREA_MANAGER,\n    label: 'Referente area tecnica',\n    drawerIcon: <RecordVoiceOverIcon />,\n    visibleToRoles: [USER_TYPE_ID.TECHNICAL_AREA_MANAGER],\n    tabs: [\n      {\n        value: '0',\n        label: 'Richieste di commit',\n        component: CommitsRevisionView\n      },\n      {\n        value: '1',\n        label: 'Richieste di invio',\n        component: SendRequestsRevisionView\n      }\n    ]\n  },\n  {\n    routePath: ROUTE.REVISION_OFFICE_MANAGER,\n    label: 'Responsabile ufficio revisioni',\n    component: RevisionOfficeManagerView,\n    drawerIcon: <SendIcon />,\n    visibleToRoles: [USER_TYPE_ID.REVISION_OFFICE_MANAGER],\n    tabs: []\n  },\n  {\n    value: USER_TYPE_ID.CLIENT,\n    routePath: ROUTE.CLIENT,\n    label: 'Cliente',\n    component: ClientView,\n    drawerIcon: <FaceIcon />,\n    visibleToRoles: [USER_TYPE_ID.CLIENT],\n    tabs: []\n  }\n];\n\nexport function getSectionsForUserRoles(userRoles) {\n  const isUserRole = roleId => userRoles.includes(roleId);\n\n  const sections = [];\n  for (const section of NAVIGATION_HIERARCHY) {\n    if (section.visibleToRoles.some(isUserRole))\n      sections.push(section);\n  }\n  return sections;\n}\n\n/**\n * Gets the default route path for the specified user role.\n */\nexport function getRelativePathForUserRole(userRoleId, index = 0) {\n  const section = NAVIGATION_HIERARCHY.find(section => section.visibleToRoles.includes(userRoleId));\n\n  if (section != null) {\n    return `${section.routePath}${section.tabs.length > 0 ? `/${index}` : ''}`;\n  } else return '';\n}","/**\n * @file\n * This file contains helper methods to work with colors\n * all around the web app.\n */\n\nexport function getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n","import Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\n/**\n * @class\n * This class is responsible for displaying navigation tabs passed via props\n */\nclass InnerTabs extends Component {\n  render() {\n    const { tabs, match, width } = this.props;\n    return (\n      <Tabs\n        value={match.params.tabValue}\n        variant={isWidthDown('xs', width) ? 'fullWidth' : 'scrollable'}\n        scrollButtons=\"auto\"\n      >\n        {tabs.map((tab, index) => {\n          return <Tab key={index} value={tab.value} label={tab.label} onClick={() => this.onTabClicked(tab.value)} />;\n        })}\n      </Tabs>\n    );\n  }\n\n  onTabClicked = tabValue => {\n    const { history, sectionUrl } = this.props;\n    history.push(`${sectionUrl}/${tabValue}`);\n  };\n}\n\nInnerTabs.displayName = 'InnerTabs';\nInnerTabs.propTypes = {\n  sectionUrl: PropTypes.string.isRequired,\n  tabs: PropTypes.array.isRequired\n};\n\nexport default withWidth({ noSSR: true })(InnerTabs);\n","/* eslint-disable array-callback-return */\nimport { Divider } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { DESKTOP_DRAWER_WIDTH, getSectionsForUserRoles } from '../../constants/navigation';\nimport { ROUTE_PARAM } from '../../constants/routes';\nimport { getRandomColor } from '../../utils/colorUtils';\nimport InnerTabs from '../InnerTabs';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: DESKTOP_DRAWER_WIDTH,\n      width: `calc(100% - ${DESKTOP_DRAWER_WIDTH})`\n    }\n  },\n  drawer: {\n    width: DESKTOP_DRAWER_WIDTH\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  toolbarTitle: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: 16\n    }\n  },\n  avatar: {\n    margin: -8,\n    backgroundColor: getRandomColor()\n  },\n  drawerItems: {\n    width: 'auto'\n  }\n});\n\n/**\n * @class\n * This class represents the base structure of the app interface (drawer, appbar and tabs)\n * and renders routes and UI elements corresponding to user roles\n */\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDrawerOpen: false\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar className={classes.appBar} position=\"static\">\n          <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.openDrawer}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.toolbarTitle} variant=\"h6\" color=\"inherit\" noWrap>\n              Authorization Manager\n            </Typography>\n          </Toolbar>\n\n          {this.renderTabsRoutes()}\n        </AppBar>\n\n        <aside>\n          <Hidden mdUp implementation=\"css\">\n            {this.renderMobileDrawer()}\n          </Hidden>\n          <Hidden smDown implementation=\"css\">\n            {this.renderDesktopDrawer()}\n          </Hidden>\n        </aside>\n      </div>\n    );\n  }\n\n  renderTabsRoutes = () => {\n    const { user, match } = this.props;\n\n    return getSectionsForUserRoles(user.roles).map((section, index) => {\n      if (section.tabs.length > 0) {\n        return (\n          <Route\n            key={index}\n            path={`${match.url}${section.routePath}${ROUTE_PARAM.TAB_VALUE}`}\n            render={routeProps => (\n              <InnerTabs {...routeProps} sectionUrl={`${match.url}${section.routePath}`} tabs={section.tabs} />\n            )}\n          />\n        );\n      }\n    });\n  };\n\n  renderMobileDrawer = () => {\n    return (\n      <Drawer open={this.state.isDrawerOpen} variant=\"temporary\" onClose={this.closeDrawer}>\n        {this.renderDrawerLayout()}\n      </Drawer>\n    );\n  };\n\n  renderDesktopDrawer = () => {\n    return (\n      <Drawer classes={{ paper: this.props.classes.drawer }} open variant=\"permanent\" anchor=\"left\">\n        {this.renderDrawerLayout()}\n      </Drawer>\n    );\n  };\n\n  renderDrawerLayout = () => {\n    const { classes, match, location, user, onLogout } = this.props;\n    return (\n      <>\n        {/* Avatar item is outside the div to avoid drawer closing when clicking on it */}\n        <ListItem>\n          <ListItemIcon>\n            <Avatar className={classes.avatar}>{user.name.charAt(0)}</Avatar>\n          </ListItemIcon>\n          <ListItemText\n            primary={user.name}\n            secondary={\n              <>\n                {user.email}\n                {user.area != null && (\n                  <>\n                    <br />\n                    Area tecnica {user.area.name}\n                  </>\n                )}\n              </>\n            }\n          />\n        </ListItem>\n\n        <div tabIndex={0} role=\"button\" onClick={this.closeDrawer} onKeyDown={this.closeDrawer}>\n          <List className={classes.drawerItems}>\n            {getSectionsForUserRoles(user.roles).map((section, index) => {\n              return (\n                <ListItem\n                  key={index}\n                  button\n                  selected={location.pathname.startsWith(`${match.url}${section.routePath}`)}\n                  onClick={() =>\n                    this.onSectionClicked(\n                      section.tabs.length > 0\n                        ? `${match.url}${section.routePath}/${section.tabs[0].value}`\n                        : `${match.url}${section.routePath}`\n                    )\n                  }\n                >\n                  <ListItemIcon>{section.drawerIcon}</ListItemIcon>\n                  <ListItemText primary={section.label} />\n                </ListItem>\n              );\n            })}\n            <Divider />\n\n            <ListItem onClick={onLogout} button>\n              <ListItemIcon>\n                <ExitToAppIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Logout\" />\n            </ListItem>\n          </List>\n        </div>\n      </>\n    );\n  };\n\n  openDrawer = () => {\n    this.setState({ isDrawerOpen: true });\n  };\n\n  closeDrawer = () => {\n    this.setState({ isDrawerOpen: false });\n  };\n\n  onSectionClicked = url => {\n    this.props.history.push(url);\n  };\n}\n\nNavigation.displayName = 'Navigation';\nNavigation.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  onLogout: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Navigation);\n","/* eslint-disable array-callback-return */\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, withStyles } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport LogoLoader from '../../components/LogoLoader';\nimport Navigation from '../../components/Navigation';\nimport { DESKTOP_DRAWER_WIDTH, getSectionsForUserRoles, getRelativePathForUserRole } from '../../constants/navigation';\nimport { performLogoutAction } from '../../redux/actions/auth';\nimport { requestCurrentUserInfoAction } from '../../redux/actions/user';\n\nconst homeStyles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  content: {\n    [theme.breakpoints.up('md')]: {\n      marginLeft: `calc(${DESKTOP_DRAWER_WIDTH})`,\n      width: `calc(100% - ${DESKTOP_DRAWER_WIDTH})`\n    }\n  },\n  errorDialog: {\n    backgroundColor: theme.palette.error.dark\n  },\n  errorDialogText: {\n    color: 'white'\n  },\n  dialogButton: {\n    color: theme.palette.primary.main\n  }\n});\n\n/**\n * @class\n * This class represents the home page of the web-app.\n * In the home page the main UI will be loaded once the user data has been fetched from server.\n */\nclass Home extends Component {\n  componentDidMount() {\n    this.props.requestCurrentUserInfo(this.props.accessToken);\n  }\n\n  render() {\n    const {\n      classes,\n      accessToken,\n      user,\n      performLogout,\n      isSessionExpired,\n      requestCurrentUserInfo,\n      ...routeProps\n    } = this.props;\n\n    return (\n      <>\n        {!user.infoObtained ? (\n          <>\n            <LogoLoader />\n            <Dialog\n              open={user.serverError}\n              classes={{ paper: classes.errorDialog }}\n              disableBackdropClick\n              disableEscapeKeyDown\n            >\n              <DialogContent>\n                <DialogContentText className={classes.errorDialogText}>\n                  Non è stato possibile ottenere i dati relativi al tuo utente. Riprova o contatta l'amministratore se\n                  il problema persiste.\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button className={classes.errorDialogText} onClick={() => requestCurrentUserInfo(accessToken)}>\n                  Riprova\n                </Button>\n                <Button className={classes.errorDialogText} onClick={() => performLogout(accessToken)}>\n                  Logout\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </>\n        ) : (\n          // Displayed only when user data are obtained successfully\n          <>\n            <Navigation {...routeProps} user={user} onLogout={() => performLogout(accessToken)} />\n            <main className={classes.content}>{this.renderContentSubRoutes()}</main>\n          </>\n        )}\n\n        <Dialog open={isSessionExpired} disableBackdropClick disableEscapeKeyDown>\n          <DialogContent>\n            <DialogContentText>La tua sessione è scaduta. Effettua nuovamente il login.</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              className={classes.dialogButton}\n              // In this case, token is not passed to the action since logout notification to server isn't needed\n              onClick={() => performLogout()}\n            >\n              Vai alla pagina di login\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    );\n  }\n\n  /**\n   * Renders Route components which are responsible for displaying the contents of the\n   * user role view corresponding to the current URL\n   */\n  renderContentSubRoutes() {\n    const { user, match } = this.props;\n    return (\n      <Switch>\n        {/* Renders the specific routes for the different sections */}\n        {getSectionsForUserRoles(user.roles).map((section, index) => {\n          // prettier-ignore\n          if (section.tabs.length > 0) {\n            const tabRoutes = section.tabs.map(tab => (\n              <Route path={`${match.url}${section.routePath}/${tab.value}`} exact component={tab.component} />\n            ));\n\n            // For every group of tabs that belongs to a section, we use a Redirect to redirect the user\n            // to the first tab if the URL had an invalid tab value \n            tabRoutes.push(\n              <Redirect\n                from={`${match.url}${section.routePath}`}\n                to={`${match.url}${section.routePath}/${section.tabs[0].value}`}\n              />\n            );\n            return tabRoutes;\n          }\n          else\n            return <Route key={index} path={`${match.url}${section.routePath}`} exact component={section.component} />;\n        })}\n\n        {/* Redirect the user to the view of its first role if the URL didn't match any view */}\n        <Redirect to={`${match.url}${getRelativePathForUserRole(user.roles[0])}`} />\n      </Switch>\n    );\n  }\n}\n\nHome.displayName = 'Home';\n\nconst mapStateToProps = state => {\n  return {\n    accessToken: state.auth.accessToken,\n    isSessionExpired: state.auth.isSessionExpired,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      performLogout: performLogoutAction,\n      requestCurrentUserInfo: requestCurrentUserInfoAction\n    },\n    dispatch\n  );\n};\n\nexport default withStyles(homeStyles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Home)\n);\n","import { Grid, withStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { attemptLoginAction } from '../../redux/actions/auth';\nimport ibt_logo from '../../assets/ibt_logo.png';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    position: 'absolute',\n    height: '100%'\n  },\n  card: {\n    maxWidth: 512,\n    margin: 16,\n    overflow: 'visible'\n  },\n  cardRoot: {\n    padding: 16\n  },\n  loginButton: {\n    width: 56\n  },\n  footer: {\n    color: 'grey',\n    textAlign: 'center',\n    alignSelf: 'flex-end',\n    padding: '0 16px 16px'\n  },\n  link: {\n    color: 'inherit'\n  },\n  logo: {\n    width: '130px'\n  },\n  welcomeText: {\n    textAlign: 'center'\n  }\n};\n\n/**\n * @class\n * This class represents the login page of the webapp.\n * In the login page the login form will be loaded, in order to let\n * the user log into the system.\n */\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      usernameError: false,\n      passwordError: false\n    };\n  }\n\n  render() {\n    const { classes, isAttemptingLogin } = this.props;\n    const { username, password, usernameError, passwordError } = this.state;\n    return (\n      <Grid className={classes.root} container justify=\"center\" alignItems=\"center\">\n        <Card className={classes.card} onKeyDown={this.onEnterKeyClicked}>\n          <Grid className={classes.cardRoot} container spacing={24}>\n            <Grid item xs={12}>\n              <Grid container justify=\"center\" alignContent=\"center\" spacing={8}>\n                <Grid item>\n                  <img className={classes.logo} src={ibt_logo} alt=\"Logo IBT\" />\n                </Grid>\n                <Grid item xs={12} className={classes.welcomeText}>\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                    Benvenuto in Authorization Manager\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControl style={{ marginBottom: -8 }} error={usernameError} fullWidth={true}>\n                <TextField\n                  label=\"Username\"\n                  type=\"text\"\n                  variant=\"outlined\"\n                  error={usernameError}\n                  autoFocus={true}\n                  value={username}\n                  onChange={event => this.onInputChanged('username', event)}\n                />\n                {usernameError && <FormHelperText>Devi inserire uno username</FormHelperText>}\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControl error={passwordError} fullWidth={true}>\n                <TextField\n                  label=\"Password\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  error={passwordError}\n                  value={password}\n                  onChange={event => this.onInputChanged('password', event)}\n                />\n                {passwordError && <FormHelperText>Devi inserire una password</FormHelperText>}\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\" alignContent=\"center\">\n                <Grid item>\n                  <Button\n                    className={classes.loginButton}\n                    disabled={isAttemptingLogin}\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.onLoginButtonClicked}\n                    onKeyPress={this.onLoginButtonClicked}\n                  >\n                    Login\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Card>\n\n        <Grid item xs={12} className={classes.footer}>\n          <Typography variant=\"caption\" color=\"inherit\">\n            Realizzato da{' '}\n            <a className={classes.link} href=\"http://www.ibttn.it\">\n              Informatica Bancaria Trentina\n            </a>{' '}\n            in collaborazione con alcuni studenti dell'\n            <a className={classes.link} href=\"http://www.buonarroti.tn.it\">\n              I.T.T. Buonarroti-Pozzo\n            </a>\n            .\n            <br />\n            Questo software è{' '}\n            <a className={classes.link} href=\"https://github.com/AUMTeam/aum-frontend\">\n              open-source\n            </a>{' '}\n            e rilasciato sotto licenza MIT.\n          </Typography>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  /**\n   * Updates value of username and password in component state\n   * @param {*} name 'username' or 'password'\n   * @param {*} event Event descriptor\n   */\n  onInputChanged = (name, event) => {\n    this.setState({\n      [name]: event.target.value,\n      usernameError: false,\n      passwordError: false\n    });\n  };\n\n  /**\n   * Triggers login action when button is clicked\n   */\n  onLoginButtonClicked = () => {\n    const { username, password } = this.state;\n\n    if (this.textFieldsAreValidated()) {\n      this.props.attemptLogin(username, password);\n    }\n  };\n\n  /**\n   * Triggers login action when user presses enter in one of the input fields\n   */\n  onEnterKeyClicked = event => {\n    if (event.key === 'Enter') {\n      this.onLoginButtonClicked();\n    }\n  };\n\n  /**\n   * Checks if username and password fields' content is valid (they must not be empty)\n   * Returns false if one of the two fields is empty and updates state accordingly\n   */\n  textFieldsAreValidated = () => {\n    const { username, password } = this.state;\n    const usernameError = username.length === 0;\n    const passwordError = password.length === 0;\n\n    if (usernameError || passwordError) {\n      this.setState({\n        usernameError,\n        passwordError\n      });\n      return false;\n    }\n\n    return true;\n  };\n}\n\nLogin.displayName = 'Login';\n\nconst mapStateToProps = state => {\n  return {\n    isAttemptingLogin: state.auth.isAttemptingLogin\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      attemptLogin: attemptLoginAction\n    },\n    dispatch\n  );\n};\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Login)\n);\n","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, withStyles } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport LogoLoader from '../components/LogoLoader';\nimport { TOKEN_LOCALSTORAGE_KEY } from '../constants/api';\nimport { ROUTE } from '../constants/routes';\nimport { AUTH_ACTION_TYPE, requestLocalTokenValidationAction } from '../redux/actions/auth';\nimport Home from './Home';\nimport Login from './Login';\n\nconst styles = theme => ({\n  errorDialog: {\n    backgroundColor: theme.palette.error.dark\n  },\n  errorDialogText: {\n    color: 'white'\n  }\n});\n\n/**\n * Custom made routing component that, based on a condition,\n * redirects the user to or loads a specific page.\n */\nconst AuthRoute = ({ condition, component: Component, redirectPath, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (condition() ? <Component {...props} /> : <Redirect to={{ pathname: redirectPath }} />)}\n  />\n);\n\n/**\n * @class\n * This component sits at the top of the routing hierarchy of the app.\n * More specifically, it is responsible for rendering the home (and its content) when there's an active session,\n * otherwise the login page is shown.\n * It never gets unmounted.\n */\nclass Routes extends Component {\n  componentDidMount() {\n    const localAccessToken = localStorage.getItem(TOKEN_LOCALSTORAGE_KEY);\n    if (localAccessToken != null)\n      this.props.requestLocalTokenValidation(localAccessToken);\n    else\n      this.props.notifyLocalTokenNotFound();\n  }\n\n  render() {\n    const { isValidatingToken, accessToken, classes, globalError } = this.props;\n    return (\n      <>\n        {isValidatingToken ? (\n          <LogoLoader />\n        ) : (\n          <HashRouter>\n            <Switch>\n              <AuthRoute\n                condition={() => accessToken != null}\n                exact\n                path={ROUTE.ROOT}\n                component={Home}\n                redirectPath={ROUTE.LOGIN}\n              />\n              <AuthRoute\n                condition={() => accessToken == null}\n                path={ROUTE.LOGIN}\n                component={Login}\n                redirectPath={ROUTE.HOME}\n              />\n              <AuthRoute\n                condition={() => accessToken != null}\n                path={ROUTE.HOME}\n                component={Home}\n                redirectPath={ROUTE.LOGIN}\n              />\n            </Switch>\n          </HashRouter>\n        )}\n\n        {/* Display a dialog which forces the user to reload the page if there's a global uncaught error in Saga */}\n        {globalError && (\n          <Dialog classes={{ paper: classes.errorDialog }} disableBackdropClick disableEscapeKeyDown open>\n            <DialogContent>\n              <DialogContentText className={classes.errorDialogText}>\n                Si è verificato un errore irreversibile nella back-logic dell'applicazione. Per tornare ad utilizzarla,\n                ricarica la pagina.\n                <br />\n                Se sei uno sviluppatore, consulta la console di debug per ulteriori dettagli.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button className={classes.errorDialogText} onClick={() => window.location.reload()}>\n                Ricarica\n              </Button>\n            </DialogActions>\n          </Dialog>\n        )}\n      </>\n    );\n  }\n}\n\nRoutes.displayName = 'Routes';\n\nconst mapStateToProps = state => {\n  return {\n    accessToken: state.auth.accessToken,\n    isValidatingToken: state.auth.isValidatingToken,\n    globalError: state.globalError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      requestLocalTokenValidation: requestLocalTokenValidationAction,\n      notifyLocalTokenNotFound: () => ({ type: AUTH_ACTION_TYPE.LOCAL_TOKEN_NOT_FOUND })\n    },\n    dispatch\n  );\n};\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Routes)\n);\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport withErrorBoundary from './components/WithErrorBoundary';\nimport { API_ENDPOINT_URL, changeEndpointUrl } from './constants/api';\nimport EnhancedStoreProvider from './redux/configureStore';\nimport Routes from './routes';\nimport { configureTheme } from './theme/configureTheme';\n\n/**\n * @file\n * This file is the root of the application.\n * Here we are going to configure the store and\n * render the whole application from a root HTML element.\n */\n\nconst theme = createMuiTheme(configureTheme());\n\n/**\n * Root component of the web-app\n */\nconst RootComponent = withErrorBoundary(function App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <SnackbarProvider\n        maxSnack={3}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n      >\n        <EnhancedStoreProvider>\n          <Routes />\n        </EnhancedStoreProvider>\n      </SnackbarProvider>\n    </MuiThemeProvider>\n  );\n});\n\nReactDOM.render(<RootComponent />, document.getElementById('root'));\n\n// If we are in development build, with Ctrl+E we can change the API endpoint URL for testing purposes\nif (process.env.NODE_ENV === 'development') {\n  window.onkeypress = event => {\n    if (event.ctrlKey && event.key === 'e') {\n      event.preventDefault();\n      const newApiAddress = prompt(\"Inserisci il nuovo indirizzo dell'API endpoint:\", API_ENDPOINT_URL);\n      if (newApiAddress != null) changeEndpointUrl(newApiAddress);\n    }\n  };\n}\n","/**\n * @file\n * This file contains helper methods to style the main app theme\n * thanks to the Material-UI library.\n */\n\nexport function configureTheme() {\n  return {\n    palette: {\n      common: { black: '#000000', white: '#ffffff' },\n      background: { paper: '#ffffff', default: '#fafafa' },\n      primary: {\n        light: '#58a5f0',\n        main: '#0277bd',\n        dark: '#004c8c',\n        contrastText: '#ffffff'\n      },\n      secondary: {\n        light: '#ffff6b',\n        main: '#fdd835',\n        dark: '#c6a700',\n        contrastText: '#000000'\n      },\n      error: {\n        light: '#e57373',\n        main: '#f44336',\n        dark: '#d32f2f',\n        contrastText: '#ffffff'\n      },\n      approved: '#2eb72c'\n    },\n    typography: {\n      useNextVariants: true\n    }\n  };\n}\n"],"sourceRoot":""}